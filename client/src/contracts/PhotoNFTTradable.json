{
  "contractName": "PhotoNFTTradable",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "contract PhotoNFTData",
          "name": "_photoNFTData",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "ad",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "status",
          "type": "bool"
        }
      ],
      "name": "TradePremiumStatusChange",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "ad",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "status",
          "type": "bytes32"
        }
      ],
      "name": "TradeStatusChange",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "photoNFTData",
      "outputs": [
        {
          "internalType": "contract PhotoNFTData",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "trades",
      "outputs": [
        {
          "internalType": "address",
          "name": "seller",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "photoId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "photoPrice",
          "type": "uint256"
        },
        {
          "internalType": "bytes32",
          "name": "status",
          "type": "bytes32"
        },
        {
          "internalType": "bool",
          "name": "premiumStatus",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract PhotoNFT",
          "name": "photoNFT",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_photoId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_photoPrice",
          "type": "uint256"
        }
      ],
      "name": "openTradeWhenCreateNewPhotoNFT",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract PhotoNFT",
          "name": "photoNFT",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_photoId",
          "type": "uint256"
        }
      ],
      "name": "openTrade",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract PhotoNFT",
          "name": "photoNFT",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_photoId",
          "type": "uint256"
        }
      ],
      "name": "cancelTrade",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract PhotoNFT",
          "name": "photoNFT",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_photoId",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "_newState",
          "type": "bool"
        }
      ],
      "name": "updatePremiumStatus",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract PhotoNFT",
          "name": "_photoNFT",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_photoId",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_buyer",
          "type": "address"
        }
      ],
      "name": "transferOwnershipOfPhotoNFT",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract PhotoNFT",
          "name": "photoNFT",
          "type": "address"
        }
      ],
      "name": "getTrade",
      "outputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "seller",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "photoId",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "photoPrice",
              "type": "uint256"
            },
            {
              "internalType": "bytes32",
              "name": "status",
              "type": "bytes32"
            },
            {
              "internalType": "bool",
              "name": "premiumStatus",
              "type": "bool"
            }
          ],
          "internalType": "struct PhotoNFTTradable.Trade",
          "name": "trade_",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"contract PhotoNFTData\",\"name\":\"_photoNFTData\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"ad\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"status\",\"type\":\"bool\"}],\"name\":\"TradePremiumStatusChange\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"ad\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"status\",\"type\":\"bytes32\"}],\"name\":\"TradeStatusChange\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"contract PhotoNFT\",\"name\":\"photoNFT\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_photoId\",\"type\":\"uint256\"}],\"name\":\"cancelTrade\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract PhotoNFT\",\"name\":\"photoNFT\",\"type\":\"address\"}],\"name\":\"getTrade\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"seller\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"photoId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"photoPrice\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"status\",\"type\":\"bytes32\"},{\"internalType\":\"bool\",\"name\":\"premiumStatus\",\"type\":\"bool\"}],\"internalType\":\"struct PhotoNFTTradable.Trade\",\"name\":\"trade_\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract PhotoNFT\",\"name\":\"photoNFT\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_photoId\",\"type\":\"uint256\"}],\"name\":\"openTrade\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract PhotoNFT\",\"name\":\"photoNFT\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_photoId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_photoPrice\",\"type\":\"uint256\"}],\"name\":\"openTradeWhenCreateNewPhotoNFT\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"photoNFTData\",\"outputs\":[{\"internalType\":\"contract PhotoNFTData\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"trades\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"seller\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"photoId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"photoPrice\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"status\",\"type\":\"bytes32\"},{\"internalType\":\"bool\",\"name\":\"premiumStatus\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract PhotoNFT\",\"name\":\"_photoNFT\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_photoId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_buyer\",\"type\":\"address\"}],\"name\":\"transferOwnershipOfPhotoNFT\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract PhotoNFT\",\"name\":\"photoNFT\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_photoId\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"_newState\",\"type\":\"bool\"}],\"name\":\"updatePremiumStatus\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"cancelTrade(address,uint256)\":{\"details\":\"Cancels a trade by the seller.\"},\"getTrade(address)\":{\"details\":\"- Returns the details for a trade.\"},\"openTrade(address,uint256)\":{\"details\":\"Opens a trade by the seller.\"},\"openTradeWhenCreateNewPhotoNFT(address,uint256,uint256)\":{\"details\":\"Opens a new trade. Puts _photoId in escrow.\",\"params\":{\"_photoId\":\"The id for the photoId to trade.\",\"_photoPrice\":\"The amount of currency for which to trade the photoId.\"}},\"transferOwnershipOfPhotoNFT(address,uint256,address)\":{\"details\":\"Executes a trade. Must have approved this contract to transfer the amount of currency specified to the seller. Transfers ownership of the photoId to the filler.\"},\"updatePremiumStatus(address,uint256,bool)\":{\"details\":\"Opens a trade by the seller.\"}},\"title\":\"- PhotoNFTTradable contract\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"openTradeWhenCreateNewPhotoNFT(address,uint256,uint256)\":{\"notice\":\"- This method is only executed when a seller create a new PhotoNFT\"}},\"notice\":\"- This contract has role that put on sale of photoNFTs\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/contracts/PhotoNFTTradable.sol\":\"PhotoNFTTradable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"project:/contracts/PhotoNFT.sol\":{\"keccak256\":\"0xe6de1d7b2abe309028f71a000f0da09186344818a2110634ef5cc3c9e13fed85\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7c6320feb33ddff3f0c6070ff62fe714928104a7df10bca0a45844f53f5d4e9a\",\"dweb:/ipfs/QmYWyNLFFfuCFoVnkESM61RefTWz8EEzun7gPe7qrxmyuu\"]},\"project:/contracts/PhotoNFTData.sol\":{\"keccak256\":\"0xdca3ef462a7c8ae1b569084d146fdcfdb1af611831b4973a6e2fcdfb2dcfcbcc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f23d7dc5cea719bcd2380be623ccd286434828c8c20ee662736f41a22627e497\",\"dweb:/ipfs/QmV8L75vR9onZoKWJg2GCDUL3FQJKuXCwHN99q58qNQpr9\"]},\"project:/contracts/PhotoNFTTradable.sol\":{\"keccak256\":\"0x8ade7c358a9691f29ce156fd0f30a07fb05a204ba5780668be9c00dc2a28ae85\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://aadc583c30fde9ecba224f1c7f81171eec032f64ec6b5c52b978ca110ba35d13\",\"dweb:/ipfs/QmdPp1VEs7MwtUZnA8xVPt26TCpucPk982imHkNc6PSB5J\"]},\"project:/contracts/openzeppelin-solidity/contracts/token/ERC721/ERC721.sol\":{\"keccak256\":\"0xc25177ed1ea59b7933c0bf43f3204d74c80ba8e53b1039eeb14fc74b47de1eed\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://328c313f0e6532e000ae3ca3050e081bb469584dc5f852d9de3ddd98dfed2f1d\",\"dweb:/ipfs/QmYTj7kcMeSU5uA3DYLFtBf8zUyzyaZwAD9mTDoHpfR5QL\"]},\"project:/contracts/openzeppelin-solidity/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0xf0fe20bd400cead51aada7bdb015eacfad41e530e84cd6b49bfedf1274e9e579\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://13cffe9019d15aa2027b233b2f3db0401d8164650ac080faa7dc76ec74f88ca0\",\"dweb:/ipfs/QmQfJamQssogNgqx8gjQKTEFszxefrEczSVrS2edmjLiWe\"]},\"project:/contracts/openzeppelin-solidity/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0x24fc4c6299bee913b0a8ae0d512f7cbdb1a5af559d0b4abc150872cbab82c196\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://881bcb5aaa76bb8900418e65d5f9c412dbe7234d49b10b4d0bc34a8e00582d08\",\"dweb:/ipfs/Qmd16FnmVrSQqknnTuDroj4p7VaUaqkqaRmrz9W6oczkBN\"]},\"project:/contracts/openzeppelin-solidity/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":{\"keccak256\":\"0x8841e63dfadf2e6a2f4baf3179b5576bdd5834b46c6348f8694458c25dd01219\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4d9dca1d0fb388d19b84439ed661da6cfdb0580f6b00ac4f7d69f49b67a50f91\",\"dweb:/ipfs/QmaSXDa9bam1CuuvJmbwa38VhjMs5axWjJq4KSktNfqXsF\"]},\"project:/contracts/openzeppelin-solidity/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0x01ceb635c84e3096829dd737434ed16a0772e07e41313bc75ac51763b59e77ce\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d09c8ea4578de9645004f6a6bf80f4a839904fdb45d298eb970f670780165199\",\"dweb:/ipfs/QmRpKxfraAGvGRHrkewuQkBPRWAH5VQ9cav44hFPC3SVnA\"]},\"project:/contracts/openzeppelin-solidity/contracts/utils/Address.sol\":{\"keccak256\":\"0x85c79373fa21bb27e0c79326fc64f28d37fc09f85ac7742afe55405c4c3cf274\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7c1dcc8d5faab1747f83c9a8179a1e8477ba25473506ee153a949a0d511b8486\",\"dweb:/ipfs/QmVJ8RgJr7Wi6gCkoZnNJ9nfM4fcdF9kwGa7mswM3QtFwz\"]},\"project:/contracts/openzeppelin-solidity/contracts/utils/Context.sol\":{\"keccak256\":\"0x2e2ac762cc60af55c199a4926f4c360aa00cec4af6dfed7475fc866353ea6c58\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://98f72b227c30903022ee8a898b55dacbbcc73d633e10022edcaeea61e4ef312e\",\"dweb:/ipfs/QmedXrqXE7r6Pazs4aBfwDJNPdiw25ovisBiWZ3EACFQFh\"]},\"project:/contracts/openzeppelin-solidity/contracts/utils/Strings.sol\":{\"keccak256\":\"0xd2f5a48a2733d28b75fe2e72d2d529daedd929a15fa7352d9ac20f6cd3e669fb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2a9f46eba504744121b3bc97804c93cda7aef861cc56ea5f760f25fb280f71c9\",\"dweb:/ipfs/QmbszNNUMg9FwjjrJUJBZa3wmiQFMJ6rtBWbaNXrZyf8pF\"]},\"project:/contracts/openzeppelin-solidity/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x071cfd008ed1810ddf23f56bd1ce2f0c3983bc291559067e94618547f579e1f2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a3235dc4cbf8fe1bde8426a0515c2d19205953cce2bef84e635a74b1b0140250\",\"dweb:/ipfs/QmcLniP23L9VH3rSdoE4YnLosayZELS38z6HJCZQ3Q4Vq2\"]},\"project:/contracts/openzeppelin-solidity/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x7e30ce048ac2ce3cc97d725487ed5a82192bb939456f46e0cbe38f1b48644f9e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://93406f5266094615e2b829d0eb4a3a668c72a3a6562da91a9ea9044cd001dd80\",\"dweb:/ipfs/QmUqT5ZLn5HTvE4Bas9BA5RSCamz4p3KwbvEsNvNJ2taav\"]},\"project:/contracts/photo-nft-data/commons/PhotoNFTDataObjects.sol\":{\"keccak256\":\"0x8471db8a2653410096112274102a74d495706625fbfd153e56b96da5030c98fc\",\"urls\":[\"bzz-raw://d82b596e14a4bfe7d04cdcd7335e74f5370d9fc5e82a00d256f59263c5b9547e\",\"dweb:/ipfs/QmTmpJoXuJdgoz5kTpUsn158LpqYhV9cmfLAN5JsWTJGiH\"]},\"project:/contracts/photo-nft-data/commons/PhotoNFTDataStorages.sol\":{\"keccak256\":\"0x7fbe5ee2f32cfe2dcb99b1af8a100648f01ae0bcc51b5d1f8ba0b5a7e7663a4b\",\"urls\":[\"bzz-raw://a84fc564399aa7f26eb1345330f21e80eab84cef40f9ce4b72905ee777c019dc\",\"dweb:/ipfs/QmQs4oV8vC65SssnzQTbGNAd5vwgDDBUu8z8URDWFJqA7V\"]}},\"version\":1}",
  "bytecode": "0x60806040523480156200001157600080fd5b506040516200187438038062001874833981810160405281019062000037919062000104565b806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060006002819055505062000136565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620000b8826200008b565b9050919050565b6000620000cc82620000ab565b9050919050565b620000de81620000bf565b8114620000ea57600080fd5b50565b600081519050620000fe81620000d3565b92915050565b6000602082840312156200011d576200011c62000086565b5b60006200012d84828501620000ed565b91505092915050565b61172e80620001466000396000f3fe608060405234801561001057600080fd5b50600436106100885760003560e01c80638d6b52f31161005b5780638d6b52f3146100fd578063a9f752e514610119578063ab7a6c3e1461014d578063ec0395141461017d57610088565b8063493c21761461008d57806349b1d3e7146100a9578063759c4bf3146100c557806380a279c4146100e1575b600080fd5b6100a760048036038101906100a29190610ebb565b61019b565b005b6100c360048036038101906100be9190610f0e565b6102f9565b005b6100df60048036038101906100da9190610f61565b6104e5565b005b6100fb60048036038101906100f69190610f61565b610762565b005b61011760048036038101906101129190610fd9565b6109bb565b005b610133600480360381019061012e919061102c565b610b99565b60405161014495949392919061109f565b60405180910390f35b610167600480360381019061016291906110f2565b610bfc565b60405161017491906111c3565b60405180910390f35b610185610cea565b604051610192919061123d565b60405180910390f35b600083905060006101ab85610bfc565b90507f4f70656e00000000000000000000000000000000000000000000000000000000816060015114610213576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161020a906112b5565b60405180910390fd5b61021e858585610d0e565b8173ffffffffffffffffffffffffffffffffffffffff166323b872dd308584602001516040518463ffffffff1660e01b815260040161025f939291906112d5565b600060405180830381600087803b15801561027957600080fd5b505af115801561028d573d6000803e3d6000fd5b505050507f43616e63656c6c656400000000000000000000000000000000000000000000008160600181815250507fee0bd10dbd5c2151f43ed2fa6af0584fbad842aa901d657f39fffd140822ae70856040516102ea9190611332565b60405180910390a15050505050565b8273ffffffffffffffffffffffffffffffffffffffff166323b872dd3330856040518463ffffffff1660e01b8152600401610336939291906112d5565b600060405180830381600087803b15801561035057600080fd5b505af1158015610364573d6000803e3d6000fd5b5050505060016002600082825461037b9190611388565b925050819055506040518060a001604052803373ffffffffffffffffffffffffffffffffffffffff1681526020018381526020018281526020017f4f70656e00000000000000000000000000000000000000000000000000000000815260200160001515815250600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060208201518160010155604082015181600201556060820151816003015560808201518160040160006101000a81548160ff0219169083151502179055509050507fee0bd10dbd5c2151f43ed2fa6af0584fbad842aa901d657f39fffd140822ae70836040516104d89190611404565b60405180910390a1505050565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002090508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146105ba576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105b19061149d565b60405180910390fd5b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16639bab7f4a846040518263ffffffff1660e01b8152600401610613919061152a565b602060405180830381600087803b15801561062d57600080fd5b505af1158015610641573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610665919061156d565b508273ffffffffffffffffffffffffffffffffffffffff166323b872dd308360000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1684600101546040518463ffffffff1660e01b81526004016106cb939291906112d5565b600060405180830381600087803b1580156106e557600080fd5b505af11580156106f9573d6000803e3d6000fd5b505050507f43616e63656c6c6564000000000000000000000000000000000000000000000081600301819055507fee0bd10dbd5c2151f43ed2fa6af0584fbad842aa901d657f39fffd140822ae70836040516107559190611332565b60405180910390a1505050565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002090508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610837576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161082e9061160c565b60405180910390fd5b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16639bab7f4a846040518263ffffffff1660e01b81526004016108909190611678565b602060405180830381600087803b1580156108aa57600080fd5b505af11580156108be573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108e2919061156d565b508273ffffffffffffffffffffffffffffffffffffffff166323b872dd333084600101546040518463ffffffff1660e01b8152600401610924939291906112d5565b600060405180830381600087803b15801561093e57600080fd5b505af1158015610952573d6000803e3d6000fd5b505050507f4f70656e0000000000000000000000000000000000000000000000000000000081600301819055507fee0bd10dbd5c2151f43ed2fa6af0584fbad842aa901d657f39fffd140822ae70836040516109ae9190611404565b60405180910390a1505050565b6000600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002090508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610a90576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a879061160c565b60405180910390fd5b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663c4d55c6885846040518363ffffffff1660e01b8152600401610aeb9291906116a6565b602060405180830381600087803b158015610b0557600080fd5b505af1158015610b19573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b3d919061156d565b50818160040160006101000a81548160ff0219169083151502179055507ff914bff822f938e06c0aaceb42bb4ca99085426a1e493b755e716662d12163ee8483604051610b8b9291906116cf565b60405180910390a150505050565b60016020528060005260406000206000915090508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060010154908060020154908060030154908060040160009054906101000a900460ff16905085565b610c04610d9a565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206040518060a00160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016001820154815260200160028201548152602001600382015481526020016004820160009054906101000a900460ff161515151581525050905080915050919050565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000209050818160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050505050565b6040518060a00160405280600073ffffffffffffffffffffffffffffffffffffffff1681526020016000815260200160008152602001600080191681526020016000151581525090565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610e1482610de9565b9050919050565b6000610e2682610e09565b9050919050565b610e3681610e1b565b8114610e4157600080fd5b50565b600081359050610e5381610e2d565b92915050565b6000819050919050565b610e6c81610e59565b8114610e7757600080fd5b50565b600081359050610e8981610e63565b92915050565b610e9881610e09565b8114610ea357600080fd5b50565b600081359050610eb581610e8f565b92915050565b600080600060608486031215610ed457610ed3610de4565b5b6000610ee286828701610e44565b9350506020610ef386828701610e7a565b9250506040610f0486828701610ea6565b9150509250925092565b600080600060608486031215610f2757610f26610de4565b5b6000610f3586828701610e44565b9350506020610f4686828701610e7a565b9250506040610f5786828701610e7a565b9150509250925092565b60008060408385031215610f7857610f77610de4565b5b6000610f8685828601610e44565b9250506020610f9785828601610e7a565b9150509250929050565b60008115159050919050565b610fb681610fa1565b8114610fc157600080fd5b50565b600081359050610fd381610fad565b92915050565b600080600060608486031215610ff257610ff1610de4565b5b600061100086828701610e44565b935050602061101186828701610e7a565b925050604061102286828701610fc4565b9150509250925092565b60006020828403121561104257611041610de4565b5b600061105084828501610ea6565b91505092915050565b61106281610e09565b82525050565b61107181610e59565b82525050565b6000819050919050565b61108a81611077565b82525050565b61109981610fa1565b82525050565b600060a0820190506110b46000830188611059565b6110c16020830187611068565b6110ce6040830186611068565b6110db6060830185611081565b6110e86080830184611090565b9695505050505050565b60006020828403121561110857611107610de4565b5b600061111684828501610e44565b91505092915050565b61112881610e09565b82525050565b61113781610e59565b82525050565b61114681611077565b82525050565b61115581610fa1565b82525050565b60a082016000820151611171600085018261111f565b506020820151611184602085018261112e565b506040820151611197604085018261112e565b5060608201516111aa606085018261113d565b5060808201516111bd608085018261114c565b50505050565b600060a0820190506111d8600083018461115b565b92915050565b6000819050919050565b60006112036111fe6111f984610de9565b6111de565b610de9565b9050919050565b6000611215826111e8565b9050919050565b60006112278261120a565b9050919050565b6112378161121c565b82525050565b6000602082019050611252600083018461122e565b92915050565b600082825260208201905092915050565b7f5472616465206973206e6f74204f70656e2e0000000000000000000000000000600082015250565b600061129f601283611258565b91506112aa82611269565b602082019050919050565b600060208201905081810360008301526112ce81611292565b9050919050565b60006060820190506112ea6000830186611059565b6112f76020830185611059565b6113046040830184611068565b949350505050565b7f43616e63656c6c65640000000000000000000000000000000000000000000000815250565b60006040820190506113476000830184611059565b6113536020830161130c565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061139382610e59565b915061139e83610e59565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff038211156113d3576113d2611359565b5b828201905092915050565b7f4f70656e00000000000000000000000000000000000000000000000000000000815250565b60006040820190506114196000830184611059565b611425602083016113de565b92915050565b7f54726164652063616e2062652063616e63656c6c6564206f6e6c79206279207360008201527f656c6c65722e0000000000000000000000000000000000000000000000000000602082015250565b6000611487602683611258565b91506114928261142b565b604082019050919050565b600060208201905081810360008301526114b68161147a565b9050919050565b60006114c88261120a565b9050919050565b6114d8816114bd565b82525050565b7f43616e63656c6c65640000000000000000000000000000000000000000000000600082015250565b6000611514600983611258565b915061151f826114de565b602082019050919050565b600060408201905061153f60008301846114cf565b818103602083015261155081611507565b905092915050565b60008151905061156781610fad565b92915050565b60006020828403121561158357611582610de4565b5b600061159184828501611558565b91505092915050565b7f54726164652063616e206265206f70656e206f6e6c792062792073656c6c657260008201527f2e00000000000000000000000000000000000000000000000000000000000000602082015250565b60006115f6602183611258565b91506116018261159a565b604082019050919050565b60006020820190508181036000830152611625816115e9565b9050919050565b7f4f70656e00000000000000000000000000000000000000000000000000000000600082015250565b6000611662600483611258565b915061166d8261162c565b602082019050919050565b600060408201905061168d60008301846114cf565b818103602083015261169e81611655565b905092915050565b60006040820190506116bb60008301856114cf565b6116c86020830184611090565b9392505050565b60006040820190506116e46000830185611059565b6116f16020830184611090565b939250505056fea2646970667358221220a41d6b0dd5e7f0e54ee44cbb3b98c7abdcdfcc6bcc5555513d9c5f5f6604fe4464736f6c63430008090033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100885760003560e01c80638d6b52f31161005b5780638d6b52f3146100fd578063a9f752e514610119578063ab7a6c3e1461014d578063ec0395141461017d57610088565b8063493c21761461008d57806349b1d3e7146100a9578063759c4bf3146100c557806380a279c4146100e1575b600080fd5b6100a760048036038101906100a29190610ebb565b61019b565b005b6100c360048036038101906100be9190610f0e565b6102f9565b005b6100df60048036038101906100da9190610f61565b6104e5565b005b6100fb60048036038101906100f69190610f61565b610762565b005b61011760048036038101906101129190610fd9565b6109bb565b005b610133600480360381019061012e919061102c565b610b99565b60405161014495949392919061109f565b60405180910390f35b610167600480360381019061016291906110f2565b610bfc565b60405161017491906111c3565b60405180910390f35b610185610cea565b604051610192919061123d565b60405180910390f35b600083905060006101ab85610bfc565b90507f4f70656e00000000000000000000000000000000000000000000000000000000816060015114610213576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161020a906112b5565b60405180910390fd5b61021e858585610d0e565b8173ffffffffffffffffffffffffffffffffffffffff166323b872dd308584602001516040518463ffffffff1660e01b815260040161025f939291906112d5565b600060405180830381600087803b15801561027957600080fd5b505af115801561028d573d6000803e3d6000fd5b505050507f43616e63656c6c656400000000000000000000000000000000000000000000008160600181815250507fee0bd10dbd5c2151f43ed2fa6af0584fbad842aa901d657f39fffd140822ae70856040516102ea9190611332565b60405180910390a15050505050565b8273ffffffffffffffffffffffffffffffffffffffff166323b872dd3330856040518463ffffffff1660e01b8152600401610336939291906112d5565b600060405180830381600087803b15801561035057600080fd5b505af1158015610364573d6000803e3d6000fd5b5050505060016002600082825461037b9190611388565b925050819055506040518060a001604052803373ffffffffffffffffffffffffffffffffffffffff1681526020018381526020018281526020017f4f70656e00000000000000000000000000000000000000000000000000000000815260200160001515815250600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060208201518160010155604082015181600201556060820151816003015560808201518160040160006101000a81548160ff0219169083151502179055509050507fee0bd10dbd5c2151f43ed2fa6af0584fbad842aa901d657f39fffd140822ae70836040516104d89190611404565b60405180910390a1505050565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002090508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146105ba576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105b19061149d565b60405180910390fd5b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16639bab7f4a846040518263ffffffff1660e01b8152600401610613919061152a565b602060405180830381600087803b15801561062d57600080fd5b505af1158015610641573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610665919061156d565b508273ffffffffffffffffffffffffffffffffffffffff166323b872dd308360000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1684600101546040518463ffffffff1660e01b81526004016106cb939291906112d5565b600060405180830381600087803b1580156106e557600080fd5b505af11580156106f9573d6000803e3d6000fd5b505050507f43616e63656c6c6564000000000000000000000000000000000000000000000081600301819055507fee0bd10dbd5c2151f43ed2fa6af0584fbad842aa901d657f39fffd140822ae70836040516107559190611332565b60405180910390a1505050565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002090508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610837576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161082e9061160c565b60405180910390fd5b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16639bab7f4a846040518263ffffffff1660e01b81526004016108909190611678565b602060405180830381600087803b1580156108aa57600080fd5b505af11580156108be573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108e2919061156d565b508273ffffffffffffffffffffffffffffffffffffffff166323b872dd333084600101546040518463ffffffff1660e01b8152600401610924939291906112d5565b600060405180830381600087803b15801561093e57600080fd5b505af1158015610952573d6000803e3d6000fd5b505050507f4f70656e0000000000000000000000000000000000000000000000000000000081600301819055507fee0bd10dbd5c2151f43ed2fa6af0584fbad842aa901d657f39fffd140822ae70836040516109ae9190611404565b60405180910390a1505050565b6000600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002090508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610a90576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a879061160c565b60405180910390fd5b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663c4d55c6885846040518363ffffffff1660e01b8152600401610aeb9291906116a6565b602060405180830381600087803b158015610b0557600080fd5b505af1158015610b19573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b3d919061156d565b50818160040160006101000a81548160ff0219169083151502179055507ff914bff822f938e06c0aaceb42bb4ca99085426a1e493b755e716662d12163ee8483604051610b8b9291906116cf565b60405180910390a150505050565b60016020528060005260406000206000915090508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060010154908060020154908060030154908060040160009054906101000a900460ff16905085565b610c04610d9a565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206040518060a00160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016001820154815260200160028201548152602001600382015481526020016004820160009054906101000a900460ff161515151581525050905080915050919050565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000209050818160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050505050565b6040518060a00160405280600073ffffffffffffffffffffffffffffffffffffffff1681526020016000815260200160008152602001600080191681526020016000151581525090565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610e1482610de9565b9050919050565b6000610e2682610e09565b9050919050565b610e3681610e1b565b8114610e4157600080fd5b50565b600081359050610e5381610e2d565b92915050565b6000819050919050565b610e6c81610e59565b8114610e7757600080fd5b50565b600081359050610e8981610e63565b92915050565b610e9881610e09565b8114610ea357600080fd5b50565b600081359050610eb581610e8f565b92915050565b600080600060608486031215610ed457610ed3610de4565b5b6000610ee286828701610e44565b9350506020610ef386828701610e7a565b9250506040610f0486828701610ea6565b9150509250925092565b600080600060608486031215610f2757610f26610de4565b5b6000610f3586828701610e44565b9350506020610f4686828701610e7a565b9250506040610f5786828701610e7a565b9150509250925092565b60008060408385031215610f7857610f77610de4565b5b6000610f8685828601610e44565b9250506020610f9785828601610e7a565b9150509250929050565b60008115159050919050565b610fb681610fa1565b8114610fc157600080fd5b50565b600081359050610fd381610fad565b92915050565b600080600060608486031215610ff257610ff1610de4565b5b600061100086828701610e44565b935050602061101186828701610e7a565b925050604061102286828701610fc4565b9150509250925092565b60006020828403121561104257611041610de4565b5b600061105084828501610ea6565b91505092915050565b61106281610e09565b82525050565b61107181610e59565b82525050565b6000819050919050565b61108a81611077565b82525050565b61109981610fa1565b82525050565b600060a0820190506110b46000830188611059565b6110c16020830187611068565b6110ce6040830186611068565b6110db6060830185611081565b6110e86080830184611090565b9695505050505050565b60006020828403121561110857611107610de4565b5b600061111684828501610e44565b91505092915050565b61112881610e09565b82525050565b61113781610e59565b82525050565b61114681611077565b82525050565b61115581610fa1565b82525050565b60a082016000820151611171600085018261111f565b506020820151611184602085018261112e565b506040820151611197604085018261112e565b5060608201516111aa606085018261113d565b5060808201516111bd608085018261114c565b50505050565b600060a0820190506111d8600083018461115b565b92915050565b6000819050919050565b60006112036111fe6111f984610de9565b6111de565b610de9565b9050919050565b6000611215826111e8565b9050919050565b60006112278261120a565b9050919050565b6112378161121c565b82525050565b6000602082019050611252600083018461122e565b92915050565b600082825260208201905092915050565b7f5472616465206973206e6f74204f70656e2e0000000000000000000000000000600082015250565b600061129f601283611258565b91506112aa82611269565b602082019050919050565b600060208201905081810360008301526112ce81611292565b9050919050565b60006060820190506112ea6000830186611059565b6112f76020830185611059565b6113046040830184611068565b949350505050565b7f43616e63656c6c65640000000000000000000000000000000000000000000000815250565b60006040820190506113476000830184611059565b6113536020830161130c565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061139382610e59565b915061139e83610e59565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff038211156113d3576113d2611359565b5b828201905092915050565b7f4f70656e00000000000000000000000000000000000000000000000000000000815250565b60006040820190506114196000830184611059565b611425602083016113de565b92915050565b7f54726164652063616e2062652063616e63656c6c6564206f6e6c79206279207360008201527f656c6c65722e0000000000000000000000000000000000000000000000000000602082015250565b6000611487602683611258565b91506114928261142b565b604082019050919050565b600060208201905081810360008301526114b68161147a565b9050919050565b60006114c88261120a565b9050919050565b6114d8816114bd565b82525050565b7f43616e63656c6c65640000000000000000000000000000000000000000000000600082015250565b6000611514600983611258565b915061151f826114de565b602082019050919050565b600060408201905061153f60008301846114cf565b818103602083015261155081611507565b905092915050565b60008151905061156781610fad565b92915050565b60006020828403121561158357611582610de4565b5b600061159184828501611558565b91505092915050565b7f54726164652063616e206265206f70656e206f6e6c792062792073656c6c657260008201527f2e00000000000000000000000000000000000000000000000000000000000000602082015250565b60006115f6602183611258565b91506116018261159a565b604082019050919050565b60006020820190508181036000830152611625816115e9565b9050919050565b7f4f70656e00000000000000000000000000000000000000000000000000000000600082015250565b6000611662600483611258565b915061166d8261162c565b602082019050919050565b600060408201905061168d60008301846114cf565b818103602083015261169e81611655565b905092915050565b60006040820190506116bb60008301856114cf565b6116c86020830184611090565b9392505050565b60006040820190506116e46000830185611059565b6116f16020830184611090565b939250505056fea2646970667358221220a41d6b0dd5e7f0e54ee44cbb3b98c7abdcdfcc6bcc5555513d9c5f5f6604fe4464736f6c63430008090033",
  "immutableReferences": {},
  "generatedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:1441:241",
        "statements": [
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "47:35:241",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "57:19:241",
                  "value": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "73:2:241",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "67:5:241"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "67:9:241"
                  },
                  "variableNames": [
                    {
                      "name": "memPtr",
                      "nodeType": "YulIdentifier",
                      "src": "57:6:241"
                    }
                  ]
                }
              ]
            },
            "name": "allocate_unbounded",
            "nodeType": "YulFunctionDefinition",
            "returnVariables": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "40:6:241",
                "type": ""
              }
            ],
            "src": "7:75:241"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "177:28:241",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "194:1:241",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "197:1:241",
                        "type": "",
                        "value": "0"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "187:6:241"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "187:12:241"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "187:12:241"
                }
              ]
            },
            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
            "nodeType": "YulFunctionDefinition",
            "src": "88:117:241"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "300:28:241",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "317:1:241",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "320:1:241",
                        "type": "",
                        "value": "0"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "310:6:241"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "310:12:241"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "310:12:241"
                }
              ]
            },
            "name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
            "nodeType": "YulFunctionDefinition",
            "src": "211:117:241"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "379:81:241",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "389:65:241",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "404:5:241"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "411:42:241",
                        "type": "",
                        "value": "0xffffffffffffffffffffffffffffffffffffffff"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "400:3:241"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "400:54:241"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "389:7:241"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_uint160",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "361:5:241",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "371:7:241",
                "type": ""
              }
            ],
            "src": "334:126:241"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "511:51:241",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "521:35:241",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "550:5:241"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint160",
                      "nodeType": "YulIdentifier",
                      "src": "532:17:241"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "532:24:241"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "521:7:241"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "493:5:241",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "503:7:241",
                "type": ""
              }
            ],
            "src": "466:96:241"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "633:51:241",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "643:35:241",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "672:5:241"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "654:17:241"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "654:24:241"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "643:7:241"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_contract$_PhotoNFTData_$429",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "615:5:241",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "625:7:241",
                "type": ""
              }
            ],
            "src": "568:116:241"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "753:99:241",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "830:16:241",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "839:1:241",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "842:1:241",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "832:6:241"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "832:12:241"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "832:12:241"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "776:5:241"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "821:5:241"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_contract$_PhotoNFTData_$429",
                              "nodeType": "YulIdentifier",
                              "src": "783:37:241"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "783:44:241"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "773:2:241"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "773:55:241"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "766:6:241"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "766:63:241"
                  },
                  "nodeType": "YulIf",
                  "src": "763:83:241"
                }
              ]
            },
            "name": "validator_revert_t_contract$_PhotoNFTData_$429",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "746:5:241",
                "type": ""
              }
            ],
            "src": "690:162:241"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "941:100:241",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "951:22:241",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "966:6:241"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "960:5:241"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "960:13:241"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "951:5:241"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "1029:5:241"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_contract$_PhotoNFTData_$429",
                      "nodeType": "YulIdentifier",
                      "src": "982:46:241"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "982:53:241"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "982:53:241"
                }
              ]
            },
            "name": "abi_decode_t_contract$_PhotoNFTData_$429_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "919:6:241",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "927:3:241",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "935:5:241",
                "type": ""
              }
            ],
            "src": "858:183:241"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1144:294:241",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1190:83:241",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                            "nodeType": "YulIdentifier",
                            "src": "1192:77:241"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1192:79:241"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1192:79:241"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1165:7:241"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1174:9:241"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "1161:3:241"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1161:23:241"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1186:2:241",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "1157:3:241"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1157:32:241"
                  },
                  "nodeType": "YulIf",
                  "src": "1154:119:241"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "1283:148:241",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "1298:15:241",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1312:1:241",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "1302:6:241",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "1327:94:241",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "1393:9:241"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "1404:6:241"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1389:3:241"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1389:22:241"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1413:7:241"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_contract$_PhotoNFTData_$429_fromMemory",
                          "nodeType": "YulIdentifier",
                          "src": "1337:51:241"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1337:84:241"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "1327:6:241"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_contract$_PhotoNFTData_$429_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1114:9:241",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "1125:7:241",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1137:6:241",
                "type": ""
              }
            ],
            "src": "1047:391:241"
          }
        ]
      },
      "contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_contract$_PhotoNFTData_$429(value) -> cleaned {\n        cleaned := cleanup_t_address(value)\n    }\n\n    function validator_revert_t_contract$_PhotoNFTData_$429(value) {\n        if iszero(eq(value, cleanup_t_contract$_PhotoNFTData_$429(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_contract$_PhotoNFTData_$429_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_contract$_PhotoNFTData_$429(value)\n    }\n\n    function abi_decode_tuple_t_contract$_PhotoNFTData_$429_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_contract$_PhotoNFTData_$429_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n}\n",
      "id": 241,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "deployedGeneratedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:18346:241",
        "statements": [
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "47:35:241",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "57:19:241",
                  "value": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "73:2:241",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "67:5:241"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "67:9:241"
                  },
                  "variableNames": [
                    {
                      "name": "memPtr",
                      "nodeType": "YulIdentifier",
                      "src": "57:6:241"
                    }
                  ]
                }
              ]
            },
            "name": "allocate_unbounded",
            "nodeType": "YulFunctionDefinition",
            "returnVariables": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "40:6:241",
                "type": ""
              }
            ],
            "src": "7:75:241"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "177:28:241",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "194:1:241",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "197:1:241",
                        "type": "",
                        "value": "0"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "187:6:241"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "187:12:241"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "187:12:241"
                }
              ]
            },
            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
            "nodeType": "YulFunctionDefinition",
            "src": "88:117:241"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "300:28:241",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "317:1:241",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "320:1:241",
                        "type": "",
                        "value": "0"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "310:6:241"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "310:12:241"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "310:12:241"
                }
              ]
            },
            "name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
            "nodeType": "YulFunctionDefinition",
            "src": "211:117:241"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "379:81:241",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "389:65:241",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "404:5:241"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "411:42:241",
                        "type": "",
                        "value": "0xffffffffffffffffffffffffffffffffffffffff"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "400:3:241"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "400:54:241"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "389:7:241"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_uint160",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "361:5:241",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "371:7:241",
                "type": ""
              }
            ],
            "src": "334:126:241"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "511:51:241",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "521:35:241",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "550:5:241"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint160",
                      "nodeType": "YulIdentifier",
                      "src": "532:17:241"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "532:24:241"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "521:7:241"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "493:5:241",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "503:7:241",
                "type": ""
              }
            ],
            "src": "466:96:241"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "629:51:241",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "639:35:241",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "668:5:241"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "650:17:241"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "650:24:241"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "639:7:241"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_contract$_PhotoNFT_$133",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "611:5:241",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "621:7:241",
                "type": ""
              }
            ],
            "src": "568:112:241"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "745:95:241",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "818:16:241",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "827:1:241",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "830:1:241",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "820:6:241"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "820:12:241"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "820:12:241"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "768:5:241"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "809:5:241"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_contract$_PhotoNFT_$133",
                              "nodeType": "YulIdentifier",
                              "src": "775:33:241"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "775:40:241"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "765:2:241"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "765:51:241"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "758:6:241"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "758:59:241"
                  },
                  "nodeType": "YulIf",
                  "src": "755:79:241"
                }
              ]
            },
            "name": "validator_revert_t_contract$_PhotoNFT_$133",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "738:5:241",
                "type": ""
              }
            ],
            "src": "686:154:241"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "914:103:241",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "924:29:241",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "946:6:241"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "933:12:241"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "933:20:241"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "924:5:241"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "1005:5:241"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_contract$_PhotoNFT_$133",
                      "nodeType": "YulIdentifier",
                      "src": "962:42:241"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "962:49:241"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "962:49:241"
                }
              ]
            },
            "name": "abi_decode_t_contract$_PhotoNFT_$133",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "892:6:241",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "900:3:241",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "908:5:241",
                "type": ""
              }
            ],
            "src": "846:171:241"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1068:32:241",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1078:16:241",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "1089:5:241"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "1078:7:241"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1050:5:241",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "1060:7:241",
                "type": ""
              }
            ],
            "src": "1023:77:241"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1149:79:241",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1206:16:241",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1215:1:241",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1218:1:241",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1208:6:241"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1208:12:241"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1208:12:241"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "1172:5:241"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "1197:5:241"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_uint256",
                              "nodeType": "YulIdentifier",
                              "src": "1179:17:241"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1179:24:241"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "1169:2:241"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1169:35:241"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "1162:6:241"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1162:43:241"
                  },
                  "nodeType": "YulIf",
                  "src": "1159:63:241"
                }
              ]
            },
            "name": "validator_revert_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1142:5:241",
                "type": ""
              }
            ],
            "src": "1106:122:241"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1286:87:241",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1296:29:241",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "1318:6:241"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "1305:12:241"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1305:20:241"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "1296:5:241"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "1361:5:241"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "1334:26:241"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1334:33:241"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1334:33:241"
                }
              ]
            },
            "name": "abi_decode_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "1264:6:241",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "1272:3:241",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1280:5:241",
                "type": ""
              }
            ],
            "src": "1234:139:241"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1422:79:241",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1479:16:241",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1488:1:241",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1491:1:241",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1481:6:241"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1481:12:241"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1481:12:241"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "1445:5:241"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "1470:5:241"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_address",
                              "nodeType": "YulIdentifier",
                              "src": "1452:17:241"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1452:24:241"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "1442:2:241"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1442:35:241"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "1435:6:241"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1435:43:241"
                  },
                  "nodeType": "YulIf",
                  "src": "1432:63:241"
                }
              ]
            },
            "name": "validator_revert_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1415:5:241",
                "type": ""
              }
            ],
            "src": "1379:122:241"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1559:87:241",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1569:29:241",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "1591:6:241"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "1578:12:241"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1578:20:241"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "1569:5:241"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "1634:5:241"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "1607:26:241"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1607:33:241"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1607:33:241"
                }
              ]
            },
            "name": "abi_decode_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "1537:6:241",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "1545:3:241",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1553:5:241",
                "type": ""
              }
            ],
            "src": "1507:139:241"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1768:535:241",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1814:83:241",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                            "nodeType": "YulIdentifier",
                            "src": "1816:77:241"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1816:79:241"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1816:79:241"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1789:7:241"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1798:9:241"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "1785:3:241"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1785:23:241"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1810:2:241",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "1781:3:241"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1781:32:241"
                  },
                  "nodeType": "YulIf",
                  "src": "1778:119:241"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "1907:133:241",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "1922:15:241",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1936:1:241",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "1926:6:241",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "1951:79:241",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "2002:9:241"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "2013:6:241"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1998:3:241"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1998:22:241"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2022:7:241"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_contract$_PhotoNFT_$133",
                          "nodeType": "YulIdentifier",
                          "src": "1961:36:241"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1961:69:241"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "1951:6:241"
                        }
                      ]
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "2050:118:241",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "2065:16:241",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2079:2:241",
                        "type": "",
                        "value": "32"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "2069:6:241",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "2095:63:241",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "2130:9:241"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "2141:6:241"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "2126:3:241"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2126:22:241"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2150:7:241"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "2105:20:241"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2105:53:241"
                      },
                      "variableNames": [
                        {
                          "name": "value1",
                          "nodeType": "YulIdentifier",
                          "src": "2095:6:241"
                        }
                      ]
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "2178:118:241",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "2193:16:241",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2207:2:241",
                        "type": "",
                        "value": "64"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "2197:6:241",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "2223:63:241",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "2258:9:241"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "2269:6:241"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "2254:3:241"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2254:22:241"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2278:7:241"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "2233:20:241"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2233:53:241"
                      },
                      "variableNames": [
                        {
                          "name": "value2",
                          "nodeType": "YulIdentifier",
                          "src": "2223:6:241"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_contract$_PhotoNFT_$133t_uint256t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1722:9:241",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "1733:7:241",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1745:6:241",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "1753:6:241",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "1761:6:241",
                "type": ""
              }
            ],
            "src": "1652:651:241"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2425:535:241",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2471:83:241",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                            "nodeType": "YulIdentifier",
                            "src": "2473:77:241"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2473:79:241"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2473:79:241"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2446:7:241"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2455:9:241"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "2442:3:241"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2442:23:241"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2467:2:241",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "2438:3:241"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2438:32:241"
                  },
                  "nodeType": "YulIf",
                  "src": "2435:119:241"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "2564:133:241",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "2579:15:241",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2593:1:241",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "2583:6:241",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "2608:79:241",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "2659:9:241"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "2670:6:241"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "2655:3:241"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2655:22:241"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2679:7:241"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_contract$_PhotoNFT_$133",
                          "nodeType": "YulIdentifier",
                          "src": "2618:36:241"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2618:69:241"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "2608:6:241"
                        }
                      ]
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "2707:118:241",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "2722:16:241",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2736:2:241",
                        "type": "",
                        "value": "32"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "2726:6:241",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "2752:63:241",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "2787:9:241"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "2798:6:241"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "2783:3:241"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2783:22:241"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2807:7:241"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "2762:20:241"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2762:53:241"
                      },
                      "variableNames": [
                        {
                          "name": "value1",
                          "nodeType": "YulIdentifier",
                          "src": "2752:6:241"
                        }
                      ]
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "2835:118:241",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "2850:16:241",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2864:2:241",
                        "type": "",
                        "value": "64"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "2854:6:241",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "2880:63:241",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "2915:9:241"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "2926:6:241"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "2911:3:241"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2911:22:241"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2935:7:241"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "2890:20:241"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2890:53:241"
                      },
                      "variableNames": [
                        {
                          "name": "value2",
                          "nodeType": "YulIdentifier",
                          "src": "2880:6:241"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_contract$_PhotoNFT_$133t_uint256t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2379:9:241",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "2390:7:241",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2402:6:241",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "2410:6:241",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "2418:6:241",
                "type": ""
              }
            ],
            "src": "2309:651:241"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3065:407:241",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "3111:83:241",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                            "nodeType": "YulIdentifier",
                            "src": "3113:77:241"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3113:79:241"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3113:79:241"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "3086:7:241"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3095:9:241"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "3082:3:241"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3082:23:241"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3107:2:241",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "3078:3:241"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3078:32:241"
                  },
                  "nodeType": "YulIf",
                  "src": "3075:119:241"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "3204:133:241",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "3219:15:241",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3233:1:241",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "3223:6:241",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "3248:79:241",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "3299:9:241"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "3310:6:241"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "3295:3:241"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3295:22:241"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "3319:7:241"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_contract$_PhotoNFT_$133",
                          "nodeType": "YulIdentifier",
                          "src": "3258:36:241"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3258:69:241"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "3248:6:241"
                        }
                      ]
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "3347:118:241",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "3362:16:241",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3376:2:241",
                        "type": "",
                        "value": "32"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "3366:6:241",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "3392:63:241",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "3427:9:241"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "3438:6:241"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "3423:3:241"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3423:22:241"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "3447:7:241"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "3402:20:241"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3402:53:241"
                      },
                      "variableNames": [
                        {
                          "name": "value1",
                          "nodeType": "YulIdentifier",
                          "src": "3392:6:241"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_contract$_PhotoNFT_$133t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3027:9:241",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "3038:7:241",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "3050:6:241",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "3058:6:241",
                "type": ""
              }
            ],
            "src": "2966:506:241"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3520:48:241",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3530:32:241",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "3555:5:241"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "3548:6:241"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3548:13:241"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "3541:6:241"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3541:21:241"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "3530:7:241"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_bool",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "3502:5:241",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "3512:7:241",
                "type": ""
              }
            ],
            "src": "3478:90:241"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3614:76:241",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "3668:16:241",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3677:1:241",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3680:1:241",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "3670:6:241"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3670:12:241"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3670:12:241"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "3637:5:241"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "3659:5:241"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_bool",
                              "nodeType": "YulIdentifier",
                              "src": "3644:14:241"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3644:21:241"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "3634:2:241"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3634:32:241"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "3627:6:241"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3627:40:241"
                  },
                  "nodeType": "YulIf",
                  "src": "3624:60:241"
                }
              ]
            },
            "name": "validator_revert_t_bool",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "3607:5:241",
                "type": ""
              }
            ],
            "src": "3574:116:241"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3745:84:241",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3755:29:241",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "3777:6:241"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "3764:12:241"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3764:20:241"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "3755:5:241"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "3817:5:241"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_bool",
                      "nodeType": "YulIdentifier",
                      "src": "3793:23:241"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3793:30:241"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3793:30:241"
                }
              ]
            },
            "name": "abi_decode_t_bool",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "3723:6:241",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "3731:3:241",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "3739:5:241",
                "type": ""
              }
            ],
            "src": "3696:133:241"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3948:532:241",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "3994:83:241",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                            "nodeType": "YulIdentifier",
                            "src": "3996:77:241"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3996:79:241"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3996:79:241"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "3969:7:241"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3978:9:241"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "3965:3:241"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3965:23:241"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3990:2:241",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "3961:3:241"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3961:32:241"
                  },
                  "nodeType": "YulIf",
                  "src": "3958:119:241"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "4087:133:241",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "4102:15:241",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4116:1:241",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "4106:6:241",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "4131:79:241",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "4182:9:241"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "4193:6:241"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "4178:3:241"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "4178:22:241"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "4202:7:241"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_contract$_PhotoNFT_$133",
                          "nodeType": "YulIdentifier",
                          "src": "4141:36:241"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4141:69:241"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "4131:6:241"
                        }
                      ]
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "4230:118:241",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "4245:16:241",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4259:2:241",
                        "type": "",
                        "value": "32"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "4249:6:241",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "4275:63:241",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "4310:9:241"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "4321:6:241"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "4306:3:241"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "4306:22:241"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "4330:7:241"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "4285:20:241"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4285:53:241"
                      },
                      "variableNames": [
                        {
                          "name": "value1",
                          "nodeType": "YulIdentifier",
                          "src": "4275:6:241"
                        }
                      ]
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "4358:115:241",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "4373:16:241",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4387:2:241",
                        "type": "",
                        "value": "64"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "4377:6:241",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "4403:60:241",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "4435:9:241"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "4446:6:241"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "4431:3:241"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "4431:22:241"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "4455:7:241"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_bool",
                          "nodeType": "YulIdentifier",
                          "src": "4413:17:241"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4413:50:241"
                      },
                      "variableNames": [
                        {
                          "name": "value2",
                          "nodeType": "YulIdentifier",
                          "src": "4403:6:241"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_contract$_PhotoNFT_$133t_uint256t_bool",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3902:9:241",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "3913:7:241",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "3925:6:241",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "3933:6:241",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "3941:6:241",
                "type": ""
              }
            ],
            "src": "3835:645:241"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4552:263:241",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "4598:83:241",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                            "nodeType": "YulIdentifier",
                            "src": "4600:77:241"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "4600:79:241"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "4600:79:241"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "4573:7:241"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4582:9:241"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "4569:3:241"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4569:23:241"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4594:2:241",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "4565:3:241"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4565:32:241"
                  },
                  "nodeType": "YulIf",
                  "src": "4562:119:241"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "4691:117:241",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "4706:15:241",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4720:1:241",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "4710:6:241",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "4735:63:241",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "4770:9:241"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "4781:6:241"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "4766:3:241"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "4766:22:241"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "4790:7:241"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "4745:20:241"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4745:53:241"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "4735:6:241"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4522:9:241",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "4533:7:241",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "4545:6:241",
                "type": ""
              }
            ],
            "src": "4486:329:241"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4886:53:241",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "4903:3:241"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "4926:5:241"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "4908:17:241"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4908:24:241"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4896:6:241"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4896:37:241"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4896:37:241"
                }
              ]
            },
            "name": "abi_encode_t_address_to_t_address_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "4874:5:241",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "4881:3:241",
                "type": ""
              }
            ],
            "src": "4821:118:241"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5010:53:241",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "5027:3:241"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "5050:5:241"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "5032:17:241"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5032:24:241"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5020:6:241"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5020:37:241"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5020:37:241"
                }
              ]
            },
            "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "4998:5:241",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "5005:3:241",
                "type": ""
              }
            ],
            "src": "4945:118:241"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5114:32:241",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "5124:16:241",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "5135:5:241"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "5124:7:241"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_bytes32",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "5096:5:241",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "5106:7:241",
                "type": ""
              }
            ],
            "src": "5069:77:241"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5217:53:241",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "5234:3:241"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "5257:5:241"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_bytes32",
                          "nodeType": "YulIdentifier",
                          "src": "5239:17:241"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5239:24:241"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5227:6:241"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5227:37:241"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5227:37:241"
                }
              ]
            },
            "name": "abi_encode_t_bytes32_to_t_bytes32_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "5205:5:241",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "5212:3:241",
                "type": ""
              }
            ],
            "src": "5152:118:241"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5335:50:241",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "5352:3:241"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "5372:5:241"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_bool",
                          "nodeType": "YulIdentifier",
                          "src": "5357:14:241"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5357:21:241"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5345:6:241"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5345:34:241"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5345:34:241"
                }
              ]
            },
            "name": "abi_encode_t_bool_to_t_bool_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "5323:5:241",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "5330:3:241",
                "type": ""
              }
            ],
            "src": "5276:109:241"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5595:448:241",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "5605:27:241",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5617:9:241"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5628:3:241",
                        "type": "",
                        "value": "160"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5613:3:241"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5613:19:241"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "5605:4:241"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "5686:6:241"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5699:9:241"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5710:1:241",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5695:3:241"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5695:17:241"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "5642:43:241"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5642:71:241"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5642:71:241"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "5767:6:241"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5780:9:241"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5791:2:241",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5776:3:241"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5776:18:241"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "5723:43:241"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5723:72:241"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5723:72:241"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value2",
                        "nodeType": "YulIdentifier",
                        "src": "5849:6:241"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5862:9:241"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5873:2:241",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5858:3:241"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5858:18:241"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "5805:43:241"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5805:72:241"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5805:72:241"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value3",
                        "nodeType": "YulIdentifier",
                        "src": "5931:6:241"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5944:9:241"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5955:2:241",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5940:3:241"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5940:18:241"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_bytes32_to_t_bytes32_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "5887:43:241"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5887:72:241"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5887:72:241"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value4",
                        "nodeType": "YulIdentifier",
                        "src": "6007:6:241"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6020:9:241"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6031:3:241",
                            "type": "",
                            "value": "128"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6016:3:241"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6016:19:241"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_bool_to_t_bool_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "5969:37:241"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5969:67:241"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5969:67:241"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_uint256_t_uint256_t_bytes32_t_bool__to_t_address_t_uint256_t_uint256_t_bytes32_t_bool__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "5535:9:241",
                "type": ""
              },
              {
                "name": "value4",
                "nodeType": "YulTypedName",
                "src": "5547:6:241",
                "type": ""
              },
              {
                "name": "value3",
                "nodeType": "YulTypedName",
                "src": "5555:6:241",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "5563:6:241",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "5571:6:241",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "5579:6:241",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "5590:4:241",
                "type": ""
              }
            ],
            "src": "5391:652:241"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6131:279:241",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "6177:83:241",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                            "nodeType": "YulIdentifier",
                            "src": "6179:77:241"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "6179:79:241"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "6179:79:241"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "6152:7:241"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6161:9:241"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "6148:3:241"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6148:23:241"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6173:2:241",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "6144:3:241"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6144:32:241"
                  },
                  "nodeType": "YulIf",
                  "src": "6141:119:241"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "6270:133:241",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "6285:15:241",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6299:1:241",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "6289:6:241",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "6314:79:241",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "6365:9:241"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "6376:6:241"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "6361:3:241"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "6361:22:241"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "6385:7:241"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_contract$_PhotoNFT_$133",
                          "nodeType": "YulIdentifier",
                          "src": "6324:36:241"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6324:69:241"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "6314:6:241"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_contract$_PhotoNFT_$133",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "6101:9:241",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "6112:7:241",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "6124:6:241",
                "type": ""
              }
            ],
            "src": "6049:361:241"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6471:53:241",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "6488:3:241"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "6511:5:241"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "6493:17:241"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6493:24:241"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6481:6:241"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6481:37:241"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6481:37:241"
                }
              ]
            },
            "name": "abi_encode_t_address_to_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "6459:5:241",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "6466:3:241",
                "type": ""
              }
            ],
            "src": "6416:108:241"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6585:53:241",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "6602:3:241"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "6625:5:241"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "6607:17:241"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6607:24:241"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6595:6:241"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6595:37:241"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6595:37:241"
                }
              ]
            },
            "name": "abi_encode_t_uint256_to_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "6573:5:241",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "6580:3:241",
                "type": ""
              }
            ],
            "src": "6530:108:241"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6699:53:241",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "6716:3:241"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "6739:5:241"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_bytes32",
                          "nodeType": "YulIdentifier",
                          "src": "6721:17:241"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6721:24:241"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6709:6:241"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6709:37:241"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6709:37:241"
                }
              ]
            },
            "name": "abi_encode_t_bytes32_to_t_bytes32",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "6687:5:241",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "6694:3:241",
                "type": ""
              }
            ],
            "src": "6644:108:241"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6807:50:241",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "6824:3:241"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "6844:5:241"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_bool",
                          "nodeType": "YulIdentifier",
                          "src": "6829:14:241"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6829:21:241"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6817:6:241"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6817:34:241"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6817:34:241"
                }
              ]
            },
            "name": "abi_encode_t_bool_to_t_bool",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "6795:5:241",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "6802:3:241",
                "type": ""
              }
            ],
            "src": "6758:99:241"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7043:929:241",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "7053:26:241",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "7069:3:241"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7074:4:241",
                        "type": "",
                        "value": "0xa0"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "7065:3:241"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7065:14:241"
                  },
                  "variables": [
                    {
                      "name": "tail",
                      "nodeType": "YulTypedName",
                      "src": "7057:4:241",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "7089:166:241",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "7126:43:241",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "7156:5:241"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "7163:4:241",
                                "type": "",
                                "value": "0x00"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "7152:3:241"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "7152:16:241"
                          }
                        ],
                        "functionName": {
                          "name": "mload",
                          "nodeType": "YulIdentifier",
                          "src": "7146:5:241"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7146:23:241"
                      },
                      "variables": [
                        {
                          "name": "memberValue0",
                          "nodeType": "YulTypedName",
                          "src": "7130:12:241",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "memberValue0",
                            "nodeType": "YulIdentifier",
                            "src": "7216:12:241"
                          },
                          {
                            "arguments": [
                              {
                                "name": "pos",
                                "nodeType": "YulIdentifier",
                                "src": "7234:3:241"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "7239:4:241",
                                "type": "",
                                "value": "0x00"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "7230:3:241"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "7230:14:241"
                          }
                        ],
                        "functionName": {
                          "name": "abi_encode_t_address_to_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "7182:33:241"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7182:63:241"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "7182:63:241"
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "7265:167:241",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "7303:43:241",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "7333:5:241"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "7340:4:241",
                                "type": "",
                                "value": "0x20"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "7329:3:241"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "7329:16:241"
                          }
                        ],
                        "functionName": {
                          "name": "mload",
                          "nodeType": "YulIdentifier",
                          "src": "7323:5:241"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7323:23:241"
                      },
                      "variables": [
                        {
                          "name": "memberValue0",
                          "nodeType": "YulTypedName",
                          "src": "7307:12:241",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "memberValue0",
                            "nodeType": "YulIdentifier",
                            "src": "7393:12:241"
                          },
                          {
                            "arguments": [
                              {
                                "name": "pos",
                                "nodeType": "YulIdentifier",
                                "src": "7411:3:241"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "7416:4:241",
                                "type": "",
                                "value": "0x20"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "7407:3:241"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "7407:14:241"
                          }
                        ],
                        "functionName": {
                          "name": "abi_encode_t_uint256_to_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "7359:33:241"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7359:63:241"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "7359:63:241"
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "7442:170:241",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "7483:43:241",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "7513:5:241"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "7520:4:241",
                                "type": "",
                                "value": "0x40"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "7509:3:241"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "7509:16:241"
                          }
                        ],
                        "functionName": {
                          "name": "mload",
                          "nodeType": "YulIdentifier",
                          "src": "7503:5:241"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7503:23:241"
                      },
                      "variables": [
                        {
                          "name": "memberValue0",
                          "nodeType": "YulTypedName",
                          "src": "7487:12:241",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "memberValue0",
                            "nodeType": "YulIdentifier",
                            "src": "7573:12:241"
                          },
                          {
                            "arguments": [
                              {
                                "name": "pos",
                                "nodeType": "YulIdentifier",
                                "src": "7591:3:241"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "7596:4:241",
                                "type": "",
                                "value": "0x40"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "7587:3:241"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "7587:14:241"
                          }
                        ],
                        "functionName": {
                          "name": "abi_encode_t_uint256_to_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "7539:33:241"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7539:63:241"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "7539:63:241"
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "7622:166:241",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "7659:43:241",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "7689:5:241"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "7696:4:241",
                                "type": "",
                                "value": "0x60"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "7685:3:241"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "7685:16:241"
                          }
                        ],
                        "functionName": {
                          "name": "mload",
                          "nodeType": "YulIdentifier",
                          "src": "7679:5:241"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7679:23:241"
                      },
                      "variables": [
                        {
                          "name": "memberValue0",
                          "nodeType": "YulTypedName",
                          "src": "7663:12:241",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "memberValue0",
                            "nodeType": "YulIdentifier",
                            "src": "7749:12:241"
                          },
                          {
                            "arguments": [
                              {
                                "name": "pos",
                                "nodeType": "YulIdentifier",
                                "src": "7767:3:241"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "7772:4:241",
                                "type": "",
                                "value": "0x60"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "7763:3:241"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "7763:14:241"
                          }
                        ],
                        "functionName": {
                          "name": "abi_encode_t_bytes32_to_t_bytes32",
                          "nodeType": "YulIdentifier",
                          "src": "7715:33:241"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7715:63:241"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "7715:63:241"
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "7798:167:241",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "7842:43:241",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "7872:5:241"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "7879:4:241",
                                "type": "",
                                "value": "0x80"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "7868:3:241"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "7868:16:241"
                          }
                        ],
                        "functionName": {
                          "name": "mload",
                          "nodeType": "YulIdentifier",
                          "src": "7862:5:241"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7862:23:241"
                      },
                      "variables": [
                        {
                          "name": "memberValue0",
                          "nodeType": "YulTypedName",
                          "src": "7846:12:241",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "memberValue0",
                            "nodeType": "YulIdentifier",
                            "src": "7926:12:241"
                          },
                          {
                            "arguments": [
                              {
                                "name": "pos",
                                "nodeType": "YulIdentifier",
                                "src": "7944:3:241"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "7949:4:241",
                                "type": "",
                                "value": "0x80"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "7940:3:241"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "7940:14:241"
                          }
                        ],
                        "functionName": {
                          "name": "abi_encode_t_bool_to_t_bool",
                          "nodeType": "YulIdentifier",
                          "src": "7898:27:241"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7898:57:241"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "7898:57:241"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_struct$_Trade_$995_memory_ptr_to_t_struct$_Trade_$995_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "7030:5:241",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "7037:3:241",
                "type": ""
              }
            ],
            "src": "6933:1039:241"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8120:169:241",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "8130:27:241",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "8142:9:241"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8153:3:241",
                        "type": "",
                        "value": "160"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "8138:3:241"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8138:19:241"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "8130:4:241"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "8255:6:241"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8268:9:241"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8279:1:241",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8264:3:241"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8264:17:241"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_struct$_Trade_$995_memory_ptr_to_t_struct$_Trade_$995_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "8167:87:241"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8167:115:241"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8167:115:241"
                }
              ]
            },
            "name": "abi_encode_tuple_t_struct$_Trade_$995_memory_ptr__to_t_struct$_Trade_$995_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "8092:9:241",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "8104:6:241",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "8115:4:241",
                "type": ""
              }
            ],
            "src": "7978:311:241"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8327:28:241",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "8337:12:241",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "8344:5:241"
                  },
                  "variableNames": [
                    {
                      "name": "ret",
                      "nodeType": "YulIdentifier",
                      "src": "8337:3:241"
                    }
                  ]
                }
              ]
            },
            "name": "identity",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "8313:5:241",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "ret",
                "nodeType": "YulTypedName",
                "src": "8323:3:241",
                "type": ""
              }
            ],
            "src": "8295:60:241"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8421:82:241",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "8431:66:241",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "8489:5:241"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_uint160",
                              "nodeType": "YulIdentifier",
                              "src": "8471:17:241"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "8471:24:241"
                          }
                        ],
                        "functionName": {
                          "name": "identity",
                          "nodeType": "YulIdentifier",
                          "src": "8462:8:241"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8462:34:241"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint160",
                      "nodeType": "YulIdentifier",
                      "src": "8444:17:241"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8444:53:241"
                  },
                  "variableNames": [
                    {
                      "name": "converted",
                      "nodeType": "YulIdentifier",
                      "src": "8431:9:241"
                    }
                  ]
                }
              ]
            },
            "name": "convert_t_uint160_to_t_uint160",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "8401:5:241",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "converted",
                "nodeType": "YulTypedName",
                "src": "8411:9:241",
                "type": ""
              }
            ],
            "src": "8361:142:241"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8569:66:241",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "8579:50:241",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "8623:5:241"
                      }
                    ],
                    "functionName": {
                      "name": "convert_t_uint160_to_t_uint160",
                      "nodeType": "YulIdentifier",
                      "src": "8592:30:241"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8592:37:241"
                  },
                  "variableNames": [
                    {
                      "name": "converted",
                      "nodeType": "YulIdentifier",
                      "src": "8579:9:241"
                    }
                  ]
                }
              ]
            },
            "name": "convert_t_uint160_to_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "8549:5:241",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "converted",
                "nodeType": "YulTypedName",
                "src": "8559:9:241",
                "type": ""
              }
            ],
            "src": "8509:126:241"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8721:66:241",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "8731:50:241",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "8775:5:241"
                      }
                    ],
                    "functionName": {
                      "name": "convert_t_uint160_to_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "8744:30:241"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8744:37:241"
                  },
                  "variableNames": [
                    {
                      "name": "converted",
                      "nodeType": "YulIdentifier",
                      "src": "8731:9:241"
                    }
                  ]
                }
              ]
            },
            "name": "convert_t_contract$_PhotoNFTData_$429_to_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "8701:5:241",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "converted",
                "nodeType": "YulTypedName",
                "src": "8711:9:241",
                "type": ""
              }
            ],
            "src": "8641:146:241"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8878:86:241",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "8895:3:241"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "8951:5:241"
                          }
                        ],
                        "functionName": {
                          "name": "convert_t_contract$_PhotoNFTData_$429_to_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "8900:50:241"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8900:57:241"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8888:6:241"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8888:70:241"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8888:70:241"
                }
              ]
            },
            "name": "abi_encode_t_contract$_PhotoNFTData_$429_to_t_address_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "8866:5:241",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "8873:3:241",
                "type": ""
              }
            ],
            "src": "8793:171:241"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "9088:144:241",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "9098:26:241",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "9110:9:241"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9121:2:241",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "9106:3:241"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9106:18:241"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "9098:4:241"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "9198:6:241"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9211:9:241"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9222:1:241",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9207:3:241"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9207:17:241"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_contract$_PhotoNFTData_$429_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "9134:63:241"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9134:91:241"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9134:91:241"
                }
              ]
            },
            "name": "abi_encode_tuple_t_contract$_PhotoNFTData_$429__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "9060:9:241",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "9072:6:241",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "9083:4:241",
                "type": ""
              }
            ],
            "src": "8970:262:241"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "9334:73:241",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "9351:3:241"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "9356:6:241"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9344:6:241"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9344:19:241"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9344:19:241"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "9372:29:241",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "9391:3:241"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9396:4:241",
                        "type": "",
                        "value": "0x20"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "9387:3:241"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9387:14:241"
                  },
                  "variableNames": [
                    {
                      "name": "updated_pos",
                      "nodeType": "YulIdentifier",
                      "src": "9372:11:241"
                    }
                  ]
                }
              ]
            },
            "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "9306:3:241",
                "type": ""
              },
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "9311:6:241",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "updated_pos",
                "nodeType": "YulTypedName",
                "src": "9322:11:241",
                "type": ""
              }
            ],
            "src": "9238:169:241"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "9519:62:241",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "9541:6:241"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9549:1:241",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9537:3:241"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9537:14:241"
                      },
                      {
                        "hexValue": "5472616465206973206e6f74204f70656e2e",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "9553:20:241",
                        "type": "",
                        "value": "Trade is not Open."
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9530:6:241"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9530:44:241"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9530:44:241"
                }
              ]
            },
            "name": "store_literal_in_memory_2911decf7be1dd9e4e03f78d29e68432f60f623c391d87eb01441f5ab4f7e1cc",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "9511:6:241",
                "type": ""
              }
            ],
            "src": "9413:168:241"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "9733:220:241",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "9743:74:241",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "9809:3:241"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9814:2:241",
                        "type": "",
                        "value": "18"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "9750:58:241"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9750:67:241"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "9743:3:241"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "9915:3:241"
                      }
                    ],
                    "functionName": {
                      "name": "store_literal_in_memory_2911decf7be1dd9e4e03f78d29e68432f60f623c391d87eb01441f5ab4f7e1cc",
                      "nodeType": "YulIdentifier",
                      "src": "9826:88:241"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9826:93:241"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9826:93:241"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "9928:19:241",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "9939:3:241"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9944:2:241",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "9935:3:241"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9935:12:241"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "9928:3:241"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_2911decf7be1dd9e4e03f78d29e68432f60f623c391d87eb01441f5ab4f7e1cc_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "9721:3:241",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "9729:3:241",
                "type": ""
              }
            ],
            "src": "9587:366:241"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "10130:248:241",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "10140:26:241",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "10152:9:241"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10163:2:241",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "10148:3:241"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10148:18:241"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "10140:4:241"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "10187:9:241"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10198:1:241",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "10183:3:241"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10183:17:241"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "10206:4:241"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "10212:9:241"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "10202:3:241"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10202:20:241"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10176:6:241"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10176:47:241"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10176:47:241"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "10232:139:241",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "10366:4:241"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_2911decf7be1dd9e4e03f78d29e68432f60f623c391d87eb01441f5ab4f7e1cc_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "10240:124:241"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10240:131:241"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "10232:4:241"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_2911decf7be1dd9e4e03f78d29e68432f60f623c391d87eb01441f5ab4f7e1cc__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "10110:9:241",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "10125:4:241",
                "type": ""
              }
            ],
            "src": "9959:419:241"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "10538:288:241",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "10548:26:241",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "10560:9:241"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10571:2:241",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "10556:3:241"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10556:18:241"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "10548:4:241"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "10628:6:241"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "10641:9:241"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10652:1:241",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "10637:3:241"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10637:17:241"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "10584:43:241"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10584:71:241"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10584:71:241"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "10709:6:241"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "10722:9:241"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10733:2:241",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "10718:3:241"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10718:18:241"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "10665:43:241"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10665:72:241"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10665:72:241"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value2",
                        "nodeType": "YulIdentifier",
                        "src": "10791:6:241"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "10804:9:241"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10815:2:241",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "10800:3:241"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10800:18:241"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "10747:43:241"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10747:72:241"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10747:72:241"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "10494:9:241",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "10506:6:241",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "10514:6:241",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "10522:6:241",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "10533:4:241",
                "type": ""
              }
            ],
            "src": "10384:442:241"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "10961:40:241",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "10978:3:241"
                      },
                      {
                        "hexValue": "43616e63656c6c6564",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "10983:11:241",
                        "type": "",
                        "value": "Cancelled"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10971:6:241"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10971:24:241"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10971:24:241"
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_737a39c9fa82f68622f45ae205e399b0f0a7252140d9357a90220c542bb4ef4b_to_t_bytes32_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "10956:3:241",
                "type": ""
              }
            ],
            "src": "10832:169:241"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "11196:269:241",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "11206:26:241",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "11218:9:241"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11229:2:241",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "11214:3:241"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11214:18:241"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "11206:4:241"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "11286:6:241"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "11299:9:241"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "11310:1:241",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "11295:3:241"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11295:17:241"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "11242:43:241"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11242:71:241"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11242:71:241"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "11443:9:241"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "11454:2:241",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "11439:3:241"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11439:18:241"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_737a39c9fa82f68622f45ae205e399b0f0a7252140d9357a90220c542bb4ef4b_to_t_bytes32_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "11323:114:241"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11323:135:241"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11323:135:241"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_stringliteral_737a39c9fa82f68622f45ae205e399b0f0a7252140d9357a90220c542bb4ef4b__to_t_address_t_bytes32__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "11168:9:241",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "11180:6:241",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "11191:4:241",
                "type": ""
              }
            ],
            "src": "11007:458:241"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "11499:152:241",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11516:1:241",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11519:77:241",
                        "type": "",
                        "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11509:6:241"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11509:88:241"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11509:88:241"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11613:1:241",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11616:4:241",
                        "type": "",
                        "value": "0x11"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11606:6:241"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11606:15:241"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11606:15:241"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11637:1:241",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11640:4:241",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "11630:6:241"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11630:15:241"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11630:15:241"
                }
              ]
            },
            "name": "panic_error_0x11",
            "nodeType": "YulFunctionDefinition",
            "src": "11471:180:241"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "11701:261:241",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "11711:25:241",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "11734:1:241"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "11716:17:241"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11716:20:241"
                  },
                  "variableNames": [
                    {
                      "name": "x",
                      "nodeType": "YulIdentifier",
                      "src": "11711:1:241"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "11745:25:241",
                  "value": {
                    "arguments": [
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "11768:1:241"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "11750:17:241"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11750:20:241"
                  },
                  "variableNames": [
                    {
                      "name": "y",
                      "nodeType": "YulIdentifier",
                      "src": "11745:1:241"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "11908:22:241",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "11910:16:241"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "11910:18:241"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "11910:18:241"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "11829:1:241"
                      },
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "11836:66:241",
                            "type": "",
                            "value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
                          },
                          {
                            "name": "y",
                            "nodeType": "YulIdentifier",
                            "src": "11904:1:241"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "11832:3:241"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11832:74:241"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "11826:2:241"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11826:81:241"
                  },
                  "nodeType": "YulIf",
                  "src": "11823:107:241"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "11940:16:241",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "11951:1:241"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "11954:1:241"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "11947:3:241"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11947:9:241"
                  },
                  "variableNames": [
                    {
                      "name": "sum",
                      "nodeType": "YulIdentifier",
                      "src": "11940:3:241"
                    }
                  ]
                }
              ]
            },
            "name": "checked_add_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "11688:1:241",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "11691:1:241",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "sum",
                "nodeType": "YulTypedName",
                "src": "11697:3:241",
                "type": ""
              }
            ],
            "src": "11657:305:241"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "12097:35:241",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "12114:3:241"
                      },
                      {
                        "hexValue": "4f70656e",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "12119:6:241",
                        "type": "",
                        "value": "Open"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "12107:6:241"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12107:19:241"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12107:19:241"
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_8f5d8ba7f4bf26b6e2e2060e5bd28107042be35460fbd828c9d29a2d8af14445_to_t_bytes32_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "12092:3:241",
                "type": ""
              }
            ],
            "src": "11968:164:241"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "12327:269:241",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "12337:26:241",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "12349:9:241"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12360:2:241",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "12345:3:241"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12345:18:241"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "12337:4:241"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "12417:6:241"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "12430:9:241"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "12441:1:241",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "12426:3:241"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12426:17:241"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "12373:43:241"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12373:71:241"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12373:71:241"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "12574:9:241"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "12585:2:241",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "12570:3:241"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12570:18:241"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_8f5d8ba7f4bf26b6e2e2060e5bd28107042be35460fbd828c9d29a2d8af14445_to_t_bytes32_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "12454:114:241"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12454:135:241"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12454:135:241"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_stringliteral_8f5d8ba7f4bf26b6e2e2060e5bd28107042be35460fbd828c9d29a2d8af14445__to_t_address_t_bytes32__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "12299:9:241",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "12311:6:241",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "12322:4:241",
                "type": ""
              }
            ],
            "src": "12138:458:241"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "12708:119:241",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "12730:6:241"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "12738:1:241",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "12726:3:241"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12726:14:241"
                      },
                      {
                        "hexValue": "54726164652063616e2062652063616e63656c6c6564206f6e6c792062792073",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "12742:34:241",
                        "type": "",
                        "value": "Trade can be cancelled only by s"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "12719:6:241"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12719:58:241"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12719:58:241"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "12798:6:241"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "12806:2:241",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "12794:3:241"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12794:15:241"
                      },
                      {
                        "hexValue": "656c6c65722e",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "12811:8:241",
                        "type": "",
                        "value": "eller."
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "12787:6:241"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12787:33:241"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12787:33:241"
                }
              ]
            },
            "name": "store_literal_in_memory_0744e3e8de6583d086339a67b8ab70fd095f3c7b732b6676ce3729ae175dc11f",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "12700:6:241",
                "type": ""
              }
            ],
            "src": "12602:225:241"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "12979:220:241",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "12989:74:241",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "13055:3:241"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "13060:2:241",
                        "type": "",
                        "value": "38"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "12996:58:241"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12996:67:241"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "12989:3:241"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "13161:3:241"
                      }
                    ],
                    "functionName": {
                      "name": "store_literal_in_memory_0744e3e8de6583d086339a67b8ab70fd095f3c7b732b6676ce3729ae175dc11f",
                      "nodeType": "YulIdentifier",
                      "src": "13072:88:241"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13072:93:241"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "13072:93:241"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "13174:19:241",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "13185:3:241"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "13190:2:241",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "13181:3:241"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13181:12:241"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "13174:3:241"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_0744e3e8de6583d086339a67b8ab70fd095f3c7b732b6676ce3729ae175dc11f_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "12967:3:241",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "12975:3:241",
                "type": ""
              }
            ],
            "src": "12833:366:241"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "13376:248:241",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "13386:26:241",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "13398:9:241"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "13409:2:241",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "13394:3:241"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13394:18:241"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "13386:4:241"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "13433:9:241"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "13444:1:241",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "13429:3:241"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13429:17:241"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "13452:4:241"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "13458:9:241"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "13448:3:241"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13448:20:241"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "13422:6:241"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13422:47:241"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "13422:47:241"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "13478:139:241",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "13612:4:241"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_0744e3e8de6583d086339a67b8ab70fd095f3c7b732b6676ce3729ae175dc11f_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "13486:124:241"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13486:131:241"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "13478:4:241"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_0744e3e8de6583d086339a67b8ab70fd095f3c7b732b6676ce3729ae175dc11f__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "13356:9:241",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "13371:4:241",
                "type": ""
              }
            ],
            "src": "13205:419:241"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "13706:66:241",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "13716:50:241",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "13760:5:241"
                      }
                    ],
                    "functionName": {
                      "name": "convert_t_uint160_to_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "13729:30:241"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13729:37:241"
                  },
                  "variableNames": [
                    {
                      "name": "converted",
                      "nodeType": "YulIdentifier",
                      "src": "13716:9:241"
                    }
                  ]
                }
              ]
            },
            "name": "convert_t_contract$_PhotoNFT_$133_to_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "13686:5:241",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "converted",
                "nodeType": "YulTypedName",
                "src": "13696:9:241",
                "type": ""
              }
            ],
            "src": "13630:142:241"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "13859:82:241",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "13876:3:241"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "13928:5:241"
                          }
                        ],
                        "functionName": {
                          "name": "convert_t_contract$_PhotoNFT_$133_to_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "13881:46:241"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13881:53:241"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "13869:6:241"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13869:66:241"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "13869:66:241"
                }
              ]
            },
            "name": "abi_encode_t_contract$_PhotoNFT_$133_to_t_address_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "13847:5:241",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "13854:3:241",
                "type": ""
              }
            ],
            "src": "13778:163:241"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "14053:53:241",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "14075:6:241"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "14083:1:241",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "14071:3:241"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "14071:14:241"
                      },
                      {
                        "hexValue": "43616e63656c6c6564",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "14087:11:241",
                        "type": "",
                        "value": "Cancelled"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "14064:6:241"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14064:35:241"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "14064:35:241"
                }
              ]
            },
            "name": "store_literal_in_memory_737a39c9fa82f68622f45ae205e399b0f0a7252140d9357a90220c542bb4ef4b",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "14045:6:241",
                "type": ""
              }
            ],
            "src": "13947:159:241"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "14258:219:241",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "14268:73:241",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "14334:3:241"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "14339:1:241",
                        "type": "",
                        "value": "9"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "14275:58:241"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14275:66:241"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "14268:3:241"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "14439:3:241"
                      }
                    ],
                    "functionName": {
                      "name": "store_literal_in_memory_737a39c9fa82f68622f45ae205e399b0f0a7252140d9357a90220c542bb4ef4b",
                      "nodeType": "YulIdentifier",
                      "src": "14350:88:241"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14350:93:241"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "14350:93:241"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "14452:19:241",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "14463:3:241"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "14468:2:241",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "14459:3:241"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14459:12:241"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "14452:3:241"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_737a39c9fa82f68622f45ae205e399b0f0a7252140d9357a90220c542bb4ef4b_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "14246:3:241",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "14254:3:241",
                "type": ""
              }
            ],
            "src": "14112:365:241"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "14698:346:241",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "14708:26:241",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "14720:9:241"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "14731:2:241",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "14716:3:241"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14716:18:241"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "14708:4:241"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "14804:6:241"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "14817:9:241"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "14828:1:241",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "14813:3:241"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "14813:17:241"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_contract$_PhotoNFT_$133_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "14744:59:241"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14744:87:241"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "14744:87:241"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "14852:9:241"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "14863:2:241",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "14848:3:241"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "14848:18:241"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "14872:4:241"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "14878:9:241"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "14868:3:241"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "14868:20:241"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "14841:6:241"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14841:48:241"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "14841:48:241"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "14898:139:241",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "15032:4:241"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_737a39c9fa82f68622f45ae205e399b0f0a7252140d9357a90220c542bb4ef4b_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "14906:124:241"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14906:131:241"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "14898:4:241"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_contract$_PhotoNFT_$133_t_stringliteral_737a39c9fa82f68622f45ae205e399b0f0a7252140d9357a90220c542bb4ef4b__to_t_address_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "14670:9:241",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "14682:6:241",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "14693:4:241",
                "type": ""
              }
            ],
            "src": "14483:561:241"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "15110:77:241",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "15120:22:241",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "15135:6:241"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "15129:5:241"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15129:13:241"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "15120:5:241"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "15175:5:241"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_bool",
                      "nodeType": "YulIdentifier",
                      "src": "15151:23:241"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15151:30:241"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "15151:30:241"
                }
              ]
            },
            "name": "abi_decode_t_bool_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "15088:6:241",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "15096:3:241",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "15104:5:241",
                "type": ""
              }
            ],
            "src": "15050:137:241"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "15267:271:241",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "15313:83:241",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                            "nodeType": "YulIdentifier",
                            "src": "15315:77:241"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "15315:79:241"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "15315:79:241"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "15288:7:241"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "15297:9:241"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "15284:3:241"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "15284:23:241"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "15309:2:241",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "15280:3:241"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15280:32:241"
                  },
                  "nodeType": "YulIf",
                  "src": "15277:119:241"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "15406:125:241",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "15421:15:241",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "15435:1:241",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "15425:6:241",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "15450:71:241",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "15493:9:241"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "15504:6:241"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "15489:3:241"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "15489:22:241"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "15513:7:241"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_bool_fromMemory",
                          "nodeType": "YulIdentifier",
                          "src": "15460:28:241"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "15460:61:241"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "15450:6:241"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_bool_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "15237:9:241",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "15248:7:241",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "15260:6:241",
                "type": ""
              }
            ],
            "src": "15193:345:241"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "15650:114:241",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "15672:6:241"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "15680:1:241",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "15668:3:241"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "15668:14:241"
                      },
                      {
                        "hexValue": "54726164652063616e206265206f70656e206f6e6c792062792073656c6c6572",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "15684:34:241",
                        "type": "",
                        "value": "Trade can be open only by seller"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "15661:6:241"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15661:58:241"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "15661:58:241"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "15740:6:241"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "15748:2:241",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "15736:3:241"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "15736:15:241"
                      },
                      {
                        "hexValue": "2e",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "15753:3:241",
                        "type": "",
                        "value": "."
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "15729:6:241"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15729:28:241"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "15729:28:241"
                }
              ]
            },
            "name": "store_literal_in_memory_268e48c2205378f3b7ae3c6b6b6d9ec43fe563160d624a82a00d8fddeef26408",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "15642:6:241",
                "type": ""
              }
            ],
            "src": "15544:220:241"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "15916:220:241",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "15926:74:241",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "15992:3:241"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "15997:2:241",
                        "type": "",
                        "value": "33"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "15933:58:241"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15933:67:241"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "15926:3:241"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "16098:3:241"
                      }
                    ],
                    "functionName": {
                      "name": "store_literal_in_memory_268e48c2205378f3b7ae3c6b6b6d9ec43fe563160d624a82a00d8fddeef26408",
                      "nodeType": "YulIdentifier",
                      "src": "16009:88:241"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16009:93:241"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "16009:93:241"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "16111:19:241",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "16122:3:241"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "16127:2:241",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "16118:3:241"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16118:12:241"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "16111:3:241"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_268e48c2205378f3b7ae3c6b6b6d9ec43fe563160d624a82a00d8fddeef26408_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "15904:3:241",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "15912:3:241",
                "type": ""
              }
            ],
            "src": "15770:366:241"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "16313:248:241",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "16323:26:241",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "16335:9:241"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "16346:2:241",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "16331:3:241"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16331:18:241"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "16323:4:241"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "16370:9:241"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "16381:1:241",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "16366:3:241"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "16366:17:241"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "16389:4:241"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "16395:9:241"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "16385:3:241"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "16385:20:241"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "16359:6:241"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16359:47:241"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "16359:47:241"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "16415:139:241",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "16549:4:241"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_268e48c2205378f3b7ae3c6b6b6d9ec43fe563160d624a82a00d8fddeef26408_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "16423:124:241"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16423:131:241"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "16415:4:241"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_268e48c2205378f3b7ae3c6b6b6d9ec43fe563160d624a82a00d8fddeef26408__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "16293:9:241",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "16308:4:241",
                "type": ""
              }
            ],
            "src": "16142:419:241"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "16673:48:241",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "16695:6:241"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "16703:1:241",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "16691:3:241"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "16691:14:241"
                      },
                      {
                        "hexValue": "4f70656e",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "16707:6:241",
                        "type": "",
                        "value": "Open"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "16684:6:241"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16684:30:241"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "16684:30:241"
                }
              ]
            },
            "name": "store_literal_in_memory_8f5d8ba7f4bf26b6e2e2060e5bd28107042be35460fbd828c9d29a2d8af14445",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "16665:6:241",
                "type": ""
              }
            ],
            "src": "16567:154:241"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "16873:219:241",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "16883:73:241",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "16949:3:241"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "16954:1:241",
                        "type": "",
                        "value": "4"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "16890:58:241"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16890:66:241"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "16883:3:241"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "17054:3:241"
                      }
                    ],
                    "functionName": {
                      "name": "store_literal_in_memory_8f5d8ba7f4bf26b6e2e2060e5bd28107042be35460fbd828c9d29a2d8af14445",
                      "nodeType": "YulIdentifier",
                      "src": "16965:88:241"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16965:93:241"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "16965:93:241"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "17067:19:241",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "17078:3:241"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "17083:2:241",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "17074:3:241"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "17074:12:241"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "17067:3:241"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_8f5d8ba7f4bf26b6e2e2060e5bd28107042be35460fbd828c9d29a2d8af14445_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "16861:3:241",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "16869:3:241",
                "type": ""
              }
            ],
            "src": "16727:365:241"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "17313:346:241",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "17323:26:241",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "17335:9:241"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "17346:2:241",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "17331:3:241"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "17331:18:241"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "17323:4:241"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "17419:6:241"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "17432:9:241"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "17443:1:241",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "17428:3:241"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "17428:17:241"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_contract$_PhotoNFT_$133_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "17359:59:241"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "17359:87:241"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "17359:87:241"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "17467:9:241"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "17478:2:241",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "17463:3:241"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "17463:18:241"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "17487:4:241"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "17493:9:241"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "17483:3:241"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "17483:20:241"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "17456:6:241"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "17456:48:241"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "17456:48:241"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "17513:139:241",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "17647:4:241"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_8f5d8ba7f4bf26b6e2e2060e5bd28107042be35460fbd828c9d29a2d8af14445_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "17521:124:241"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "17521:131:241"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "17513:4:241"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_contract$_PhotoNFT_$133_t_stringliteral_8f5d8ba7f4bf26b6e2e2060e5bd28107042be35460fbd828c9d29a2d8af14445__to_t_address_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "17285:9:241",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "17297:6:241",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "17308:4:241",
                "type": ""
              }
            ],
            "src": "17098:561:241"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "17801:216:241",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "17811:26:241",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "17823:9:241"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "17834:2:241",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "17819:3:241"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "17819:18:241"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "17811:4:241"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "17907:6:241"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "17920:9:241"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "17931:1:241",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "17916:3:241"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "17916:17:241"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_contract$_PhotoNFT_$133_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "17847:59:241"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "17847:87:241"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "17847:87:241"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "17982:6:241"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "17995:9:241"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "18006:2:241",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "17991:3:241"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "17991:18:241"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_bool_to_t_bool_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "17944:37:241"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "17944:66:241"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "17944:66:241"
                }
              ]
            },
            "name": "abi_encode_tuple_t_contract$_PhotoNFT_$133_t_bool__to_t_address_t_bool__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "17765:9:241",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "17777:6:241",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "17785:6:241",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "17796:4:241",
                "type": ""
              }
            ],
            "src": "17665:352:241"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "18143:200:241",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "18153:26:241",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "18165:9:241"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "18176:2:241",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "18161:3:241"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "18161:18:241"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "18153:4:241"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "18233:6:241"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "18246:9:241"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "18257:1:241",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "18242:3:241"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "18242:17:241"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "18189:43:241"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "18189:71:241"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "18189:71:241"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "18308:6:241"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "18321:9:241"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "18332:2:241",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "18317:3:241"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "18317:18:241"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_bool_to_t_bool_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "18270:37:241"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "18270:66:241"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "18270:66:241"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_bool__to_t_address_t_bool__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "18107:9:241",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "18119:6:241",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "18127:6:241",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "18138:4:241",
                "type": ""
              }
            ],
            "src": "18023:320:241"
          }
        ]
      },
      "contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_contract$_PhotoNFT_$133(value) -> cleaned {\n        cleaned := cleanup_t_address(value)\n    }\n\n    function validator_revert_t_contract$_PhotoNFT_$133(value) {\n        if iszero(eq(value, cleanup_t_contract$_PhotoNFT_$133(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_contract$_PhotoNFT_$133(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_contract$_PhotoNFT_$133(value)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_contract$_PhotoNFT_$133t_uint256t_address(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_contract$_PhotoNFT_$133(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_contract$_PhotoNFT_$133t_uint256t_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_contract$_PhotoNFT_$133(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_contract$_PhotoNFT_$133t_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_contract$_PhotoNFT_$133(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_contract$_PhotoNFT_$133t_uint256t_bool(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_contract$_PhotoNFT_$133(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_bool(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function cleanup_t_bytes32(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_bytes32_to_t_bytes32_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bytes32(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_uint256_t_bytes32_t_bool__to_t_address_t_uint256_t_uint256_t_bytes32_t_bool__fromStack_reversed(headStart , value4, value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 160)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value3,  add(headStart, 96))\n\n        abi_encode_t_bool_to_t_bool_fromStack(value4,  add(headStart, 128))\n\n    }\n\n    function abi_decode_tuple_t_contract$_PhotoNFT_$133(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_contract$_PhotoNFT_$133(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_t_uint256_to_t_uint256(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_t_bytes32_to_t_bytes32(value, pos) {\n        mstore(pos, cleanup_t_bytes32(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    // struct PhotoNFTTradable.Trade -> struct PhotoNFTTradable.Trade\n    function abi_encode_t_struct$_Trade_$995_memory_ptr_to_t_struct$_Trade_$995_memory_ptr_fromStack(value, pos)  {\n        let tail := add(pos, 0xa0)\n\n        {\n            // seller\n\n            let memberValue0 := mload(add(value, 0x00))\n            abi_encode_t_address_to_t_address(memberValue0, add(pos, 0x00))\n        }\n\n        {\n            // photoId\n\n            let memberValue0 := mload(add(value, 0x20))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0x20))\n        }\n\n        {\n            // photoPrice\n\n            let memberValue0 := mload(add(value, 0x40))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0x40))\n        }\n\n        {\n            // status\n\n            let memberValue0 := mload(add(value, 0x60))\n            abi_encode_t_bytes32_to_t_bytes32(memberValue0, add(pos, 0x60))\n        }\n\n        {\n            // premiumStatus\n\n            let memberValue0 := mload(add(value, 0x80))\n            abi_encode_t_bool_to_t_bool(memberValue0, add(pos, 0x80))\n        }\n\n    }\n\n    function abi_encode_tuple_t_struct$_Trade_$995_memory_ptr__to_t_struct$_Trade_$995_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 160)\n\n        abi_encode_t_struct$_Trade_$995_memory_ptr_to_t_struct$_Trade_$995_memory_ptr_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint160_to_t_uint160(value) -> converted {\n        converted := cleanup_t_uint160(identity(cleanup_t_uint160(value)))\n    }\n\n    function convert_t_uint160_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_uint160(value)\n    }\n\n    function convert_t_contract$_PhotoNFTData_$429_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_address(value)\n    }\n\n    function abi_encode_t_contract$_PhotoNFTData_$429_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_PhotoNFTData_$429_to_t_address(value))\n    }\n\n    function abi_encode_tuple_t_contract$_PhotoNFTData_$429__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_PhotoNFTData_$429_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_2911decf7be1dd9e4e03f78d29e68432f60f623c391d87eb01441f5ab4f7e1cc(memPtr) {\n\n        mstore(add(memPtr, 0), \"Trade is not Open.\")\n\n    }\n\n    function abi_encode_t_stringliteral_2911decf7be1dd9e4e03f78d29e68432f60f623c391d87eb01441f5ab4f7e1cc_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 18)\n        store_literal_in_memory_2911decf7be1dd9e4e03f78d29e68432f60f623c391d87eb01441f5ab4f7e1cc(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_2911decf7be1dd9e4e03f78d29e68432f60f623c391d87eb01441f5ab4f7e1cc__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_2911decf7be1dd9e4e03f78d29e68432f60f623c391d87eb01441f5ab4f7e1cc_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function abi_encode_t_stringliteral_737a39c9fa82f68622f45ae205e399b0f0a7252140d9357a90220c542bb4ef4b_to_t_bytes32_fromStack(pos) {\n        mstore(pos, \"Cancelled\")\n    }\n\n    function abi_encode_tuple_t_address_t_stringliteral_737a39c9fa82f68622f45ae205e399b0f0a7252140d9357a90220c542bb4ef4b__to_t_address_t_bytes32__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_stringliteral_737a39c9fa82f68622f45ae205e399b0f0a7252140d9357a90220c542bb4ef4b_to_t_bytes32_fromStack( add(headStart, 32))\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        // overflow, if x > (maxValue - y)\n        if gt(x, sub(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, y)) { panic_error_0x11() }\n\n        sum := add(x, y)\n    }\n\n    function abi_encode_t_stringliteral_8f5d8ba7f4bf26b6e2e2060e5bd28107042be35460fbd828c9d29a2d8af14445_to_t_bytes32_fromStack(pos) {\n        mstore(pos, \"Open\")\n    }\n\n    function abi_encode_tuple_t_address_t_stringliteral_8f5d8ba7f4bf26b6e2e2060e5bd28107042be35460fbd828c9d29a2d8af14445__to_t_address_t_bytes32__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_stringliteral_8f5d8ba7f4bf26b6e2e2060e5bd28107042be35460fbd828c9d29a2d8af14445_to_t_bytes32_fromStack( add(headStart, 32))\n\n    }\n\n    function store_literal_in_memory_0744e3e8de6583d086339a67b8ab70fd095f3c7b732b6676ce3729ae175dc11f(memPtr) {\n\n        mstore(add(memPtr, 0), \"Trade can be cancelled only by s\")\n\n        mstore(add(memPtr, 32), \"eller.\")\n\n    }\n\n    function abi_encode_t_stringliteral_0744e3e8de6583d086339a67b8ab70fd095f3c7b732b6676ce3729ae175dc11f_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 38)\n        store_literal_in_memory_0744e3e8de6583d086339a67b8ab70fd095f3c7b732b6676ce3729ae175dc11f(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_0744e3e8de6583d086339a67b8ab70fd095f3c7b732b6676ce3729ae175dc11f__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_0744e3e8de6583d086339a67b8ab70fd095f3c7b732b6676ce3729ae175dc11f_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function convert_t_contract$_PhotoNFT_$133_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_address(value)\n    }\n\n    function abi_encode_t_contract$_PhotoNFT_$133_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_PhotoNFT_$133_to_t_address(value))\n    }\n\n    function store_literal_in_memory_737a39c9fa82f68622f45ae205e399b0f0a7252140d9357a90220c542bb4ef4b(memPtr) {\n\n        mstore(add(memPtr, 0), \"Cancelled\")\n\n    }\n\n    function abi_encode_t_stringliteral_737a39c9fa82f68622f45ae205e399b0f0a7252140d9357a90220c542bb4ef4b_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 9)\n        store_literal_in_memory_737a39c9fa82f68622f45ae205e399b0f0a7252140d9357a90220c542bb4ef4b(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_contract$_PhotoNFT_$133_t_stringliteral_737a39c9fa82f68622f45ae205e399b0f0a7252140d9357a90220c542bb4ef4b__to_t_address_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_contract$_PhotoNFT_$133_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        mstore(add(headStart, 32), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_737a39c9fa82f68622f45ae205e399b0f0a7252140d9357a90220c542bb4ef4b_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_decode_t_bool_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function store_literal_in_memory_268e48c2205378f3b7ae3c6b6b6d9ec43fe563160d624a82a00d8fddeef26408(memPtr) {\n\n        mstore(add(memPtr, 0), \"Trade can be open only by seller\")\n\n        mstore(add(memPtr, 32), \".\")\n\n    }\n\n    function abi_encode_t_stringliteral_268e48c2205378f3b7ae3c6b6b6d9ec43fe563160d624a82a00d8fddeef26408_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 33)\n        store_literal_in_memory_268e48c2205378f3b7ae3c6b6b6d9ec43fe563160d624a82a00d8fddeef26408(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_268e48c2205378f3b7ae3c6b6b6d9ec43fe563160d624a82a00d8fddeef26408__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_268e48c2205378f3b7ae3c6b6b6d9ec43fe563160d624a82a00d8fddeef26408_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_8f5d8ba7f4bf26b6e2e2060e5bd28107042be35460fbd828c9d29a2d8af14445(memPtr) {\n\n        mstore(add(memPtr, 0), \"Open\")\n\n    }\n\n    function abi_encode_t_stringliteral_8f5d8ba7f4bf26b6e2e2060e5bd28107042be35460fbd828c9d29a2d8af14445_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 4)\n        store_literal_in_memory_8f5d8ba7f4bf26b6e2e2060e5bd28107042be35460fbd828c9d29a2d8af14445(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_contract$_PhotoNFT_$133_t_stringliteral_8f5d8ba7f4bf26b6e2e2060e5bd28107042be35460fbd828c9d29a2d8af14445__to_t_address_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_contract$_PhotoNFT_$133_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        mstore(add(headStart, 32), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_8f5d8ba7f4bf26b6e2e2060e5bd28107042be35460fbd828c9d29a2d8af14445_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_contract$_PhotoNFT_$133_t_bool__to_t_address_t_bool__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_contract$_PhotoNFT_$133_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_bool_to_t_bool_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_encode_tuple_t_address_t_bool__to_t_address_t_bool__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_bool_to_t_bool_fromStack(value1,  add(headStart, 32))\n\n    }\n\n}\n",
      "id": 241,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "sourceMap": "311:4735:6:-:0;;;911:121;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;984:13;969:12;;:28;;;;;;;;;;;;;;;;;;1023:1;1008:12;:16;;;;911:121;311:4735;;88:117:241;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:116::-;625:7;654:24;672:5;654:24;:::i;:::-;643:35;;568:116;;;:::o;690:162::-;783:44;821:5;783:44;:::i;:::-;776:5;773:55;763:83;;842:1;839;832:12;763:83;690:162;:::o;858:183::-;935:5;966:6;960:13;951:22;;982:53;1029:5;982:53;:::i;:::-;858:183;;;;:::o;1047:391::-;1137:6;1186:2;1174:9;1165:7;1161:23;1157:32;1154:119;;;1192:79;;:::i;:::-;1154:119;1312:1;1337:84;1413:7;1404:6;1393:9;1389:22;1337:84;:::i;:::-;1327:94;;1283:148;1047:391;;;;:::o;311:4735:6:-;;;;;;;",
  "deployedSourceMap": "311:4735:6:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4009:511;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1337:688;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2706:564;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2093:543;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3338:467;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;803:39;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;;:::i;:::-;;;;;;;;4795:248;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;512:32;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4009:511;4118:17;4138:9;4118:29;;4160:18;4181:19;4190:9;4181:8;:19::i;:::-;4160:40;;4219:22;:5;:12;;;:22;4211:53;;;;;;;;;;;;:::i;:::-;;;;;;;;;4277:42;4291:9;4302:8;4312:6;4277:13;:42::i;:::-;4350:8;:21;;;4380:4;4387:6;4395:5;:13;;;4350:59;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4420:26;:5;:12;;:26;;;;;4462:50;4488:9;4462:50;;;;;;:::i;:::-;;;;;;;;4107:413;;4009:511;;;:::o;1337:688::-;1453:8;:21;;;1475:10;1495:4;1502:8;1453:58;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1540:1;1524:12;;:17;;;;;;;:::i;:::-;;;;;;;;1718:187;;;;;;;;1747:10;1718:187;;;;;;1781:8;1718:187;;;;1816:11;1718:187;;;;;;;;;1888:5;1718:187;;;;;1690:6;:25;1705:8;1690:25;;;;;;;;;;;;;;;:215;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1973:44;1999:8;1973:44;;;;;;:::i;:::-;;;;;;;;1337:688;;;:::o;2706:564::-;2782:19;2804:6;:25;2819:8;2804:25;;;;;;;;;;;;;;;2782:47;;2878:5;:12;;;;;;;;;;;;2864:26;;:10;:26;;;2842:114;;;;;;;;;;;;:::i;:::-;;;;;;;;;3036:12;;;;;;;;;;:25;;;3062:8;3036:48;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;3095:8;:21;;;3125:4;3132:5;:12;;;;;;;;;;;;3146:5;:13;;;3095:65;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3171:26;:5;:12;;:26;;;;3213:49;3239:8;3213:49;;;;;;:::i;:::-;;;;;;;;2771:499;2706:564;;:::o;2093:543::-;2177:19;2199:6;:25;2214:8;2199:25;;;;;;;;;;;;;;;2177:47;;2271:5;:12;;;;;;;;;;;;2257:26;;:10;:26;;;2235:109;;;;;;;;;;;;:::i;:::-;;;;;;;;;2357:12;;;;;;;;;;:25;;;2383:8;2357:43;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;2411:8;:21;;;2433:10;2453:4;2460:5;:13;;;2411:63;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2547:21;:5;:12;;:21;;;;2584:44;2610:8;2584:44;;;;;;:::i;:::-;;;;;;;;2156:480;2093:543;;:::o;3338:467::-;3438:19;3460:6;:25;3475:8;3460:25;;;;;;;;;;;;;;;3438:47;;3532:5;:12;;;;;;;;;;;;3518:26;;:10;:26;;;3496:109;;;;;;;;;;;;:::i;:::-;;;;;;;;;3616:12;;;;;;;;;;:32;;;3649:8;3659:9;3616:53;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;3718:9;3696:5;:19;;;:31;;;;;;;;;;;;;;;;;;3743:54;3776:8;3787:9;3743:54;;;;;;;:::i;:::-;;;;;;;;3427:378;3338:467;;;:::o;803:39::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;4795:248::-;4853:19;;:::i;:::-;4885:18;4906:6;:25;4921:8;4906:25;;;;;;;;;;;;;;;4885:46;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4949:5;4942:12;;;4795:248;;;:::o;512:32::-;;;;;;;;;;;;:::o;4528:191::-;4628:19;4650:6;:25;4665:8;4650:25;;;;;;;;;;;;;;;4628:47;;4701:10;4686:5;:12;;;:25;;;;;;;;;;;;;;;;;;4617:102;4528:191;;;:::o;-1:-1:-1:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;88:117:241:-;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:112::-;621:7;650:24;668:5;650:24;:::i;:::-;639:35;;568:112;;;:::o;686:154::-;775:40;809:5;775:40;:::i;:::-;768:5;765:51;755:79;;830:1;827;820:12;755:79;686:154;:::o;846:171::-;908:5;946:6;933:20;924:29;;962:49;1005:5;962:49;:::i;:::-;846:171;;;;:::o;1023:77::-;1060:7;1089:5;1078:16;;1023:77;;;:::o;1106:122::-;1179:24;1197:5;1179:24;:::i;:::-;1172:5;1169:35;1159:63;;1218:1;1215;1208:12;1159:63;1106:122;:::o;1234:139::-;1280:5;1318:6;1305:20;1296:29;;1334:33;1361:5;1334:33;:::i;:::-;1234:139;;;;:::o;1379:122::-;1452:24;1470:5;1452:24;:::i;:::-;1445:5;1442:35;1432:63;;1491:1;1488;1481:12;1432:63;1379:122;:::o;1507:139::-;1553:5;1591:6;1578:20;1569:29;;1607:33;1634:5;1607:33;:::i;:::-;1507:139;;;;:::o;1652:651::-;1745:6;1753;1761;1810:2;1798:9;1789:7;1785:23;1781:32;1778:119;;;1816:79;;:::i;:::-;1778:119;1936:1;1961:69;2022:7;2013:6;2002:9;1998:22;1961:69;:::i;:::-;1951:79;;1907:133;2079:2;2105:53;2150:7;2141:6;2130:9;2126:22;2105:53;:::i;:::-;2095:63;;2050:118;2207:2;2233:53;2278:7;2269:6;2258:9;2254:22;2233:53;:::i;:::-;2223:63;;2178:118;1652:651;;;;;:::o;2309:::-;2402:6;2410;2418;2467:2;2455:9;2446:7;2442:23;2438:32;2435:119;;;2473:79;;:::i;:::-;2435:119;2593:1;2618:69;2679:7;2670:6;2659:9;2655:22;2618:69;:::i;:::-;2608:79;;2564:133;2736:2;2762:53;2807:7;2798:6;2787:9;2783:22;2762:53;:::i;:::-;2752:63;;2707:118;2864:2;2890:53;2935:7;2926:6;2915:9;2911:22;2890:53;:::i;:::-;2880:63;;2835:118;2309:651;;;;;:::o;2966:506::-;3050:6;3058;3107:2;3095:9;3086:7;3082:23;3078:32;3075:119;;;3113:79;;:::i;:::-;3075:119;3233:1;3258:69;3319:7;3310:6;3299:9;3295:22;3258:69;:::i;:::-;3248:79;;3204:133;3376:2;3402:53;3447:7;3438:6;3427:9;3423:22;3402:53;:::i;:::-;3392:63;;3347:118;2966:506;;;;;:::o;3478:90::-;3512:7;3555:5;3548:13;3541:21;3530:32;;3478:90;;;:::o;3574:116::-;3644:21;3659:5;3644:21;:::i;:::-;3637:5;3634:32;3624:60;;3680:1;3677;3670:12;3624:60;3574:116;:::o;3696:133::-;3739:5;3777:6;3764:20;3755:29;;3793:30;3817:5;3793:30;:::i;:::-;3696:133;;;;:::o;3835:645::-;3925:6;3933;3941;3990:2;3978:9;3969:7;3965:23;3961:32;3958:119;;;3996:79;;:::i;:::-;3958:119;4116:1;4141:69;4202:7;4193:6;4182:9;4178:22;4141:69;:::i;:::-;4131:79;;4087:133;4259:2;4285:53;4330:7;4321:6;4310:9;4306:22;4285:53;:::i;:::-;4275:63;;4230:118;4387:2;4413:50;4455:7;4446:6;4435:9;4431:22;4413:50;:::i;:::-;4403:60;;4358:115;3835:645;;;;;:::o;4486:329::-;4545:6;4594:2;4582:9;4573:7;4569:23;4565:32;4562:119;;;4600:79;;:::i;:::-;4562:119;4720:1;4745:53;4790:7;4781:6;4770:9;4766:22;4745:53;:::i;:::-;4735:63;;4691:117;4486:329;;;;:::o;4821:118::-;4908:24;4926:5;4908:24;:::i;:::-;4903:3;4896:37;4821:118;;:::o;4945:::-;5032:24;5050:5;5032:24;:::i;:::-;5027:3;5020:37;4945:118;;:::o;5069:77::-;5106:7;5135:5;5124:16;;5069:77;;;:::o;5152:118::-;5239:24;5257:5;5239:24;:::i;:::-;5234:3;5227:37;5152:118;;:::o;5276:109::-;5357:21;5372:5;5357:21;:::i;:::-;5352:3;5345:34;5276:109;;:::o;5391:652::-;5590:4;5628:3;5617:9;5613:19;5605:27;;5642:71;5710:1;5699:9;5695:17;5686:6;5642:71;:::i;:::-;5723:72;5791:2;5780:9;5776:18;5767:6;5723:72;:::i;:::-;5805;5873:2;5862:9;5858:18;5849:6;5805:72;:::i;:::-;5887;5955:2;5944:9;5940:18;5931:6;5887:72;:::i;:::-;5969:67;6031:3;6020:9;6016:19;6007:6;5969:67;:::i;:::-;5391:652;;;;;;;;:::o;6049:361::-;6124:6;6173:2;6161:9;6152:7;6148:23;6144:32;6141:119;;;6179:79;;:::i;:::-;6141:119;6299:1;6324:69;6385:7;6376:6;6365:9;6361:22;6324:69;:::i;:::-;6314:79;;6270:133;6049:361;;;;:::o;6416:108::-;6493:24;6511:5;6493:24;:::i;:::-;6488:3;6481:37;6416:108;;:::o;6530:::-;6607:24;6625:5;6607:24;:::i;:::-;6602:3;6595:37;6530:108;;:::o;6644:::-;6721:24;6739:5;6721:24;:::i;:::-;6716:3;6709:37;6644:108;;:::o;6758:99::-;6829:21;6844:5;6829:21;:::i;:::-;6824:3;6817:34;6758:99;;:::o;6933:1039::-;7074:4;7069:3;7065:14;7163:4;7156:5;7152:16;7146:23;7182:63;7239:4;7234:3;7230:14;7216:12;7182:63;:::i;:::-;7089:166;7340:4;7333:5;7329:16;7323:23;7359:63;7416:4;7411:3;7407:14;7393:12;7359:63;:::i;:::-;7265:167;7520:4;7513:5;7509:16;7503:23;7539:63;7596:4;7591:3;7587:14;7573:12;7539:63;:::i;:::-;7442:170;7696:4;7689:5;7685:16;7679:23;7715:63;7772:4;7767:3;7763:14;7749:12;7715:63;:::i;:::-;7622:166;7879:4;7872:5;7868:16;7862:23;7898:57;7949:4;7944:3;7940:14;7926:12;7898:57;:::i;:::-;7798:167;7043:929;6933:1039;;:::o;7978:311::-;8115:4;8153:3;8142:9;8138:19;8130:27;;8167:115;8279:1;8268:9;8264:17;8255:6;8167:115;:::i;:::-;7978:311;;;;:::o;8295:60::-;8323:3;8344:5;8337:12;;8295:60;;;:::o;8361:142::-;8411:9;8444:53;8462:34;8471:24;8489:5;8471:24;:::i;:::-;8462:34;:::i;:::-;8444:53;:::i;:::-;8431:66;;8361:142;;;:::o;8509:126::-;8559:9;8592:37;8623:5;8592:37;:::i;:::-;8579:50;;8509:126;;;:::o;8641:146::-;8711:9;8744:37;8775:5;8744:37;:::i;:::-;8731:50;;8641:146;;;:::o;8793:171::-;8900:57;8951:5;8900:57;:::i;:::-;8895:3;8888:70;8793:171;;:::o;8970:262::-;9083:4;9121:2;9110:9;9106:18;9098:26;;9134:91;9222:1;9211:9;9207:17;9198:6;9134:91;:::i;:::-;8970:262;;;;:::o;9238:169::-;9322:11;9356:6;9351:3;9344:19;9396:4;9391:3;9387:14;9372:29;;9238:169;;;;:::o;9413:168::-;9553:20;9549:1;9541:6;9537:14;9530:44;9413:168;:::o;9587:366::-;9729:3;9750:67;9814:2;9809:3;9750:67;:::i;:::-;9743:74;;9826:93;9915:3;9826:93;:::i;:::-;9944:2;9939:3;9935:12;9928:19;;9587:366;;;:::o;9959:419::-;10125:4;10163:2;10152:9;10148:18;10140:26;;10212:9;10206:4;10202:20;10198:1;10187:9;10183:17;10176:47;10240:131;10366:4;10240:131;:::i;:::-;10232:139;;9959:419;;;:::o;10384:442::-;10533:4;10571:2;10560:9;10556:18;10548:26;;10584:71;10652:1;10641:9;10637:17;10628:6;10584:71;:::i;:::-;10665:72;10733:2;10722:9;10718:18;10709:6;10665:72;:::i;:::-;10747;10815:2;10804:9;10800:18;10791:6;10747:72;:::i;:::-;10384:442;;;;;;:::o;10832:169::-;10983:11;10978:3;10971:24;10832:169;:::o;11007:458::-;11191:4;11229:2;11218:9;11214:18;11206:26;;11242:71;11310:1;11299:9;11295:17;11286:6;11242:71;:::i;:::-;11323:135;11454:2;11443:9;11439:18;11323:135;:::i;:::-;11007:458;;;;:::o;11471:180::-;11519:77;11516:1;11509:88;11616:4;11613:1;11606:15;11640:4;11637:1;11630:15;11657:305;11697:3;11716:20;11734:1;11716:20;:::i;:::-;11711:25;;11750:20;11768:1;11750:20;:::i;:::-;11745:25;;11904:1;11836:66;11832:74;11829:1;11826:81;11823:107;;;11910:18;;:::i;:::-;11823:107;11954:1;11951;11947:9;11940:16;;11657:305;;;;:::o;11968:164::-;12119:6;12114:3;12107:19;11968:164;:::o;12138:458::-;12322:4;12360:2;12349:9;12345:18;12337:26;;12373:71;12441:1;12430:9;12426:17;12417:6;12373:71;:::i;:::-;12454:135;12585:2;12574:9;12570:18;12454:135;:::i;:::-;12138:458;;;;:::o;12602:225::-;12742:34;12738:1;12730:6;12726:14;12719:58;12811:8;12806:2;12798:6;12794:15;12787:33;12602:225;:::o;12833:366::-;12975:3;12996:67;13060:2;13055:3;12996:67;:::i;:::-;12989:74;;13072:93;13161:3;13072:93;:::i;:::-;13190:2;13185:3;13181:12;13174:19;;12833:366;;;:::o;13205:419::-;13371:4;13409:2;13398:9;13394:18;13386:26;;13458:9;13452:4;13448:20;13444:1;13433:9;13429:17;13422:47;13486:131;13612:4;13486:131;:::i;:::-;13478:139;;13205:419;;;:::o;13630:142::-;13696:9;13729:37;13760:5;13729:37;:::i;:::-;13716:50;;13630:142;;;:::o;13778:163::-;13881:53;13928:5;13881:53;:::i;:::-;13876:3;13869:66;13778:163;;:::o;13947:159::-;14087:11;14083:1;14075:6;14071:14;14064:35;13947:159;:::o;14112:365::-;14254:3;14275:66;14339:1;14334:3;14275:66;:::i;:::-;14268:73;;14350:93;14439:3;14350:93;:::i;:::-;14468:2;14463:3;14459:12;14452:19;;14112:365;;;:::o;14483:561::-;14693:4;14731:2;14720:9;14716:18;14708:26;;14744:87;14828:1;14817:9;14813:17;14804:6;14744:87;:::i;:::-;14878:9;14872:4;14868:20;14863:2;14852:9;14848:18;14841:48;14906:131;15032:4;14906:131;:::i;:::-;14898:139;;14483:561;;;;:::o;15050:137::-;15104:5;15135:6;15129:13;15120:22;;15151:30;15175:5;15151:30;:::i;:::-;15050:137;;;;:::o;15193:345::-;15260:6;15309:2;15297:9;15288:7;15284:23;15280:32;15277:119;;;15315:79;;:::i;:::-;15277:119;15435:1;15460:61;15513:7;15504:6;15493:9;15489:22;15460:61;:::i;:::-;15450:71;;15406:125;15193:345;;;;:::o;15544:220::-;15684:34;15680:1;15672:6;15668:14;15661:58;15753:3;15748:2;15740:6;15736:15;15729:28;15544:220;:::o;15770:366::-;15912:3;15933:67;15997:2;15992:3;15933:67;:::i;:::-;15926:74;;16009:93;16098:3;16009:93;:::i;:::-;16127:2;16122:3;16118:12;16111:19;;15770:366;;;:::o;16142:419::-;16308:4;16346:2;16335:9;16331:18;16323:26;;16395:9;16389:4;16385:20;16381:1;16370:9;16366:17;16359:47;16423:131;16549:4;16423:131;:::i;:::-;16415:139;;16142:419;;;:::o;16567:154::-;16707:6;16703:1;16695:6;16691:14;16684:30;16567:154;:::o;16727:365::-;16869:3;16890:66;16954:1;16949:3;16890:66;:::i;:::-;16883:73;;16965:93;17054:3;16965:93;:::i;:::-;17083:2;17078:3;17074:12;17067:19;;16727:365;;;:::o;17098:561::-;17308:4;17346:2;17335:9;17331:18;17323:26;;17359:87;17443:1;17432:9;17428:17;17419:6;17359:87;:::i;:::-;17493:9;17487:4;17483:20;17478:2;17467:9;17463:18;17456:48;17521:131;17647:4;17521:131;:::i;:::-;17513:139;;17098:561;;;;:::o;17665:352::-;17796:4;17834:2;17823:9;17819:18;17811:26;;17847:87;17931:1;17920:9;17916:17;17907:6;17847:87;:::i;:::-;17944:66;18006:2;17995:9;17991:18;17982:6;17944:66;:::i;:::-;17665:352;;;;;:::o;18023:320::-;18138:4;18176:2;18165:9;18161:18;18153:26;;18189:71;18257:1;18246:9;18242:17;18233:6;18189:71;:::i;:::-;18270:66;18332:2;18321:9;18317:18;18308:6;18270:66;:::i;:::-;18023:320;;;;;:::o",
  "source": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.0;\r\npragma experimental ABIEncoderV2;\r\n\r\nimport { PhotoNFT } from \"./PhotoNFT.sol\";\r\nimport { PhotoNFTData } from \"./PhotoNFTData.sol\";\r\n\r\n\r\n/**\r\n * @title - PhotoNFTTradable contract\r\n * @notice - This contract has role that put on sale of photoNFTs\r\n */\r\ncontract PhotoNFTTradable {\r\n    event TradeStatusChange(address ad, bytes32 status);\r\n    event TradePremiumStatusChange(address ad, bool status);\r\n\r\n    //cjh \r\n    // PhotoNFT public photoNFT;\r\n    PhotoNFTData public photoNFTData;\r\n\r\n    struct Trade {\r\n        address seller;\r\n        uint256 photoId;  // PhotoNFT's token ID\r\n        uint256 photoPrice;\r\n        bytes32 status;   // Open, Executed, Cancelled\r\n        bool    premiumStatus; // false : not , true: premium\r\n    }\r\n    mapping(address => Trade) public trades;  // [Key]: PhotoNFT's token ID\r\n\r\n    uint256 tradeCounter;\r\n\r\n    constructor(PhotoNFTData _photoNFTData) public {\r\n        photoNFTData = _photoNFTData;\r\n        tradeCounter = 0;\r\n    }\r\n\r\n    /**\r\n     * @notice - This method is only executed when a seller create a new PhotoNFT\r\n     * @dev Opens a new trade. Puts _photoId in escrow.\r\n     * @param _photoId The id for the photoId to trade.\r\n     * @param _photoPrice The amount of currency for which to trade the photoId.\r\n     */\r\n    function openTradeWhenCreateNewPhotoNFT(PhotoNFT photoNFT, uint256 _photoId, uint256 _photoPrice) public {\r\n        photoNFT.transferFrom(msg.sender, address(this), _photoId);\r\n\r\n        tradeCounter += 1;    /// [Note]: New. Trade count is started from \"1\". This is to align photoId\r\n\r\n        //cjh\r\n        // trades[tradeCounter] = Trade({\r\n        trades[address(photoNFT)] = Trade({\r\n            seller: msg.sender,\r\n            photoId: _photoId,\r\n            photoPrice: _photoPrice,\r\n            status: \"Open\", \r\n            premiumStatus : false\r\n        });\r\n        //tradeCounter += 1;  /// [Note]: Original\r\n        emit TradeStatusChange(address(photoNFT), \"Open\");\r\n    }\r\n\r\n    /**\r\n     * @dev Opens a trade by the seller.\r\n     */\r\n    function openTrade(PhotoNFT photoNFT, uint256 _photoId) public {\r\n        \r\n        Trade storage trade = trades[address(photoNFT)];\r\n        require(\r\n            msg.sender == trade.seller,\r\n            \"Trade can be open only by seller.\"\r\n        );\r\n\r\n        photoNFTData.updateStatus(photoNFT, \"Open\");\r\n        photoNFT.transferFrom(msg.sender, address(this), trade.photoId);\r\n        // trades[photoNFT].status = \"Open\";\r\n        //cjh \r\n        trade.status = \"Open\";\r\n        emit TradeStatusChange(address(photoNFT), \"Open\");\r\n    }\r\n\r\n    /**\r\n     * @dev Cancels a trade by the seller.\r\n     */\r\n    function cancelTrade(PhotoNFT photoNFT, uint256 _photoId) public {\r\n        Trade storage trade = trades[address(photoNFT)];\r\n\r\n        require(\r\n            msg.sender == trade.seller,\r\n            \"Trade can be cancelled only by seller.\"\r\n        );\r\n        // require(trade.status == \"Open\", \"Trade is not Open.\");\r\n\r\n        photoNFTData.updateStatus(photoNFT, \"Cancelled\");\r\n        photoNFT.transferFrom(address(this), trade.seller, trade.photoId);\r\n        trade.status = \"Cancelled\";\r\n        emit TradeStatusChange(address(photoNFT), \"Cancelled\");\r\n    }\r\n\r\n    /**\r\n     * @dev Opens a trade by the seller.\r\n     */\r\n    function updatePremiumStatus(PhotoNFT photoNFT, uint256 _photoId, bool _newState) public {\r\n        Trade storage trade = trades[address(photoNFT)];\r\n        require(\r\n            msg.sender == trade.seller,\r\n            \"Trade can be open only by seller.\"\r\n        );\r\n        photoNFTData.updatePremiumStatus(photoNFT, _newState);     \r\n         \r\n        trade.premiumStatus = _newState;\r\n        emit TradePremiumStatusChange(address(photoNFT), _newState);\r\n    }\r\n    \r\n    /**\r\n     * @dev Executes a trade. Must have approved this contract to transfer the amount of currency specified to the seller. Transfers ownership of the photoId to the filler.\r\n     */\r\n    function transferOwnershipOfPhotoNFT(PhotoNFT _photoNFT, uint256 _photoId, address _buyer) public {\r\n        PhotoNFT photoNFT = _photoNFT;\r\n\r\n        Trade memory trade = getTrade(_photoNFT);\r\n        require(trade.status == \"Open\", \"Trade is not Open.\");\r\n\r\n        _updateSeller(_photoNFT, _photoId, _buyer);\r\n\r\n        //cjh \r\n\r\n        photoNFT.transferFrom(address(this), _buyer, trade.photoId);\r\n        trade.status = \"Cancelled\";\r\n        emit TradeStatusChange(address(_photoNFT), \"Cancelled\");\r\n    }\r\n\r\n    function _updateSeller(PhotoNFT photoNFT, uint256 _photoId, address _newSeller) internal {\r\n        Trade storage trade = trades[address(photoNFT)];\r\n        trade.seller = _newSeller;\r\n    }\r\n\r\n\r\n    /**\r\n     * @dev - Returns the details for a trade.\r\n     */\r\n    function getTrade(PhotoNFT photoNFT) public view returns (Trade memory trade_) {\r\n        Trade memory trade = trades[address(photoNFT)];\r\n        return trade;\r\n        //return (trade.seller, trade.photoId, trade.photoPrice, trade.status);\r\n    }\r\n}\r\n",
  "sourcePath": "C:\\testing\\NFT-marketplace\\contracts\\PhotoNFTTradable.sol",
  "ast": {
    "absolutePath": "project:/contracts/PhotoNFTTradable.sol",
    "exportedSymbols": {
      "PhotoNFT": [
        133
      ],
      "PhotoNFTData": [
        429
      ],
      "PhotoNFTTradable": [
        1362
      ]
    },
    "id": 1363,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 963,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "33:23:6"
      },
      {
        "id": 964,
        "literals": [
          "experimental",
          "ABIEncoderV2"
        ],
        "nodeType": "PragmaDirective",
        "src": "58:33:6"
      },
      {
        "absolutePath": "project:/contracts/PhotoNFT.sol",
        "file": "./PhotoNFT.sol",
        "id": 966,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1363,
        "sourceUnit": 134,
        "src": "95:42:6",
        "symbolAliases": [
          {
            "foreign": {
              "id": 965,
              "name": "PhotoNFT",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "src": "104:8:6",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/PhotoNFTData.sol",
        "file": "./PhotoNFTData.sol",
        "id": 968,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1363,
        "sourceUnit": 430,
        "src": "139:50:6",
        "symbolAliases": [
          {
            "foreign": {
              "id": 967,
              "name": "PhotoNFTData",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "src": "148:12:6",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "PhotoNFTTradable",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 969,
          "nodeType": "StructuredDocumentation",
          "src": "195:114:6",
          "text": " @title - PhotoNFTTradable contract\n @notice - This contract has role that put on sale of photoNFTs"
        },
        "fullyImplemented": true,
        "id": 1362,
        "linearizedBaseContracts": [
          1362
        ],
        "name": "PhotoNFTTradable",
        "nameLocation": "320:16:6",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "anonymous": false,
            "id": 975,
            "name": "TradeStatusChange",
            "nameLocation": "350:17:6",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 974,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 971,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "ad",
                  "nameLocation": "376:2:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 975,
                  "src": "368:10:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 970,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "368:7:6",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 973,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "status",
                  "nameLocation": "388:6:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 975,
                  "src": "380:14:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 972,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "380:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "367:28:6"
            },
            "src": "344:52:6"
          },
          {
            "anonymous": false,
            "id": 981,
            "name": "TradePremiumStatusChange",
            "nameLocation": "408:24:6",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 980,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 977,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "ad",
                  "nameLocation": "441:2:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 981,
                  "src": "433:10:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 976,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "433:7:6",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 979,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "status",
                  "nameLocation": "450:6:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 981,
                  "src": "445:11:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 978,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "445:4:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "432:25:6"
            },
            "src": "402:56:6"
          },
          {
            "constant": false,
            "functionSelector": "ec039514",
            "id": 984,
            "mutability": "mutable",
            "name": "photoNFTData",
            "nameLocation": "532:12:6",
            "nodeType": "VariableDeclaration",
            "scope": 1362,
            "src": "512:32:6",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_PhotoNFTData_$429",
              "typeString": "contract PhotoNFTData"
            },
            "typeName": {
              "id": 983,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 982,
                "name": "PhotoNFTData",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 429,
                "src": "512:12:6"
              },
              "referencedDeclaration": 429,
              "src": "512:12:6",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_PhotoNFTData_$429",
                "typeString": "contract PhotoNFTData"
              }
            },
            "visibility": "public"
          },
          {
            "canonicalName": "PhotoNFTTradable.Trade",
            "id": 995,
            "members": [
              {
                "constant": false,
                "id": 986,
                "mutability": "mutable",
                "name": "seller",
                "nameLocation": "585:6:6",
                "nodeType": "VariableDeclaration",
                "scope": 995,
                "src": "577:14:6",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 985,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "577:7:6",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 988,
                "mutability": "mutable",
                "name": "photoId",
                "nameLocation": "610:7:6",
                "nodeType": "VariableDeclaration",
                "scope": 995,
                "src": "602:15:6",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 987,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "602:7:6",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 990,
                "mutability": "mutable",
                "name": "photoPrice",
                "nameLocation": "660:10:6",
                "nodeType": "VariableDeclaration",
                "scope": 995,
                "src": "652:18:6",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 989,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "652:7:6",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 992,
                "mutability": "mutable",
                "name": "status",
                "nameLocation": "689:6:6",
                "nodeType": "VariableDeclaration",
                "scope": 995,
                "src": "681:14:6",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                },
                "typeName": {
                  "id": 991,
                  "name": "bytes32",
                  "nodeType": "ElementaryTypeName",
                  "src": "681:7:6",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 994,
                "mutability": "mutable",
                "name": "premiumStatus",
                "nameLocation": "745:13:6",
                "nodeType": "VariableDeclaration",
                "scope": 995,
                "src": "737:21:6",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                },
                "typeName": {
                  "id": 993,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "737:4:6",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "Trade",
            "nameLocation": "560:5:6",
            "nodeType": "StructDefinition",
            "scope": 1362,
            "src": "553:244:6",
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "a9f752e5",
            "id": 1000,
            "mutability": "mutable",
            "name": "trades",
            "nameLocation": "836:6:6",
            "nodeType": "VariableDeclaration",
            "scope": 1362,
            "src": "803:39:6",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Trade_$995_storage_$",
              "typeString": "mapping(address => struct PhotoNFTTradable.Trade)"
            },
            "typeName": {
              "id": 999,
              "keyType": {
                "id": 996,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "811:7:6",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "803:25:6",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Trade_$995_storage_$",
                "typeString": "mapping(address => struct PhotoNFTTradable.Trade)"
              },
              "valueType": {
                "id": 998,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 997,
                  "name": "Trade",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 995,
                  "src": "822:5:6"
                },
                "referencedDeclaration": 995,
                "src": "822:5:6",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Trade_$995_storage_ptr",
                  "typeString": "struct PhotoNFTTradable.Trade"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 1002,
            "mutability": "mutable",
            "name": "tradeCounter",
            "nameLocation": "890:12:6",
            "nodeType": "VariableDeclaration",
            "scope": 1362,
            "src": "882:20:6",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 1001,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "882:7:6",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "internal"
          },
          {
            "body": {
              "id": 1016,
              "nodeType": "Block",
              "src": "958:74:6",
              "statements": [
                {
                  "expression": {
                    "id": 1010,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1008,
                      "name": "photoNFTData",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 984,
                      "src": "969:12:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_PhotoNFTData_$429",
                        "typeString": "contract PhotoNFTData"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 1009,
                      "name": "_photoNFTData",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1005,
                      "src": "984:13:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_PhotoNFTData_$429",
                        "typeString": "contract PhotoNFTData"
                      }
                    },
                    "src": "969:28:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_PhotoNFTData_$429",
                      "typeString": "contract PhotoNFTData"
                    }
                  },
                  "id": 1011,
                  "nodeType": "ExpressionStatement",
                  "src": "969:28:6"
                },
                {
                  "expression": {
                    "id": 1014,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1012,
                      "name": "tradeCounter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1002,
                      "src": "1008:12:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "30",
                      "id": 1013,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1023:1:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "1008:16:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1015,
                  "nodeType": "ExpressionStatement",
                  "src": "1008:16:6"
                }
              ]
            },
            "id": 1017,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1006,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1005,
                  "mutability": "mutable",
                  "name": "_photoNFTData",
                  "nameLocation": "936:13:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 1017,
                  "src": "923:26:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_PhotoNFTData_$429",
                    "typeString": "contract PhotoNFTData"
                  },
                  "typeName": {
                    "id": 1004,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 1003,
                      "name": "PhotoNFTData",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 429,
                      "src": "923:12:6"
                    },
                    "referencedDeclaration": 429,
                    "src": "923:12:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_PhotoNFTData_$429",
                      "typeString": "contract PhotoNFTData"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "922:28:6"
            },
            "returnParameters": {
              "id": 1007,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "958:0:6"
            },
            "scope": 1362,
            "src": "911:121:6",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1068,
              "nodeType": "Block",
              "src": "1442:583:6",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 1031,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "1475:3:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1032,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "1475:10:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 1035,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967268,
                            "src": "1495:4:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_PhotoNFTTradable_$1362",
                              "typeString": "contract PhotoNFTTradable"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_PhotoNFTTradable_$1362",
                              "typeString": "contract PhotoNFTTradable"
                            }
                          ],
                          "id": 1034,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1487:7:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 1033,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1487:7:6",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 1036,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1487:13:6",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1037,
                        "name": "_photoId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1023,
                        "src": "1502:8:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 1028,
                        "name": "photoNFT",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1021,
                        "src": "1453:8:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_PhotoNFT_$133",
                          "typeString": "contract PhotoNFT"
                        }
                      },
                      "id": 1030,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 21539,
                      "src": "1453:21:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256) external"
                      }
                    },
                    "id": 1038,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1453:58:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1039,
                  "nodeType": "ExpressionStatement",
                  "src": "1453:58:6"
                },
                {
                  "expression": {
                    "id": 1042,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1040,
                      "name": "tradeCounter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1002,
                      "src": "1524:12:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "hexValue": "31",
                      "id": 1041,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1540:1:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "1524:17:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1043,
                  "nodeType": "ExpressionStatement",
                  "src": "1524:17:6"
                },
                {
                  "documentation": "[Note]: New. Trade count is started from \"1\". This is to align photoId",
                  "expression": {
                    "id": 1058,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 1044,
                        "name": "trades",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1000,
                        "src": "1690:6:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Trade_$995_storage_$",
                          "typeString": "mapping(address => struct PhotoNFTTradable.Trade storage ref)"
                        }
                      },
                      "id": 1049,
                      "indexExpression": {
                        "arguments": [
                          {
                            "id": 1047,
                            "name": "photoNFT",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1021,
                            "src": "1705:8:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_PhotoNFT_$133",
                              "typeString": "contract PhotoNFT"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_PhotoNFT_$133",
                              "typeString": "contract PhotoNFT"
                            }
                          ],
                          "id": 1046,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1697:7:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 1045,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1697:7:6",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 1048,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1697:17:6",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1690:25:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Trade_$995_storage",
                        "typeString": "struct PhotoNFTTradable.Trade storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "expression": {
                            "id": 1051,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "1747:3:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 1052,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "1747:10:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "id": 1053,
                          "name": "_photoId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1023,
                          "src": "1781:8:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "id": 1054,
                          "name": "_photoPrice",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1025,
                          "src": "1816:11:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "hexValue": "4f70656e",
                          "id": 1055,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1850:6:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_8f5d8ba7f4bf26b6e2e2060e5bd28107042be35460fbd828c9d29a2d8af14445",
                            "typeString": "literal_string \"Open\""
                          },
                          "value": "Open"
                        },
                        {
                          "hexValue": "66616c7365",
                          "id": 1056,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1888:5:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "false"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_stringliteral_8f5d8ba7f4bf26b6e2e2060e5bd28107042be35460fbd828c9d29a2d8af14445",
                            "typeString": "literal_string \"Open\""
                          },
                          {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        ],
                        "id": 1050,
                        "name": "Trade",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 995,
                        "src": "1718:5:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_struct$_Trade_$995_storage_ptr_$",
                          "typeString": "type(struct PhotoNFTTradable.Trade storage pointer)"
                        }
                      },
                      "id": 1057,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "structConstructorCall",
                      "lValueRequested": false,
                      "names": [
                        "seller",
                        "photoId",
                        "photoPrice",
                        "status",
                        "premiumStatus"
                      ],
                      "nodeType": "FunctionCall",
                      "src": "1718:187:6",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Trade_$995_memory_ptr",
                        "typeString": "struct PhotoNFTTradable.Trade memory"
                      }
                    },
                    "src": "1690:215:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Trade_$995_storage",
                      "typeString": "struct PhotoNFTTradable.Trade storage ref"
                    }
                  },
                  "id": 1059,
                  "nodeType": "ExpressionStatement",
                  "src": "1690:215:6"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 1063,
                            "name": "photoNFT",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1021,
                            "src": "1999:8:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_PhotoNFT_$133",
                              "typeString": "contract PhotoNFT"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_PhotoNFT_$133",
                              "typeString": "contract PhotoNFT"
                            }
                          ],
                          "id": 1062,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1991:7:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 1061,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1991:7:6",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 1064,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1991:17:6",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "4f70656e",
                        "id": 1065,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2010:6:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_8f5d8ba7f4bf26b6e2e2060e5bd28107042be35460fbd828c9d29a2d8af14445",
                          "typeString": "literal_string \"Open\""
                        },
                        "value": "Open"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_8f5d8ba7f4bf26b6e2e2060e5bd28107042be35460fbd828c9d29a2d8af14445",
                          "typeString": "literal_string \"Open\""
                        }
                      ],
                      "id": 1060,
                      "name": "TradeStatusChange",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 975,
                      "src": "1973:17:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_bytes32_$returns$__$",
                        "typeString": "function (address,bytes32)"
                      }
                    },
                    "id": 1066,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1973:44:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1067,
                  "nodeType": "EmitStatement",
                  "src": "1968:49:6"
                }
              ]
            },
            "documentation": {
              "id": 1018,
              "nodeType": "StructuredDocumentation",
              "src": "1040:291:6",
              "text": " @notice - This method is only executed when a seller create a new PhotoNFT\n @dev Opens a new trade. Puts _photoId in escrow.\n @param _photoId The id for the photoId to trade.\n @param _photoPrice The amount of currency for which to trade the photoId."
            },
            "functionSelector": "49b1d3e7",
            "id": 1069,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "openTradeWhenCreateNewPhotoNFT",
            "nameLocation": "1346:30:6",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1026,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1021,
                  "mutability": "mutable",
                  "name": "photoNFT",
                  "nameLocation": "1386:8:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 1069,
                  "src": "1377:17:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_PhotoNFT_$133",
                    "typeString": "contract PhotoNFT"
                  },
                  "typeName": {
                    "id": 1020,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 1019,
                      "name": "PhotoNFT",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 133,
                      "src": "1377:8:6"
                    },
                    "referencedDeclaration": 133,
                    "src": "1377:8:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_PhotoNFT_$133",
                      "typeString": "contract PhotoNFT"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1023,
                  "mutability": "mutable",
                  "name": "_photoId",
                  "nameLocation": "1404:8:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 1069,
                  "src": "1396:16:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1022,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1396:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1025,
                  "mutability": "mutable",
                  "name": "_photoPrice",
                  "nameLocation": "1422:11:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 1069,
                  "src": "1414:19:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1024,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1414:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1376:58:6"
            },
            "returnParameters": {
              "id": 1027,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1442:0:6"
            },
            "scope": 1362,
            "src": "1337:688:6",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1131,
              "nodeType": "Block",
              "src": "2156:480:6",
              "statements": [
                {
                  "assignments": [
                    1080
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1080,
                      "mutability": "mutable",
                      "name": "trade",
                      "nameLocation": "2191:5:6",
                      "nodeType": "VariableDeclaration",
                      "scope": 1131,
                      "src": "2177:19:6",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Trade_$995_storage_ptr",
                        "typeString": "struct PhotoNFTTradable.Trade"
                      },
                      "typeName": {
                        "id": 1079,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 1078,
                          "name": "Trade",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 995,
                          "src": "2177:5:6"
                        },
                        "referencedDeclaration": 995,
                        "src": "2177:5:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Trade_$995_storage_ptr",
                          "typeString": "struct PhotoNFTTradable.Trade"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1087,
                  "initialValue": {
                    "baseExpression": {
                      "id": 1081,
                      "name": "trades",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1000,
                      "src": "2199:6:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Trade_$995_storage_$",
                        "typeString": "mapping(address => struct PhotoNFTTradable.Trade storage ref)"
                      }
                    },
                    "id": 1086,
                    "indexExpression": {
                      "arguments": [
                        {
                          "id": 1084,
                          "name": "photoNFT",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1073,
                          "src": "2214:8:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_PhotoNFT_$133",
                            "typeString": "contract PhotoNFT"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_PhotoNFT_$133",
                            "typeString": "contract PhotoNFT"
                          }
                        ],
                        "id": 1083,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "2206:7:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 1082,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2206:7:6",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 1085,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2206:17:6",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "2199:25:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Trade_$995_storage",
                      "typeString": "struct PhotoNFTTradable.Trade storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2177:47:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 1093,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 1089,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "2257:3:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 1090,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "2257:10:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "id": 1091,
                            "name": "trade",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1080,
                            "src": "2271:5:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Trade_$995_storage_ptr",
                              "typeString": "struct PhotoNFTTradable.Trade storage pointer"
                            }
                          },
                          "id": 1092,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "seller",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 986,
                          "src": "2271:12:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "2257:26:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "54726164652063616e206265206f70656e206f6e6c792062792073656c6c65722e",
                        "id": 1094,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2298:35:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_268e48c2205378f3b7ae3c6b6b6d9ec43fe563160d624a82a00d8fddeef26408",
                          "typeString": "literal_string \"Trade can be open only by seller.\""
                        },
                        "value": "Trade can be open only by seller."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_268e48c2205378f3b7ae3c6b6b6d9ec43fe563160d624a82a00d8fddeef26408",
                          "typeString": "literal_string \"Trade can be open only by seller.\""
                        }
                      ],
                      "id": 1088,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "2235:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1095,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2235:109:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1096,
                  "nodeType": "ExpressionStatement",
                  "src": "2235:109:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1100,
                        "name": "photoNFT",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1073,
                        "src": "2383:8:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_PhotoNFT_$133",
                          "typeString": "contract PhotoNFT"
                        }
                      },
                      {
                        "hexValue": "4f70656e",
                        "id": 1101,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2393:6:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_8f5d8ba7f4bf26b6e2e2060e5bd28107042be35460fbd828c9d29a2d8af14445",
                          "typeString": "literal_string \"Open\""
                        },
                        "value": "Open"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_PhotoNFT_$133",
                          "typeString": "contract PhotoNFT"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_8f5d8ba7f4bf26b6e2e2060e5bd28107042be35460fbd828c9d29a2d8af14445",
                          "typeString": "literal_string \"Open\""
                        }
                      ],
                      "expression": {
                        "id": 1097,
                        "name": "photoNFTData",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 984,
                        "src": "2357:12:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_PhotoNFTData_$429",
                          "typeString": "contract PhotoNFTData"
                        }
                      },
                      "id": 1099,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "updateStatus",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 270,
                      "src": "2357:25:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_contract$_PhotoNFT_$133_$_t_string_memory_ptr_$returns$_t_bool_$",
                        "typeString": "function (contract PhotoNFT,string memory) external returns (bool)"
                      }
                    },
                    "id": 1102,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2357:43:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1103,
                  "nodeType": "ExpressionStatement",
                  "src": "2357:43:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 1107,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "2433:3:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1108,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "2433:10:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 1111,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967268,
                            "src": "2453:4:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_PhotoNFTTradable_$1362",
                              "typeString": "contract PhotoNFTTradable"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_PhotoNFTTradable_$1362",
                              "typeString": "contract PhotoNFTTradable"
                            }
                          ],
                          "id": 1110,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2445:7:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 1109,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "2445:7:6",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 1112,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2445:13:6",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 1113,
                          "name": "trade",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1080,
                          "src": "2460:5:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Trade_$995_storage_ptr",
                            "typeString": "struct PhotoNFTTradable.Trade storage pointer"
                          }
                        },
                        "id": 1114,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "photoId",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 988,
                        "src": "2460:13:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 1104,
                        "name": "photoNFT",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1073,
                        "src": "2411:8:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_PhotoNFT_$133",
                          "typeString": "contract PhotoNFT"
                        }
                      },
                      "id": 1106,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 21539,
                      "src": "2411:21:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256) external"
                      }
                    },
                    "id": 1115,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2411:63:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1116,
                  "nodeType": "ExpressionStatement",
                  "src": "2411:63:6"
                },
                {
                  "expression": {
                    "id": 1121,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 1117,
                        "name": "trade",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1080,
                        "src": "2547:5:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Trade_$995_storage_ptr",
                          "typeString": "struct PhotoNFTTradable.Trade storage pointer"
                        }
                      },
                      "id": 1119,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "status",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 992,
                      "src": "2547:12:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "4f70656e",
                      "id": 1120,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "string",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2562:6:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_stringliteral_8f5d8ba7f4bf26b6e2e2060e5bd28107042be35460fbd828c9d29a2d8af14445",
                        "typeString": "literal_string \"Open\""
                      },
                      "value": "Open"
                    },
                    "src": "2547:21:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "id": 1122,
                  "nodeType": "ExpressionStatement",
                  "src": "2547:21:6"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 1126,
                            "name": "photoNFT",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1073,
                            "src": "2610:8:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_PhotoNFT_$133",
                              "typeString": "contract PhotoNFT"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_PhotoNFT_$133",
                              "typeString": "contract PhotoNFT"
                            }
                          ],
                          "id": 1125,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2602:7:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 1124,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "2602:7:6",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 1127,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2602:17:6",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "4f70656e",
                        "id": 1128,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2621:6:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_8f5d8ba7f4bf26b6e2e2060e5bd28107042be35460fbd828c9d29a2d8af14445",
                          "typeString": "literal_string \"Open\""
                        },
                        "value": "Open"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_8f5d8ba7f4bf26b6e2e2060e5bd28107042be35460fbd828c9d29a2d8af14445",
                          "typeString": "literal_string \"Open\""
                        }
                      ],
                      "id": 1123,
                      "name": "TradeStatusChange",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 975,
                      "src": "2584:17:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_bytes32_$returns$__$",
                        "typeString": "function (address,bytes32)"
                      }
                    },
                    "id": 1129,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2584:44:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1130,
                  "nodeType": "EmitStatement",
                  "src": "2579:49:6"
                }
              ]
            },
            "documentation": {
              "id": 1070,
              "nodeType": "StructuredDocumentation",
              "src": "2033:54:6",
              "text": " @dev Opens a trade by the seller."
            },
            "functionSelector": "80a279c4",
            "id": 1132,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "openTrade",
            "nameLocation": "2102:9:6",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1076,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1073,
                  "mutability": "mutable",
                  "name": "photoNFT",
                  "nameLocation": "2121:8:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 1132,
                  "src": "2112:17:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_PhotoNFT_$133",
                    "typeString": "contract PhotoNFT"
                  },
                  "typeName": {
                    "id": 1072,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 1071,
                      "name": "PhotoNFT",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 133,
                      "src": "2112:8:6"
                    },
                    "referencedDeclaration": 133,
                    "src": "2112:8:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_PhotoNFT_$133",
                      "typeString": "contract PhotoNFT"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1075,
                  "mutability": "mutable",
                  "name": "_photoId",
                  "nameLocation": "2139:8:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 1132,
                  "src": "2131:16:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1074,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2131:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2111:37:6"
            },
            "returnParameters": {
              "id": 1077,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2156:0:6"
            },
            "scope": 1362,
            "src": "2093:543:6",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1194,
              "nodeType": "Block",
              "src": "2771:499:6",
              "statements": [
                {
                  "assignments": [
                    1143
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1143,
                      "mutability": "mutable",
                      "name": "trade",
                      "nameLocation": "2796:5:6",
                      "nodeType": "VariableDeclaration",
                      "scope": 1194,
                      "src": "2782:19:6",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Trade_$995_storage_ptr",
                        "typeString": "struct PhotoNFTTradable.Trade"
                      },
                      "typeName": {
                        "id": 1142,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 1141,
                          "name": "Trade",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 995,
                          "src": "2782:5:6"
                        },
                        "referencedDeclaration": 995,
                        "src": "2782:5:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Trade_$995_storage_ptr",
                          "typeString": "struct PhotoNFTTradable.Trade"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1150,
                  "initialValue": {
                    "baseExpression": {
                      "id": 1144,
                      "name": "trades",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1000,
                      "src": "2804:6:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Trade_$995_storage_$",
                        "typeString": "mapping(address => struct PhotoNFTTradable.Trade storage ref)"
                      }
                    },
                    "id": 1149,
                    "indexExpression": {
                      "arguments": [
                        {
                          "id": 1147,
                          "name": "photoNFT",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1136,
                          "src": "2819:8:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_PhotoNFT_$133",
                            "typeString": "contract PhotoNFT"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_PhotoNFT_$133",
                            "typeString": "contract PhotoNFT"
                          }
                        ],
                        "id": 1146,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "2811:7:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 1145,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2811:7:6",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 1148,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2811:17:6",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "2804:25:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Trade_$995_storage",
                      "typeString": "struct PhotoNFTTradable.Trade storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2782:47:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 1156,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 1152,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "2864:3:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 1153,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "2864:10:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "id": 1154,
                            "name": "trade",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1143,
                            "src": "2878:5:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Trade_$995_storage_ptr",
                              "typeString": "struct PhotoNFTTradable.Trade storage pointer"
                            }
                          },
                          "id": 1155,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "seller",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 986,
                          "src": "2878:12:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "2864:26:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "54726164652063616e2062652063616e63656c6c6564206f6e6c792062792073656c6c65722e",
                        "id": 1157,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2905:40:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_0744e3e8de6583d086339a67b8ab70fd095f3c7b732b6676ce3729ae175dc11f",
                          "typeString": "literal_string \"Trade can be cancelled only by seller.\""
                        },
                        "value": "Trade can be cancelled only by seller."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_0744e3e8de6583d086339a67b8ab70fd095f3c7b732b6676ce3729ae175dc11f",
                          "typeString": "literal_string \"Trade can be cancelled only by seller.\""
                        }
                      ],
                      "id": 1151,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "2842:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1158,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2842:114:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1159,
                  "nodeType": "ExpressionStatement",
                  "src": "2842:114:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1163,
                        "name": "photoNFT",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1136,
                        "src": "3062:8:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_PhotoNFT_$133",
                          "typeString": "contract PhotoNFT"
                        }
                      },
                      {
                        "hexValue": "43616e63656c6c6564",
                        "id": 1164,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3072:11:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_737a39c9fa82f68622f45ae205e399b0f0a7252140d9357a90220c542bb4ef4b",
                          "typeString": "literal_string \"Cancelled\""
                        },
                        "value": "Cancelled"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_PhotoNFT_$133",
                          "typeString": "contract PhotoNFT"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_737a39c9fa82f68622f45ae205e399b0f0a7252140d9357a90220c542bb4ef4b",
                          "typeString": "literal_string \"Cancelled\""
                        }
                      ],
                      "expression": {
                        "id": 1160,
                        "name": "photoNFTData",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 984,
                        "src": "3036:12:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_PhotoNFTData_$429",
                          "typeString": "contract PhotoNFTData"
                        }
                      },
                      "id": 1162,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "updateStatus",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 270,
                      "src": "3036:25:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_contract$_PhotoNFT_$133_$_t_string_memory_ptr_$returns$_t_bool_$",
                        "typeString": "function (contract PhotoNFT,string memory) external returns (bool)"
                      }
                    },
                    "id": 1165,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3036:48:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1166,
                  "nodeType": "ExpressionStatement",
                  "src": "3036:48:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 1172,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967268,
                            "src": "3125:4:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_PhotoNFTTradable_$1362",
                              "typeString": "contract PhotoNFTTradable"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_PhotoNFTTradable_$1362",
                              "typeString": "contract PhotoNFTTradable"
                            }
                          ],
                          "id": 1171,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3117:7:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 1170,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "3117:7:6",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 1173,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3117:13:6",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 1174,
                          "name": "trade",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1143,
                          "src": "3132:5:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Trade_$995_storage_ptr",
                            "typeString": "struct PhotoNFTTradable.Trade storage pointer"
                          }
                        },
                        "id": 1175,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "seller",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 986,
                        "src": "3132:12:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 1176,
                          "name": "trade",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1143,
                          "src": "3146:5:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Trade_$995_storage_ptr",
                            "typeString": "struct PhotoNFTTradable.Trade storage pointer"
                          }
                        },
                        "id": 1177,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "photoId",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 988,
                        "src": "3146:13:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 1167,
                        "name": "photoNFT",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1136,
                        "src": "3095:8:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_PhotoNFT_$133",
                          "typeString": "contract PhotoNFT"
                        }
                      },
                      "id": 1169,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 21539,
                      "src": "3095:21:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256) external"
                      }
                    },
                    "id": 1178,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3095:65:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1179,
                  "nodeType": "ExpressionStatement",
                  "src": "3095:65:6"
                },
                {
                  "expression": {
                    "id": 1184,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 1180,
                        "name": "trade",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1143,
                        "src": "3171:5:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Trade_$995_storage_ptr",
                          "typeString": "struct PhotoNFTTradable.Trade storage pointer"
                        }
                      },
                      "id": 1182,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "status",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 992,
                      "src": "3171:12:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "43616e63656c6c6564",
                      "id": 1183,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "string",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3186:11:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_stringliteral_737a39c9fa82f68622f45ae205e399b0f0a7252140d9357a90220c542bb4ef4b",
                        "typeString": "literal_string \"Cancelled\""
                      },
                      "value": "Cancelled"
                    },
                    "src": "3171:26:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "id": 1185,
                  "nodeType": "ExpressionStatement",
                  "src": "3171:26:6"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 1189,
                            "name": "photoNFT",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1136,
                            "src": "3239:8:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_PhotoNFT_$133",
                              "typeString": "contract PhotoNFT"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_PhotoNFT_$133",
                              "typeString": "contract PhotoNFT"
                            }
                          ],
                          "id": 1188,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3231:7:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 1187,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "3231:7:6",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 1190,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3231:17:6",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "43616e63656c6c6564",
                        "id": 1191,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3250:11:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_737a39c9fa82f68622f45ae205e399b0f0a7252140d9357a90220c542bb4ef4b",
                          "typeString": "literal_string \"Cancelled\""
                        },
                        "value": "Cancelled"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_737a39c9fa82f68622f45ae205e399b0f0a7252140d9357a90220c542bb4ef4b",
                          "typeString": "literal_string \"Cancelled\""
                        }
                      ],
                      "id": 1186,
                      "name": "TradeStatusChange",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 975,
                      "src": "3213:17:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_bytes32_$returns$__$",
                        "typeString": "function (address,bytes32)"
                      }
                    },
                    "id": 1192,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3213:49:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1193,
                  "nodeType": "EmitStatement",
                  "src": "3208:54:6"
                }
              ]
            },
            "documentation": {
              "id": 1133,
              "nodeType": "StructuredDocumentation",
              "src": "2644:56:6",
              "text": " @dev Cancels a trade by the seller."
            },
            "functionSelector": "759c4bf3",
            "id": 1195,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "cancelTrade",
            "nameLocation": "2715:11:6",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1139,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1136,
                  "mutability": "mutable",
                  "name": "photoNFT",
                  "nameLocation": "2736:8:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 1195,
                  "src": "2727:17:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_PhotoNFT_$133",
                    "typeString": "contract PhotoNFT"
                  },
                  "typeName": {
                    "id": 1135,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 1134,
                      "name": "PhotoNFT",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 133,
                      "src": "2727:8:6"
                    },
                    "referencedDeclaration": 133,
                    "src": "2727:8:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_PhotoNFT_$133",
                      "typeString": "contract PhotoNFT"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1138,
                  "mutability": "mutable",
                  "name": "_photoId",
                  "nameLocation": "2754:8:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 1195,
                  "src": "2746:16:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1137,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2746:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2726:37:6"
            },
            "returnParameters": {
              "id": 1140,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2771:0:6"
            },
            "scope": 1362,
            "src": "2706:564:6",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1246,
              "nodeType": "Block",
              "src": "3427:378:6",
              "statements": [
                {
                  "assignments": [
                    1208
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1208,
                      "mutability": "mutable",
                      "name": "trade",
                      "nameLocation": "3452:5:6",
                      "nodeType": "VariableDeclaration",
                      "scope": 1246,
                      "src": "3438:19:6",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Trade_$995_storage_ptr",
                        "typeString": "struct PhotoNFTTradable.Trade"
                      },
                      "typeName": {
                        "id": 1207,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 1206,
                          "name": "Trade",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 995,
                          "src": "3438:5:6"
                        },
                        "referencedDeclaration": 995,
                        "src": "3438:5:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Trade_$995_storage_ptr",
                          "typeString": "struct PhotoNFTTradable.Trade"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1215,
                  "initialValue": {
                    "baseExpression": {
                      "id": 1209,
                      "name": "trades",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1000,
                      "src": "3460:6:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Trade_$995_storage_$",
                        "typeString": "mapping(address => struct PhotoNFTTradable.Trade storage ref)"
                      }
                    },
                    "id": 1214,
                    "indexExpression": {
                      "arguments": [
                        {
                          "id": 1212,
                          "name": "photoNFT",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1199,
                          "src": "3475:8:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_PhotoNFT_$133",
                            "typeString": "contract PhotoNFT"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_PhotoNFT_$133",
                            "typeString": "contract PhotoNFT"
                          }
                        ],
                        "id": 1211,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "3467:7:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 1210,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3467:7:6",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 1213,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3467:17:6",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "3460:25:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Trade_$995_storage",
                      "typeString": "struct PhotoNFTTradable.Trade storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3438:47:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 1221,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 1217,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "3518:3:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 1218,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "3518:10:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "id": 1219,
                            "name": "trade",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1208,
                            "src": "3532:5:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Trade_$995_storage_ptr",
                              "typeString": "struct PhotoNFTTradable.Trade storage pointer"
                            }
                          },
                          "id": 1220,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "seller",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 986,
                          "src": "3532:12:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "3518:26:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "54726164652063616e206265206f70656e206f6e6c792062792073656c6c65722e",
                        "id": 1222,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3559:35:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_268e48c2205378f3b7ae3c6b6b6d9ec43fe563160d624a82a00d8fddeef26408",
                          "typeString": "literal_string \"Trade can be open only by seller.\""
                        },
                        "value": "Trade can be open only by seller."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_268e48c2205378f3b7ae3c6b6b6d9ec43fe563160d624a82a00d8fddeef26408",
                          "typeString": "literal_string \"Trade can be open only by seller.\""
                        }
                      ],
                      "id": 1216,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "3496:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1223,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3496:109:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1224,
                  "nodeType": "ExpressionStatement",
                  "src": "3496:109:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1228,
                        "name": "photoNFT",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1199,
                        "src": "3649:8:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_PhotoNFT_$133",
                          "typeString": "contract PhotoNFT"
                        }
                      },
                      {
                        "id": 1229,
                        "name": "_newState",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1203,
                        "src": "3659:9:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_PhotoNFT_$133",
                          "typeString": "contract PhotoNFT"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "expression": {
                        "id": 1225,
                        "name": "photoNFTData",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 984,
                        "src": "3616:12:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_PhotoNFTData_$429",
                          "typeString": "contract PhotoNFTData"
                        }
                      },
                      "id": 1227,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "updatePremiumStatus",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 301,
                      "src": "3616:32:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_contract$_PhotoNFT_$133_$_t_bool_$returns$_t_bool_$",
                        "typeString": "function (contract PhotoNFT,bool) external returns (bool)"
                      }
                    },
                    "id": 1230,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3616:53:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1231,
                  "nodeType": "ExpressionStatement",
                  "src": "3616:53:6"
                },
                {
                  "expression": {
                    "id": 1236,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 1232,
                        "name": "trade",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1208,
                        "src": "3696:5:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Trade_$995_storage_ptr",
                          "typeString": "struct PhotoNFTTradable.Trade storage pointer"
                        }
                      },
                      "id": 1234,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "premiumStatus",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 994,
                      "src": "3696:19:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 1235,
                      "name": "_newState",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1203,
                      "src": "3718:9:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "3696:31:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1237,
                  "nodeType": "ExpressionStatement",
                  "src": "3696:31:6"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 1241,
                            "name": "photoNFT",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1199,
                            "src": "3776:8:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_PhotoNFT_$133",
                              "typeString": "contract PhotoNFT"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_PhotoNFT_$133",
                              "typeString": "contract PhotoNFT"
                            }
                          ],
                          "id": 1240,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3768:7:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 1239,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "3768:7:6",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 1242,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3768:17:6",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1243,
                        "name": "_newState",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1203,
                        "src": "3787:9:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 1238,
                      "name": "TradePremiumStatusChange",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 981,
                      "src": "3743:24:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_bool_$returns$__$",
                        "typeString": "function (address,bool)"
                      }
                    },
                    "id": 1244,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3743:54:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1245,
                  "nodeType": "EmitStatement",
                  "src": "3738:59:6"
                }
              ]
            },
            "documentation": {
              "id": 1196,
              "nodeType": "StructuredDocumentation",
              "src": "3278:54:6",
              "text": " @dev Opens a trade by the seller."
            },
            "functionSelector": "8d6b52f3",
            "id": 1247,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "updatePremiumStatus",
            "nameLocation": "3347:19:6",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1204,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1199,
                  "mutability": "mutable",
                  "name": "photoNFT",
                  "nameLocation": "3376:8:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 1247,
                  "src": "3367:17:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_PhotoNFT_$133",
                    "typeString": "contract PhotoNFT"
                  },
                  "typeName": {
                    "id": 1198,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 1197,
                      "name": "PhotoNFT",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 133,
                      "src": "3367:8:6"
                    },
                    "referencedDeclaration": 133,
                    "src": "3367:8:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_PhotoNFT_$133",
                      "typeString": "contract PhotoNFT"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1201,
                  "mutability": "mutable",
                  "name": "_photoId",
                  "nameLocation": "3394:8:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 1247,
                  "src": "3386:16:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1200,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3386:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1203,
                  "mutability": "mutable",
                  "name": "_newState",
                  "nameLocation": "3409:9:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 1247,
                  "src": "3404:14:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 1202,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "3404:4:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3366:53:6"
            },
            "returnParameters": {
              "id": 1205,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3427:0:6"
            },
            "scope": 1362,
            "src": "3338:467:6",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1310,
              "nodeType": "Block",
              "src": "4107:413:6",
              "statements": [
                {
                  "assignments": [
                    1260
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1260,
                      "mutability": "mutable",
                      "name": "photoNFT",
                      "nameLocation": "4127:8:6",
                      "nodeType": "VariableDeclaration",
                      "scope": 1310,
                      "src": "4118:17:6",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_PhotoNFT_$133",
                        "typeString": "contract PhotoNFT"
                      },
                      "typeName": {
                        "id": 1259,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 1258,
                          "name": "PhotoNFT",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 133,
                          "src": "4118:8:6"
                        },
                        "referencedDeclaration": 133,
                        "src": "4118:8:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_PhotoNFT_$133",
                          "typeString": "contract PhotoNFT"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1262,
                  "initialValue": {
                    "id": 1261,
                    "name": "_photoNFT",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1251,
                    "src": "4138:9:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_PhotoNFT_$133",
                      "typeString": "contract PhotoNFT"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4118:29:6"
                },
                {
                  "assignments": [
                    1265
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1265,
                      "mutability": "mutable",
                      "name": "trade",
                      "nameLocation": "4173:5:6",
                      "nodeType": "VariableDeclaration",
                      "scope": 1310,
                      "src": "4160:18:6",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Trade_$995_memory_ptr",
                        "typeString": "struct PhotoNFTTradable.Trade"
                      },
                      "typeName": {
                        "id": 1264,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 1263,
                          "name": "Trade",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 995,
                          "src": "4160:5:6"
                        },
                        "referencedDeclaration": 995,
                        "src": "4160:5:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Trade_$995_storage_ptr",
                          "typeString": "struct PhotoNFTTradable.Trade"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1269,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 1267,
                        "name": "_photoNFT",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1251,
                        "src": "4190:9:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_PhotoNFT_$133",
                          "typeString": "contract PhotoNFT"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_PhotoNFT_$133",
                          "typeString": "contract PhotoNFT"
                        }
                      ],
                      "id": 1266,
                      "name": "getTrade",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1361,
                      "src": "4181:8:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_contract$_PhotoNFT_$133_$returns$_t_struct$_Trade_$995_memory_ptr_$",
                        "typeString": "function (contract PhotoNFT) view returns (struct PhotoNFTTradable.Trade memory)"
                      }
                    },
                    "id": 1268,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4181:19:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Trade_$995_memory_ptr",
                      "typeString": "struct PhotoNFTTradable.Trade memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4160:40:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "id": 1274,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 1271,
                            "name": "trade",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1265,
                            "src": "4219:5:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Trade_$995_memory_ptr",
                              "typeString": "struct PhotoNFTTradable.Trade memory"
                            }
                          },
                          "id": 1272,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "status",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 992,
                          "src": "4219:12:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "4f70656e",
                          "id": 1273,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4235:6:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_8f5d8ba7f4bf26b6e2e2060e5bd28107042be35460fbd828c9d29a2d8af14445",
                            "typeString": "literal_string \"Open\""
                          },
                          "value": "Open"
                        },
                        "src": "4219:22:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5472616465206973206e6f74204f70656e2e",
                        "id": 1275,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4243:20:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_2911decf7be1dd9e4e03f78d29e68432f60f623c391d87eb01441f5ab4f7e1cc",
                          "typeString": "literal_string \"Trade is not Open.\""
                        },
                        "value": "Trade is not Open."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_2911decf7be1dd9e4e03f78d29e68432f60f623c391d87eb01441f5ab4f7e1cc",
                          "typeString": "literal_string \"Trade is not Open.\""
                        }
                      ],
                      "id": 1270,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "4211:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1276,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4211:53:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1277,
                  "nodeType": "ExpressionStatement",
                  "src": "4211:53:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1279,
                        "name": "_photoNFT",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1251,
                        "src": "4291:9:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_PhotoNFT_$133",
                          "typeString": "contract PhotoNFT"
                        }
                      },
                      {
                        "id": 1280,
                        "name": "_photoId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1253,
                        "src": "4302:8:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 1281,
                        "name": "_buyer",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1255,
                        "src": "4312:6:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_PhotoNFT_$133",
                          "typeString": "contract PhotoNFT"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 1278,
                      "name": "_updateSeller",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1338,
                      "src": "4277:13:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_PhotoNFT_$133_$_t_uint256_$_t_address_$returns$__$",
                        "typeString": "function (contract PhotoNFT,uint256,address)"
                      }
                    },
                    "id": 1282,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4277:42:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1283,
                  "nodeType": "ExpressionStatement",
                  "src": "4277:42:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 1289,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967268,
                            "src": "4380:4:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_PhotoNFTTradable_$1362",
                              "typeString": "contract PhotoNFTTradable"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_PhotoNFTTradable_$1362",
                              "typeString": "contract PhotoNFTTradable"
                            }
                          ],
                          "id": 1288,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "4372:7:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 1287,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "4372:7:6",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 1290,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4372:13:6",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1291,
                        "name": "_buyer",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1255,
                        "src": "4387:6:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 1292,
                          "name": "trade",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1265,
                          "src": "4395:5:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Trade_$995_memory_ptr",
                            "typeString": "struct PhotoNFTTradable.Trade memory"
                          }
                        },
                        "id": 1293,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "photoId",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 988,
                        "src": "4395:13:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 1284,
                        "name": "photoNFT",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1260,
                        "src": "4350:8:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_PhotoNFT_$133",
                          "typeString": "contract PhotoNFT"
                        }
                      },
                      "id": 1286,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 21539,
                      "src": "4350:21:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256) external"
                      }
                    },
                    "id": 1294,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4350:59:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1295,
                  "nodeType": "ExpressionStatement",
                  "src": "4350:59:6"
                },
                {
                  "expression": {
                    "id": 1300,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 1296,
                        "name": "trade",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1265,
                        "src": "4420:5:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Trade_$995_memory_ptr",
                          "typeString": "struct PhotoNFTTradable.Trade memory"
                        }
                      },
                      "id": 1298,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "status",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 992,
                      "src": "4420:12:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "43616e63656c6c6564",
                      "id": 1299,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "string",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "4435:11:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_stringliteral_737a39c9fa82f68622f45ae205e399b0f0a7252140d9357a90220c542bb4ef4b",
                        "typeString": "literal_string \"Cancelled\""
                      },
                      "value": "Cancelled"
                    },
                    "src": "4420:26:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "id": 1301,
                  "nodeType": "ExpressionStatement",
                  "src": "4420:26:6"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 1305,
                            "name": "_photoNFT",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1251,
                            "src": "4488:9:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_PhotoNFT_$133",
                              "typeString": "contract PhotoNFT"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_PhotoNFT_$133",
                              "typeString": "contract PhotoNFT"
                            }
                          ],
                          "id": 1304,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "4480:7:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 1303,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "4480:7:6",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 1306,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4480:18:6",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "43616e63656c6c6564",
                        "id": 1307,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4500:11:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_737a39c9fa82f68622f45ae205e399b0f0a7252140d9357a90220c542bb4ef4b",
                          "typeString": "literal_string \"Cancelled\""
                        },
                        "value": "Cancelled"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_737a39c9fa82f68622f45ae205e399b0f0a7252140d9357a90220c542bb4ef4b",
                          "typeString": "literal_string \"Cancelled\""
                        }
                      ],
                      "id": 1302,
                      "name": "TradeStatusChange",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 975,
                      "src": "4462:17:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_bytes32_$returns$__$",
                        "typeString": "function (address,bytes32)"
                      }
                    },
                    "id": 1308,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4462:50:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1309,
                  "nodeType": "EmitStatement",
                  "src": "4457:55:6"
                }
              ]
            },
            "documentation": {
              "id": 1248,
              "nodeType": "StructuredDocumentation",
              "src": "3817:186:6",
              "text": " @dev Executes a trade. Must have approved this contract to transfer the amount of currency specified to the seller. Transfers ownership of the photoId to the filler."
            },
            "functionSelector": "493c2176",
            "id": 1311,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "transferOwnershipOfPhotoNFT",
            "nameLocation": "4018:27:6",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1256,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1251,
                  "mutability": "mutable",
                  "name": "_photoNFT",
                  "nameLocation": "4055:9:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 1311,
                  "src": "4046:18:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_PhotoNFT_$133",
                    "typeString": "contract PhotoNFT"
                  },
                  "typeName": {
                    "id": 1250,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 1249,
                      "name": "PhotoNFT",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 133,
                      "src": "4046:8:6"
                    },
                    "referencedDeclaration": 133,
                    "src": "4046:8:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_PhotoNFT_$133",
                      "typeString": "contract PhotoNFT"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1253,
                  "mutability": "mutable",
                  "name": "_photoId",
                  "nameLocation": "4074:8:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 1311,
                  "src": "4066:16:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1252,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4066:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1255,
                  "mutability": "mutable",
                  "name": "_buyer",
                  "nameLocation": "4092:6:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 1311,
                  "src": "4084:14:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1254,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4084:7:6",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4045:54:6"
            },
            "returnParameters": {
              "id": 1257,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4107:0:6"
            },
            "scope": 1362,
            "src": "4009:511:6",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1337,
              "nodeType": "Block",
              "src": "4617:102:6",
              "statements": [
                {
                  "assignments": [
                    1323
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1323,
                      "mutability": "mutable",
                      "name": "trade",
                      "nameLocation": "4642:5:6",
                      "nodeType": "VariableDeclaration",
                      "scope": 1337,
                      "src": "4628:19:6",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Trade_$995_storage_ptr",
                        "typeString": "struct PhotoNFTTradable.Trade"
                      },
                      "typeName": {
                        "id": 1322,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 1321,
                          "name": "Trade",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 995,
                          "src": "4628:5:6"
                        },
                        "referencedDeclaration": 995,
                        "src": "4628:5:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Trade_$995_storage_ptr",
                          "typeString": "struct PhotoNFTTradable.Trade"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1330,
                  "initialValue": {
                    "baseExpression": {
                      "id": 1324,
                      "name": "trades",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1000,
                      "src": "4650:6:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Trade_$995_storage_$",
                        "typeString": "mapping(address => struct PhotoNFTTradable.Trade storage ref)"
                      }
                    },
                    "id": 1329,
                    "indexExpression": {
                      "arguments": [
                        {
                          "id": 1327,
                          "name": "photoNFT",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1314,
                          "src": "4665:8:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_PhotoNFT_$133",
                            "typeString": "contract PhotoNFT"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_PhotoNFT_$133",
                            "typeString": "contract PhotoNFT"
                          }
                        ],
                        "id": 1326,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "4657:7:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 1325,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "4657:7:6",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 1328,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4657:17:6",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "4650:25:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Trade_$995_storage",
                      "typeString": "struct PhotoNFTTradable.Trade storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4628:47:6"
                },
                {
                  "expression": {
                    "id": 1335,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 1331,
                        "name": "trade",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1323,
                        "src": "4686:5:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Trade_$995_storage_ptr",
                          "typeString": "struct PhotoNFTTradable.Trade storage pointer"
                        }
                      },
                      "id": 1333,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "seller",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 986,
                      "src": "4686:12:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 1334,
                      "name": "_newSeller",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1318,
                      "src": "4701:10:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "4686:25:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 1336,
                  "nodeType": "ExpressionStatement",
                  "src": "4686:25:6"
                }
              ]
            },
            "id": 1338,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_updateSeller",
            "nameLocation": "4537:13:6",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1319,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1314,
                  "mutability": "mutable",
                  "name": "photoNFT",
                  "nameLocation": "4560:8:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 1338,
                  "src": "4551:17:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_PhotoNFT_$133",
                    "typeString": "contract PhotoNFT"
                  },
                  "typeName": {
                    "id": 1313,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 1312,
                      "name": "PhotoNFT",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 133,
                      "src": "4551:8:6"
                    },
                    "referencedDeclaration": 133,
                    "src": "4551:8:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_PhotoNFT_$133",
                      "typeString": "contract PhotoNFT"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1316,
                  "mutability": "mutable",
                  "name": "_photoId",
                  "nameLocation": "4578:8:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 1338,
                  "src": "4570:16:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1315,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4570:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1318,
                  "mutability": "mutable",
                  "name": "_newSeller",
                  "nameLocation": "4596:10:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 1338,
                  "src": "4588:18:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1317,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4588:7:6",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4550:57:6"
            },
            "returnParameters": {
              "id": 1320,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4617:0:6"
            },
            "scope": 1362,
            "src": "4528:191:6",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 1360,
              "nodeType": "Block",
              "src": "4874:169:6",
              "statements": [
                {
                  "assignments": [
                    1350
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1350,
                      "mutability": "mutable",
                      "name": "trade",
                      "nameLocation": "4898:5:6",
                      "nodeType": "VariableDeclaration",
                      "scope": 1360,
                      "src": "4885:18:6",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Trade_$995_memory_ptr",
                        "typeString": "struct PhotoNFTTradable.Trade"
                      },
                      "typeName": {
                        "id": 1349,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 1348,
                          "name": "Trade",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 995,
                          "src": "4885:5:6"
                        },
                        "referencedDeclaration": 995,
                        "src": "4885:5:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Trade_$995_storage_ptr",
                          "typeString": "struct PhotoNFTTradable.Trade"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1357,
                  "initialValue": {
                    "baseExpression": {
                      "id": 1351,
                      "name": "trades",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1000,
                      "src": "4906:6:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Trade_$995_storage_$",
                        "typeString": "mapping(address => struct PhotoNFTTradable.Trade storage ref)"
                      }
                    },
                    "id": 1356,
                    "indexExpression": {
                      "arguments": [
                        {
                          "id": 1354,
                          "name": "photoNFT",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1342,
                          "src": "4921:8:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_PhotoNFT_$133",
                            "typeString": "contract PhotoNFT"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_PhotoNFT_$133",
                            "typeString": "contract PhotoNFT"
                          }
                        ],
                        "id": 1353,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "4913:7:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 1352,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "4913:7:6",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 1355,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4913:17:6",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "4906:25:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Trade_$995_storage",
                      "typeString": "struct PhotoNFTTradable.Trade storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4885:46:6"
                },
                {
                  "expression": {
                    "id": 1358,
                    "name": "trade",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1350,
                    "src": "4949:5:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Trade_$995_memory_ptr",
                      "typeString": "struct PhotoNFTTradable.Trade memory"
                    }
                  },
                  "functionReturnParameters": 1347,
                  "id": 1359,
                  "nodeType": "Return",
                  "src": "4942:12:6"
                }
              ]
            },
            "documentation": {
              "id": 1339,
              "nodeType": "StructuredDocumentation",
              "src": "4729:60:6",
              "text": " @dev - Returns the details for a trade."
            },
            "functionSelector": "ab7a6c3e",
            "id": 1361,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getTrade",
            "nameLocation": "4804:8:6",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1343,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1342,
                  "mutability": "mutable",
                  "name": "photoNFT",
                  "nameLocation": "4822:8:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 1361,
                  "src": "4813:17:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_PhotoNFT_$133",
                    "typeString": "contract PhotoNFT"
                  },
                  "typeName": {
                    "id": 1341,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 1340,
                      "name": "PhotoNFT",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 133,
                      "src": "4813:8:6"
                    },
                    "referencedDeclaration": 133,
                    "src": "4813:8:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_PhotoNFT_$133",
                      "typeString": "contract PhotoNFT"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4812:19:6"
            },
            "returnParameters": {
              "id": 1347,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1346,
                  "mutability": "mutable",
                  "name": "trade_",
                  "nameLocation": "4866:6:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 1361,
                  "src": "4853:19:6",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Trade_$995_memory_ptr",
                    "typeString": "struct PhotoNFTTradable.Trade"
                  },
                  "typeName": {
                    "id": 1345,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 1344,
                      "name": "Trade",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 995,
                      "src": "4853:5:6"
                    },
                    "referencedDeclaration": 995,
                    "src": "4853:5:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Trade_$995_storage_ptr",
                      "typeString": "struct PhotoNFTTradable.Trade"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4852:21:6"
            },
            "scope": 1362,
            "src": "4795:248:6",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 1363,
        "src": "311:4735:6",
        "usedErrors": []
      }
    ],
    "src": "33:5015:6"
  },
  "legacyAST": {
    "absolutePath": "project:/contracts/PhotoNFTTradable.sol",
    "exportedSymbols": {
      "PhotoNFT": [
        133
      ],
      "PhotoNFTData": [
        429
      ],
      "PhotoNFTTradable": [
        1362
      ]
    },
    "id": 1363,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 963,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "33:23:6"
      },
      {
        "id": 964,
        "literals": [
          "experimental",
          "ABIEncoderV2"
        ],
        "nodeType": "PragmaDirective",
        "src": "58:33:6"
      },
      {
        "absolutePath": "project:/contracts/PhotoNFT.sol",
        "file": "./PhotoNFT.sol",
        "id": 966,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1363,
        "sourceUnit": 134,
        "src": "95:42:6",
        "symbolAliases": [
          {
            "foreign": {
              "id": 965,
              "name": "PhotoNFT",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "src": "104:8:6",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/PhotoNFTData.sol",
        "file": "./PhotoNFTData.sol",
        "id": 968,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1363,
        "sourceUnit": 430,
        "src": "139:50:6",
        "symbolAliases": [
          {
            "foreign": {
              "id": 967,
              "name": "PhotoNFTData",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "src": "148:12:6",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "PhotoNFTTradable",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 969,
          "nodeType": "StructuredDocumentation",
          "src": "195:114:6",
          "text": " @title - PhotoNFTTradable contract\n @notice - This contract has role that put on sale of photoNFTs"
        },
        "fullyImplemented": true,
        "id": 1362,
        "linearizedBaseContracts": [
          1362
        ],
        "name": "PhotoNFTTradable",
        "nameLocation": "320:16:6",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "anonymous": false,
            "id": 975,
            "name": "TradeStatusChange",
            "nameLocation": "350:17:6",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 974,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 971,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "ad",
                  "nameLocation": "376:2:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 975,
                  "src": "368:10:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 970,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "368:7:6",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 973,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "status",
                  "nameLocation": "388:6:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 975,
                  "src": "380:14:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 972,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "380:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "367:28:6"
            },
            "src": "344:52:6"
          },
          {
            "anonymous": false,
            "id": 981,
            "name": "TradePremiumStatusChange",
            "nameLocation": "408:24:6",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 980,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 977,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "ad",
                  "nameLocation": "441:2:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 981,
                  "src": "433:10:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 976,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "433:7:6",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 979,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "status",
                  "nameLocation": "450:6:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 981,
                  "src": "445:11:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 978,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "445:4:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "432:25:6"
            },
            "src": "402:56:6"
          },
          {
            "constant": false,
            "functionSelector": "ec039514",
            "id": 984,
            "mutability": "mutable",
            "name": "photoNFTData",
            "nameLocation": "532:12:6",
            "nodeType": "VariableDeclaration",
            "scope": 1362,
            "src": "512:32:6",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_PhotoNFTData_$429",
              "typeString": "contract PhotoNFTData"
            },
            "typeName": {
              "id": 983,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 982,
                "name": "PhotoNFTData",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 429,
                "src": "512:12:6"
              },
              "referencedDeclaration": 429,
              "src": "512:12:6",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_PhotoNFTData_$429",
                "typeString": "contract PhotoNFTData"
              }
            },
            "visibility": "public"
          },
          {
            "canonicalName": "PhotoNFTTradable.Trade",
            "id": 995,
            "members": [
              {
                "constant": false,
                "id": 986,
                "mutability": "mutable",
                "name": "seller",
                "nameLocation": "585:6:6",
                "nodeType": "VariableDeclaration",
                "scope": 995,
                "src": "577:14:6",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 985,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "577:7:6",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 988,
                "mutability": "mutable",
                "name": "photoId",
                "nameLocation": "610:7:6",
                "nodeType": "VariableDeclaration",
                "scope": 995,
                "src": "602:15:6",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 987,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "602:7:6",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 990,
                "mutability": "mutable",
                "name": "photoPrice",
                "nameLocation": "660:10:6",
                "nodeType": "VariableDeclaration",
                "scope": 995,
                "src": "652:18:6",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 989,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "652:7:6",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 992,
                "mutability": "mutable",
                "name": "status",
                "nameLocation": "689:6:6",
                "nodeType": "VariableDeclaration",
                "scope": 995,
                "src": "681:14:6",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                },
                "typeName": {
                  "id": 991,
                  "name": "bytes32",
                  "nodeType": "ElementaryTypeName",
                  "src": "681:7:6",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 994,
                "mutability": "mutable",
                "name": "premiumStatus",
                "nameLocation": "745:13:6",
                "nodeType": "VariableDeclaration",
                "scope": 995,
                "src": "737:21:6",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                },
                "typeName": {
                  "id": 993,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "737:4:6",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "Trade",
            "nameLocation": "560:5:6",
            "nodeType": "StructDefinition",
            "scope": 1362,
            "src": "553:244:6",
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "a9f752e5",
            "id": 1000,
            "mutability": "mutable",
            "name": "trades",
            "nameLocation": "836:6:6",
            "nodeType": "VariableDeclaration",
            "scope": 1362,
            "src": "803:39:6",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Trade_$995_storage_$",
              "typeString": "mapping(address => struct PhotoNFTTradable.Trade)"
            },
            "typeName": {
              "id": 999,
              "keyType": {
                "id": 996,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "811:7:6",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "803:25:6",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Trade_$995_storage_$",
                "typeString": "mapping(address => struct PhotoNFTTradable.Trade)"
              },
              "valueType": {
                "id": 998,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 997,
                  "name": "Trade",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 995,
                  "src": "822:5:6"
                },
                "referencedDeclaration": 995,
                "src": "822:5:6",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Trade_$995_storage_ptr",
                  "typeString": "struct PhotoNFTTradable.Trade"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 1002,
            "mutability": "mutable",
            "name": "tradeCounter",
            "nameLocation": "890:12:6",
            "nodeType": "VariableDeclaration",
            "scope": 1362,
            "src": "882:20:6",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 1001,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "882:7:6",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "internal"
          },
          {
            "body": {
              "id": 1016,
              "nodeType": "Block",
              "src": "958:74:6",
              "statements": [
                {
                  "expression": {
                    "id": 1010,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1008,
                      "name": "photoNFTData",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 984,
                      "src": "969:12:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_PhotoNFTData_$429",
                        "typeString": "contract PhotoNFTData"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 1009,
                      "name": "_photoNFTData",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1005,
                      "src": "984:13:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_PhotoNFTData_$429",
                        "typeString": "contract PhotoNFTData"
                      }
                    },
                    "src": "969:28:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_PhotoNFTData_$429",
                      "typeString": "contract PhotoNFTData"
                    }
                  },
                  "id": 1011,
                  "nodeType": "ExpressionStatement",
                  "src": "969:28:6"
                },
                {
                  "expression": {
                    "id": 1014,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1012,
                      "name": "tradeCounter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1002,
                      "src": "1008:12:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "30",
                      "id": 1013,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1023:1:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "1008:16:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1015,
                  "nodeType": "ExpressionStatement",
                  "src": "1008:16:6"
                }
              ]
            },
            "id": 1017,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1006,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1005,
                  "mutability": "mutable",
                  "name": "_photoNFTData",
                  "nameLocation": "936:13:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 1017,
                  "src": "923:26:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_PhotoNFTData_$429",
                    "typeString": "contract PhotoNFTData"
                  },
                  "typeName": {
                    "id": 1004,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 1003,
                      "name": "PhotoNFTData",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 429,
                      "src": "923:12:6"
                    },
                    "referencedDeclaration": 429,
                    "src": "923:12:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_PhotoNFTData_$429",
                      "typeString": "contract PhotoNFTData"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "922:28:6"
            },
            "returnParameters": {
              "id": 1007,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "958:0:6"
            },
            "scope": 1362,
            "src": "911:121:6",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1068,
              "nodeType": "Block",
              "src": "1442:583:6",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 1031,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "1475:3:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1032,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "1475:10:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 1035,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967268,
                            "src": "1495:4:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_PhotoNFTTradable_$1362",
                              "typeString": "contract PhotoNFTTradable"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_PhotoNFTTradable_$1362",
                              "typeString": "contract PhotoNFTTradable"
                            }
                          ],
                          "id": 1034,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1487:7:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 1033,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1487:7:6",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 1036,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1487:13:6",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1037,
                        "name": "_photoId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1023,
                        "src": "1502:8:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 1028,
                        "name": "photoNFT",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1021,
                        "src": "1453:8:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_PhotoNFT_$133",
                          "typeString": "contract PhotoNFT"
                        }
                      },
                      "id": 1030,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 21539,
                      "src": "1453:21:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256) external"
                      }
                    },
                    "id": 1038,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1453:58:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1039,
                  "nodeType": "ExpressionStatement",
                  "src": "1453:58:6"
                },
                {
                  "expression": {
                    "id": 1042,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1040,
                      "name": "tradeCounter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1002,
                      "src": "1524:12:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "hexValue": "31",
                      "id": 1041,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1540:1:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "1524:17:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1043,
                  "nodeType": "ExpressionStatement",
                  "src": "1524:17:6"
                },
                {
                  "documentation": "[Note]: New. Trade count is started from \"1\". This is to align photoId",
                  "expression": {
                    "id": 1058,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 1044,
                        "name": "trades",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1000,
                        "src": "1690:6:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Trade_$995_storage_$",
                          "typeString": "mapping(address => struct PhotoNFTTradable.Trade storage ref)"
                        }
                      },
                      "id": 1049,
                      "indexExpression": {
                        "arguments": [
                          {
                            "id": 1047,
                            "name": "photoNFT",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1021,
                            "src": "1705:8:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_PhotoNFT_$133",
                              "typeString": "contract PhotoNFT"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_PhotoNFT_$133",
                              "typeString": "contract PhotoNFT"
                            }
                          ],
                          "id": 1046,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1697:7:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 1045,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1697:7:6",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 1048,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1697:17:6",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1690:25:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Trade_$995_storage",
                        "typeString": "struct PhotoNFTTradable.Trade storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "expression": {
                            "id": 1051,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "1747:3:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 1052,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "1747:10:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "id": 1053,
                          "name": "_photoId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1023,
                          "src": "1781:8:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "id": 1054,
                          "name": "_photoPrice",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1025,
                          "src": "1816:11:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "hexValue": "4f70656e",
                          "id": 1055,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1850:6:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_8f5d8ba7f4bf26b6e2e2060e5bd28107042be35460fbd828c9d29a2d8af14445",
                            "typeString": "literal_string \"Open\""
                          },
                          "value": "Open"
                        },
                        {
                          "hexValue": "66616c7365",
                          "id": 1056,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1888:5:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "false"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_stringliteral_8f5d8ba7f4bf26b6e2e2060e5bd28107042be35460fbd828c9d29a2d8af14445",
                            "typeString": "literal_string \"Open\""
                          },
                          {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        ],
                        "id": 1050,
                        "name": "Trade",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 995,
                        "src": "1718:5:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_struct$_Trade_$995_storage_ptr_$",
                          "typeString": "type(struct PhotoNFTTradable.Trade storage pointer)"
                        }
                      },
                      "id": 1057,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "structConstructorCall",
                      "lValueRequested": false,
                      "names": [
                        "seller",
                        "photoId",
                        "photoPrice",
                        "status",
                        "premiumStatus"
                      ],
                      "nodeType": "FunctionCall",
                      "src": "1718:187:6",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Trade_$995_memory_ptr",
                        "typeString": "struct PhotoNFTTradable.Trade memory"
                      }
                    },
                    "src": "1690:215:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Trade_$995_storage",
                      "typeString": "struct PhotoNFTTradable.Trade storage ref"
                    }
                  },
                  "id": 1059,
                  "nodeType": "ExpressionStatement",
                  "src": "1690:215:6"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 1063,
                            "name": "photoNFT",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1021,
                            "src": "1999:8:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_PhotoNFT_$133",
                              "typeString": "contract PhotoNFT"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_PhotoNFT_$133",
                              "typeString": "contract PhotoNFT"
                            }
                          ],
                          "id": 1062,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1991:7:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 1061,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1991:7:6",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 1064,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1991:17:6",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "4f70656e",
                        "id": 1065,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2010:6:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_8f5d8ba7f4bf26b6e2e2060e5bd28107042be35460fbd828c9d29a2d8af14445",
                          "typeString": "literal_string \"Open\""
                        },
                        "value": "Open"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_8f5d8ba7f4bf26b6e2e2060e5bd28107042be35460fbd828c9d29a2d8af14445",
                          "typeString": "literal_string \"Open\""
                        }
                      ],
                      "id": 1060,
                      "name": "TradeStatusChange",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 975,
                      "src": "1973:17:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_bytes32_$returns$__$",
                        "typeString": "function (address,bytes32)"
                      }
                    },
                    "id": 1066,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1973:44:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1067,
                  "nodeType": "EmitStatement",
                  "src": "1968:49:6"
                }
              ]
            },
            "documentation": {
              "id": 1018,
              "nodeType": "StructuredDocumentation",
              "src": "1040:291:6",
              "text": " @notice - This method is only executed when a seller create a new PhotoNFT\n @dev Opens a new trade. Puts _photoId in escrow.\n @param _photoId The id for the photoId to trade.\n @param _photoPrice The amount of currency for which to trade the photoId."
            },
            "functionSelector": "49b1d3e7",
            "id": 1069,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "openTradeWhenCreateNewPhotoNFT",
            "nameLocation": "1346:30:6",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1026,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1021,
                  "mutability": "mutable",
                  "name": "photoNFT",
                  "nameLocation": "1386:8:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 1069,
                  "src": "1377:17:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_PhotoNFT_$133",
                    "typeString": "contract PhotoNFT"
                  },
                  "typeName": {
                    "id": 1020,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 1019,
                      "name": "PhotoNFT",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 133,
                      "src": "1377:8:6"
                    },
                    "referencedDeclaration": 133,
                    "src": "1377:8:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_PhotoNFT_$133",
                      "typeString": "contract PhotoNFT"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1023,
                  "mutability": "mutable",
                  "name": "_photoId",
                  "nameLocation": "1404:8:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 1069,
                  "src": "1396:16:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1022,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1396:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1025,
                  "mutability": "mutable",
                  "name": "_photoPrice",
                  "nameLocation": "1422:11:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 1069,
                  "src": "1414:19:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1024,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1414:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1376:58:6"
            },
            "returnParameters": {
              "id": 1027,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1442:0:6"
            },
            "scope": 1362,
            "src": "1337:688:6",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1131,
              "nodeType": "Block",
              "src": "2156:480:6",
              "statements": [
                {
                  "assignments": [
                    1080
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1080,
                      "mutability": "mutable",
                      "name": "trade",
                      "nameLocation": "2191:5:6",
                      "nodeType": "VariableDeclaration",
                      "scope": 1131,
                      "src": "2177:19:6",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Trade_$995_storage_ptr",
                        "typeString": "struct PhotoNFTTradable.Trade"
                      },
                      "typeName": {
                        "id": 1079,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 1078,
                          "name": "Trade",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 995,
                          "src": "2177:5:6"
                        },
                        "referencedDeclaration": 995,
                        "src": "2177:5:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Trade_$995_storage_ptr",
                          "typeString": "struct PhotoNFTTradable.Trade"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1087,
                  "initialValue": {
                    "baseExpression": {
                      "id": 1081,
                      "name": "trades",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1000,
                      "src": "2199:6:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Trade_$995_storage_$",
                        "typeString": "mapping(address => struct PhotoNFTTradable.Trade storage ref)"
                      }
                    },
                    "id": 1086,
                    "indexExpression": {
                      "arguments": [
                        {
                          "id": 1084,
                          "name": "photoNFT",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1073,
                          "src": "2214:8:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_PhotoNFT_$133",
                            "typeString": "contract PhotoNFT"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_PhotoNFT_$133",
                            "typeString": "contract PhotoNFT"
                          }
                        ],
                        "id": 1083,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "2206:7:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 1082,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2206:7:6",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 1085,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2206:17:6",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "2199:25:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Trade_$995_storage",
                      "typeString": "struct PhotoNFTTradable.Trade storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2177:47:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 1093,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 1089,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "2257:3:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 1090,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "2257:10:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "id": 1091,
                            "name": "trade",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1080,
                            "src": "2271:5:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Trade_$995_storage_ptr",
                              "typeString": "struct PhotoNFTTradable.Trade storage pointer"
                            }
                          },
                          "id": 1092,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "seller",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 986,
                          "src": "2271:12:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "2257:26:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "54726164652063616e206265206f70656e206f6e6c792062792073656c6c65722e",
                        "id": 1094,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2298:35:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_268e48c2205378f3b7ae3c6b6b6d9ec43fe563160d624a82a00d8fddeef26408",
                          "typeString": "literal_string \"Trade can be open only by seller.\""
                        },
                        "value": "Trade can be open only by seller."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_268e48c2205378f3b7ae3c6b6b6d9ec43fe563160d624a82a00d8fddeef26408",
                          "typeString": "literal_string \"Trade can be open only by seller.\""
                        }
                      ],
                      "id": 1088,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "2235:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1095,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2235:109:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1096,
                  "nodeType": "ExpressionStatement",
                  "src": "2235:109:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1100,
                        "name": "photoNFT",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1073,
                        "src": "2383:8:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_PhotoNFT_$133",
                          "typeString": "contract PhotoNFT"
                        }
                      },
                      {
                        "hexValue": "4f70656e",
                        "id": 1101,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2393:6:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_8f5d8ba7f4bf26b6e2e2060e5bd28107042be35460fbd828c9d29a2d8af14445",
                          "typeString": "literal_string \"Open\""
                        },
                        "value": "Open"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_PhotoNFT_$133",
                          "typeString": "contract PhotoNFT"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_8f5d8ba7f4bf26b6e2e2060e5bd28107042be35460fbd828c9d29a2d8af14445",
                          "typeString": "literal_string \"Open\""
                        }
                      ],
                      "expression": {
                        "id": 1097,
                        "name": "photoNFTData",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 984,
                        "src": "2357:12:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_PhotoNFTData_$429",
                          "typeString": "contract PhotoNFTData"
                        }
                      },
                      "id": 1099,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "updateStatus",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 270,
                      "src": "2357:25:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_contract$_PhotoNFT_$133_$_t_string_memory_ptr_$returns$_t_bool_$",
                        "typeString": "function (contract PhotoNFT,string memory) external returns (bool)"
                      }
                    },
                    "id": 1102,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2357:43:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1103,
                  "nodeType": "ExpressionStatement",
                  "src": "2357:43:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 1107,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "2433:3:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1108,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "2433:10:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 1111,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967268,
                            "src": "2453:4:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_PhotoNFTTradable_$1362",
                              "typeString": "contract PhotoNFTTradable"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_PhotoNFTTradable_$1362",
                              "typeString": "contract PhotoNFTTradable"
                            }
                          ],
                          "id": 1110,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2445:7:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 1109,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "2445:7:6",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 1112,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2445:13:6",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 1113,
                          "name": "trade",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1080,
                          "src": "2460:5:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Trade_$995_storage_ptr",
                            "typeString": "struct PhotoNFTTradable.Trade storage pointer"
                          }
                        },
                        "id": 1114,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "photoId",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 988,
                        "src": "2460:13:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 1104,
                        "name": "photoNFT",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1073,
                        "src": "2411:8:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_PhotoNFT_$133",
                          "typeString": "contract PhotoNFT"
                        }
                      },
                      "id": 1106,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 21539,
                      "src": "2411:21:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256) external"
                      }
                    },
                    "id": 1115,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2411:63:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1116,
                  "nodeType": "ExpressionStatement",
                  "src": "2411:63:6"
                },
                {
                  "expression": {
                    "id": 1121,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 1117,
                        "name": "trade",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1080,
                        "src": "2547:5:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Trade_$995_storage_ptr",
                          "typeString": "struct PhotoNFTTradable.Trade storage pointer"
                        }
                      },
                      "id": 1119,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "status",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 992,
                      "src": "2547:12:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "4f70656e",
                      "id": 1120,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "string",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2562:6:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_stringliteral_8f5d8ba7f4bf26b6e2e2060e5bd28107042be35460fbd828c9d29a2d8af14445",
                        "typeString": "literal_string \"Open\""
                      },
                      "value": "Open"
                    },
                    "src": "2547:21:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "id": 1122,
                  "nodeType": "ExpressionStatement",
                  "src": "2547:21:6"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 1126,
                            "name": "photoNFT",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1073,
                            "src": "2610:8:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_PhotoNFT_$133",
                              "typeString": "contract PhotoNFT"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_PhotoNFT_$133",
                              "typeString": "contract PhotoNFT"
                            }
                          ],
                          "id": 1125,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2602:7:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 1124,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "2602:7:6",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 1127,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2602:17:6",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "4f70656e",
                        "id": 1128,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2621:6:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_8f5d8ba7f4bf26b6e2e2060e5bd28107042be35460fbd828c9d29a2d8af14445",
                          "typeString": "literal_string \"Open\""
                        },
                        "value": "Open"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_8f5d8ba7f4bf26b6e2e2060e5bd28107042be35460fbd828c9d29a2d8af14445",
                          "typeString": "literal_string \"Open\""
                        }
                      ],
                      "id": 1123,
                      "name": "TradeStatusChange",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 975,
                      "src": "2584:17:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_bytes32_$returns$__$",
                        "typeString": "function (address,bytes32)"
                      }
                    },
                    "id": 1129,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2584:44:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1130,
                  "nodeType": "EmitStatement",
                  "src": "2579:49:6"
                }
              ]
            },
            "documentation": {
              "id": 1070,
              "nodeType": "StructuredDocumentation",
              "src": "2033:54:6",
              "text": " @dev Opens a trade by the seller."
            },
            "functionSelector": "80a279c4",
            "id": 1132,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "openTrade",
            "nameLocation": "2102:9:6",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1076,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1073,
                  "mutability": "mutable",
                  "name": "photoNFT",
                  "nameLocation": "2121:8:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 1132,
                  "src": "2112:17:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_PhotoNFT_$133",
                    "typeString": "contract PhotoNFT"
                  },
                  "typeName": {
                    "id": 1072,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 1071,
                      "name": "PhotoNFT",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 133,
                      "src": "2112:8:6"
                    },
                    "referencedDeclaration": 133,
                    "src": "2112:8:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_PhotoNFT_$133",
                      "typeString": "contract PhotoNFT"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1075,
                  "mutability": "mutable",
                  "name": "_photoId",
                  "nameLocation": "2139:8:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 1132,
                  "src": "2131:16:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1074,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2131:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2111:37:6"
            },
            "returnParameters": {
              "id": 1077,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2156:0:6"
            },
            "scope": 1362,
            "src": "2093:543:6",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1194,
              "nodeType": "Block",
              "src": "2771:499:6",
              "statements": [
                {
                  "assignments": [
                    1143
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1143,
                      "mutability": "mutable",
                      "name": "trade",
                      "nameLocation": "2796:5:6",
                      "nodeType": "VariableDeclaration",
                      "scope": 1194,
                      "src": "2782:19:6",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Trade_$995_storage_ptr",
                        "typeString": "struct PhotoNFTTradable.Trade"
                      },
                      "typeName": {
                        "id": 1142,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 1141,
                          "name": "Trade",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 995,
                          "src": "2782:5:6"
                        },
                        "referencedDeclaration": 995,
                        "src": "2782:5:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Trade_$995_storage_ptr",
                          "typeString": "struct PhotoNFTTradable.Trade"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1150,
                  "initialValue": {
                    "baseExpression": {
                      "id": 1144,
                      "name": "trades",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1000,
                      "src": "2804:6:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Trade_$995_storage_$",
                        "typeString": "mapping(address => struct PhotoNFTTradable.Trade storage ref)"
                      }
                    },
                    "id": 1149,
                    "indexExpression": {
                      "arguments": [
                        {
                          "id": 1147,
                          "name": "photoNFT",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1136,
                          "src": "2819:8:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_PhotoNFT_$133",
                            "typeString": "contract PhotoNFT"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_PhotoNFT_$133",
                            "typeString": "contract PhotoNFT"
                          }
                        ],
                        "id": 1146,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "2811:7:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 1145,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2811:7:6",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 1148,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2811:17:6",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "2804:25:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Trade_$995_storage",
                      "typeString": "struct PhotoNFTTradable.Trade storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2782:47:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 1156,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 1152,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "2864:3:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 1153,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "2864:10:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "id": 1154,
                            "name": "trade",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1143,
                            "src": "2878:5:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Trade_$995_storage_ptr",
                              "typeString": "struct PhotoNFTTradable.Trade storage pointer"
                            }
                          },
                          "id": 1155,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "seller",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 986,
                          "src": "2878:12:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "2864:26:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "54726164652063616e2062652063616e63656c6c6564206f6e6c792062792073656c6c65722e",
                        "id": 1157,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2905:40:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_0744e3e8de6583d086339a67b8ab70fd095f3c7b732b6676ce3729ae175dc11f",
                          "typeString": "literal_string \"Trade can be cancelled only by seller.\""
                        },
                        "value": "Trade can be cancelled only by seller."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_0744e3e8de6583d086339a67b8ab70fd095f3c7b732b6676ce3729ae175dc11f",
                          "typeString": "literal_string \"Trade can be cancelled only by seller.\""
                        }
                      ],
                      "id": 1151,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "2842:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1158,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2842:114:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1159,
                  "nodeType": "ExpressionStatement",
                  "src": "2842:114:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1163,
                        "name": "photoNFT",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1136,
                        "src": "3062:8:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_PhotoNFT_$133",
                          "typeString": "contract PhotoNFT"
                        }
                      },
                      {
                        "hexValue": "43616e63656c6c6564",
                        "id": 1164,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3072:11:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_737a39c9fa82f68622f45ae205e399b0f0a7252140d9357a90220c542bb4ef4b",
                          "typeString": "literal_string \"Cancelled\""
                        },
                        "value": "Cancelled"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_PhotoNFT_$133",
                          "typeString": "contract PhotoNFT"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_737a39c9fa82f68622f45ae205e399b0f0a7252140d9357a90220c542bb4ef4b",
                          "typeString": "literal_string \"Cancelled\""
                        }
                      ],
                      "expression": {
                        "id": 1160,
                        "name": "photoNFTData",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 984,
                        "src": "3036:12:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_PhotoNFTData_$429",
                          "typeString": "contract PhotoNFTData"
                        }
                      },
                      "id": 1162,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "updateStatus",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 270,
                      "src": "3036:25:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_contract$_PhotoNFT_$133_$_t_string_memory_ptr_$returns$_t_bool_$",
                        "typeString": "function (contract PhotoNFT,string memory) external returns (bool)"
                      }
                    },
                    "id": 1165,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3036:48:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1166,
                  "nodeType": "ExpressionStatement",
                  "src": "3036:48:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 1172,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967268,
                            "src": "3125:4:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_PhotoNFTTradable_$1362",
                              "typeString": "contract PhotoNFTTradable"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_PhotoNFTTradable_$1362",
                              "typeString": "contract PhotoNFTTradable"
                            }
                          ],
                          "id": 1171,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3117:7:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 1170,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "3117:7:6",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 1173,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3117:13:6",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 1174,
                          "name": "trade",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1143,
                          "src": "3132:5:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Trade_$995_storage_ptr",
                            "typeString": "struct PhotoNFTTradable.Trade storage pointer"
                          }
                        },
                        "id": 1175,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "seller",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 986,
                        "src": "3132:12:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 1176,
                          "name": "trade",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1143,
                          "src": "3146:5:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Trade_$995_storage_ptr",
                            "typeString": "struct PhotoNFTTradable.Trade storage pointer"
                          }
                        },
                        "id": 1177,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "photoId",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 988,
                        "src": "3146:13:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 1167,
                        "name": "photoNFT",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1136,
                        "src": "3095:8:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_PhotoNFT_$133",
                          "typeString": "contract PhotoNFT"
                        }
                      },
                      "id": 1169,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 21539,
                      "src": "3095:21:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256) external"
                      }
                    },
                    "id": 1178,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3095:65:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1179,
                  "nodeType": "ExpressionStatement",
                  "src": "3095:65:6"
                },
                {
                  "expression": {
                    "id": 1184,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 1180,
                        "name": "trade",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1143,
                        "src": "3171:5:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Trade_$995_storage_ptr",
                          "typeString": "struct PhotoNFTTradable.Trade storage pointer"
                        }
                      },
                      "id": 1182,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "status",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 992,
                      "src": "3171:12:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "43616e63656c6c6564",
                      "id": 1183,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "string",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3186:11:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_stringliteral_737a39c9fa82f68622f45ae205e399b0f0a7252140d9357a90220c542bb4ef4b",
                        "typeString": "literal_string \"Cancelled\""
                      },
                      "value": "Cancelled"
                    },
                    "src": "3171:26:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "id": 1185,
                  "nodeType": "ExpressionStatement",
                  "src": "3171:26:6"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 1189,
                            "name": "photoNFT",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1136,
                            "src": "3239:8:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_PhotoNFT_$133",
                              "typeString": "contract PhotoNFT"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_PhotoNFT_$133",
                              "typeString": "contract PhotoNFT"
                            }
                          ],
                          "id": 1188,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3231:7:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 1187,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "3231:7:6",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 1190,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3231:17:6",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "43616e63656c6c6564",
                        "id": 1191,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3250:11:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_737a39c9fa82f68622f45ae205e399b0f0a7252140d9357a90220c542bb4ef4b",
                          "typeString": "literal_string \"Cancelled\""
                        },
                        "value": "Cancelled"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_737a39c9fa82f68622f45ae205e399b0f0a7252140d9357a90220c542bb4ef4b",
                          "typeString": "literal_string \"Cancelled\""
                        }
                      ],
                      "id": 1186,
                      "name": "TradeStatusChange",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 975,
                      "src": "3213:17:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_bytes32_$returns$__$",
                        "typeString": "function (address,bytes32)"
                      }
                    },
                    "id": 1192,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3213:49:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1193,
                  "nodeType": "EmitStatement",
                  "src": "3208:54:6"
                }
              ]
            },
            "documentation": {
              "id": 1133,
              "nodeType": "StructuredDocumentation",
              "src": "2644:56:6",
              "text": " @dev Cancels a trade by the seller."
            },
            "functionSelector": "759c4bf3",
            "id": 1195,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "cancelTrade",
            "nameLocation": "2715:11:6",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1139,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1136,
                  "mutability": "mutable",
                  "name": "photoNFT",
                  "nameLocation": "2736:8:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 1195,
                  "src": "2727:17:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_PhotoNFT_$133",
                    "typeString": "contract PhotoNFT"
                  },
                  "typeName": {
                    "id": 1135,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 1134,
                      "name": "PhotoNFT",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 133,
                      "src": "2727:8:6"
                    },
                    "referencedDeclaration": 133,
                    "src": "2727:8:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_PhotoNFT_$133",
                      "typeString": "contract PhotoNFT"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1138,
                  "mutability": "mutable",
                  "name": "_photoId",
                  "nameLocation": "2754:8:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 1195,
                  "src": "2746:16:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1137,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2746:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2726:37:6"
            },
            "returnParameters": {
              "id": 1140,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2771:0:6"
            },
            "scope": 1362,
            "src": "2706:564:6",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1246,
              "nodeType": "Block",
              "src": "3427:378:6",
              "statements": [
                {
                  "assignments": [
                    1208
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1208,
                      "mutability": "mutable",
                      "name": "trade",
                      "nameLocation": "3452:5:6",
                      "nodeType": "VariableDeclaration",
                      "scope": 1246,
                      "src": "3438:19:6",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Trade_$995_storage_ptr",
                        "typeString": "struct PhotoNFTTradable.Trade"
                      },
                      "typeName": {
                        "id": 1207,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 1206,
                          "name": "Trade",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 995,
                          "src": "3438:5:6"
                        },
                        "referencedDeclaration": 995,
                        "src": "3438:5:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Trade_$995_storage_ptr",
                          "typeString": "struct PhotoNFTTradable.Trade"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1215,
                  "initialValue": {
                    "baseExpression": {
                      "id": 1209,
                      "name": "trades",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1000,
                      "src": "3460:6:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Trade_$995_storage_$",
                        "typeString": "mapping(address => struct PhotoNFTTradable.Trade storage ref)"
                      }
                    },
                    "id": 1214,
                    "indexExpression": {
                      "arguments": [
                        {
                          "id": 1212,
                          "name": "photoNFT",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1199,
                          "src": "3475:8:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_PhotoNFT_$133",
                            "typeString": "contract PhotoNFT"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_PhotoNFT_$133",
                            "typeString": "contract PhotoNFT"
                          }
                        ],
                        "id": 1211,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "3467:7:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 1210,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3467:7:6",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 1213,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3467:17:6",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "3460:25:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Trade_$995_storage",
                      "typeString": "struct PhotoNFTTradable.Trade storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3438:47:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 1221,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 1217,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "3518:3:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 1218,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "3518:10:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "id": 1219,
                            "name": "trade",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1208,
                            "src": "3532:5:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Trade_$995_storage_ptr",
                              "typeString": "struct PhotoNFTTradable.Trade storage pointer"
                            }
                          },
                          "id": 1220,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "seller",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 986,
                          "src": "3532:12:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "3518:26:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "54726164652063616e206265206f70656e206f6e6c792062792073656c6c65722e",
                        "id": 1222,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3559:35:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_268e48c2205378f3b7ae3c6b6b6d9ec43fe563160d624a82a00d8fddeef26408",
                          "typeString": "literal_string \"Trade can be open only by seller.\""
                        },
                        "value": "Trade can be open only by seller."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_268e48c2205378f3b7ae3c6b6b6d9ec43fe563160d624a82a00d8fddeef26408",
                          "typeString": "literal_string \"Trade can be open only by seller.\""
                        }
                      ],
                      "id": 1216,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "3496:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1223,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3496:109:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1224,
                  "nodeType": "ExpressionStatement",
                  "src": "3496:109:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1228,
                        "name": "photoNFT",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1199,
                        "src": "3649:8:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_PhotoNFT_$133",
                          "typeString": "contract PhotoNFT"
                        }
                      },
                      {
                        "id": 1229,
                        "name": "_newState",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1203,
                        "src": "3659:9:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_PhotoNFT_$133",
                          "typeString": "contract PhotoNFT"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "expression": {
                        "id": 1225,
                        "name": "photoNFTData",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 984,
                        "src": "3616:12:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_PhotoNFTData_$429",
                          "typeString": "contract PhotoNFTData"
                        }
                      },
                      "id": 1227,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "updatePremiumStatus",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 301,
                      "src": "3616:32:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_contract$_PhotoNFT_$133_$_t_bool_$returns$_t_bool_$",
                        "typeString": "function (contract PhotoNFT,bool) external returns (bool)"
                      }
                    },
                    "id": 1230,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3616:53:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1231,
                  "nodeType": "ExpressionStatement",
                  "src": "3616:53:6"
                },
                {
                  "expression": {
                    "id": 1236,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 1232,
                        "name": "trade",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1208,
                        "src": "3696:5:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Trade_$995_storage_ptr",
                          "typeString": "struct PhotoNFTTradable.Trade storage pointer"
                        }
                      },
                      "id": 1234,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "premiumStatus",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 994,
                      "src": "3696:19:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 1235,
                      "name": "_newState",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1203,
                      "src": "3718:9:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "3696:31:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1237,
                  "nodeType": "ExpressionStatement",
                  "src": "3696:31:6"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 1241,
                            "name": "photoNFT",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1199,
                            "src": "3776:8:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_PhotoNFT_$133",
                              "typeString": "contract PhotoNFT"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_PhotoNFT_$133",
                              "typeString": "contract PhotoNFT"
                            }
                          ],
                          "id": 1240,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3768:7:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 1239,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "3768:7:6",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 1242,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3768:17:6",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1243,
                        "name": "_newState",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1203,
                        "src": "3787:9:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 1238,
                      "name": "TradePremiumStatusChange",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 981,
                      "src": "3743:24:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_bool_$returns$__$",
                        "typeString": "function (address,bool)"
                      }
                    },
                    "id": 1244,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3743:54:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1245,
                  "nodeType": "EmitStatement",
                  "src": "3738:59:6"
                }
              ]
            },
            "documentation": {
              "id": 1196,
              "nodeType": "StructuredDocumentation",
              "src": "3278:54:6",
              "text": " @dev Opens a trade by the seller."
            },
            "functionSelector": "8d6b52f3",
            "id": 1247,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "updatePremiumStatus",
            "nameLocation": "3347:19:6",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1204,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1199,
                  "mutability": "mutable",
                  "name": "photoNFT",
                  "nameLocation": "3376:8:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 1247,
                  "src": "3367:17:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_PhotoNFT_$133",
                    "typeString": "contract PhotoNFT"
                  },
                  "typeName": {
                    "id": 1198,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 1197,
                      "name": "PhotoNFT",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 133,
                      "src": "3367:8:6"
                    },
                    "referencedDeclaration": 133,
                    "src": "3367:8:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_PhotoNFT_$133",
                      "typeString": "contract PhotoNFT"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1201,
                  "mutability": "mutable",
                  "name": "_photoId",
                  "nameLocation": "3394:8:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 1247,
                  "src": "3386:16:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1200,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3386:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1203,
                  "mutability": "mutable",
                  "name": "_newState",
                  "nameLocation": "3409:9:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 1247,
                  "src": "3404:14:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 1202,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "3404:4:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3366:53:6"
            },
            "returnParameters": {
              "id": 1205,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3427:0:6"
            },
            "scope": 1362,
            "src": "3338:467:6",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1310,
              "nodeType": "Block",
              "src": "4107:413:6",
              "statements": [
                {
                  "assignments": [
                    1260
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1260,
                      "mutability": "mutable",
                      "name": "photoNFT",
                      "nameLocation": "4127:8:6",
                      "nodeType": "VariableDeclaration",
                      "scope": 1310,
                      "src": "4118:17:6",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_PhotoNFT_$133",
                        "typeString": "contract PhotoNFT"
                      },
                      "typeName": {
                        "id": 1259,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 1258,
                          "name": "PhotoNFT",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 133,
                          "src": "4118:8:6"
                        },
                        "referencedDeclaration": 133,
                        "src": "4118:8:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_PhotoNFT_$133",
                          "typeString": "contract PhotoNFT"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1262,
                  "initialValue": {
                    "id": 1261,
                    "name": "_photoNFT",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1251,
                    "src": "4138:9:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_PhotoNFT_$133",
                      "typeString": "contract PhotoNFT"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4118:29:6"
                },
                {
                  "assignments": [
                    1265
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1265,
                      "mutability": "mutable",
                      "name": "trade",
                      "nameLocation": "4173:5:6",
                      "nodeType": "VariableDeclaration",
                      "scope": 1310,
                      "src": "4160:18:6",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Trade_$995_memory_ptr",
                        "typeString": "struct PhotoNFTTradable.Trade"
                      },
                      "typeName": {
                        "id": 1264,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 1263,
                          "name": "Trade",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 995,
                          "src": "4160:5:6"
                        },
                        "referencedDeclaration": 995,
                        "src": "4160:5:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Trade_$995_storage_ptr",
                          "typeString": "struct PhotoNFTTradable.Trade"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1269,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 1267,
                        "name": "_photoNFT",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1251,
                        "src": "4190:9:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_PhotoNFT_$133",
                          "typeString": "contract PhotoNFT"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_PhotoNFT_$133",
                          "typeString": "contract PhotoNFT"
                        }
                      ],
                      "id": 1266,
                      "name": "getTrade",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1361,
                      "src": "4181:8:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_contract$_PhotoNFT_$133_$returns$_t_struct$_Trade_$995_memory_ptr_$",
                        "typeString": "function (contract PhotoNFT) view returns (struct PhotoNFTTradable.Trade memory)"
                      }
                    },
                    "id": 1268,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4181:19:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Trade_$995_memory_ptr",
                      "typeString": "struct PhotoNFTTradable.Trade memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4160:40:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "id": 1274,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 1271,
                            "name": "trade",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1265,
                            "src": "4219:5:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Trade_$995_memory_ptr",
                              "typeString": "struct PhotoNFTTradable.Trade memory"
                            }
                          },
                          "id": 1272,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "status",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 992,
                          "src": "4219:12:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "4f70656e",
                          "id": 1273,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4235:6:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_8f5d8ba7f4bf26b6e2e2060e5bd28107042be35460fbd828c9d29a2d8af14445",
                            "typeString": "literal_string \"Open\""
                          },
                          "value": "Open"
                        },
                        "src": "4219:22:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5472616465206973206e6f74204f70656e2e",
                        "id": 1275,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4243:20:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_2911decf7be1dd9e4e03f78d29e68432f60f623c391d87eb01441f5ab4f7e1cc",
                          "typeString": "literal_string \"Trade is not Open.\""
                        },
                        "value": "Trade is not Open."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_2911decf7be1dd9e4e03f78d29e68432f60f623c391d87eb01441f5ab4f7e1cc",
                          "typeString": "literal_string \"Trade is not Open.\""
                        }
                      ],
                      "id": 1270,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "4211:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1276,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4211:53:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1277,
                  "nodeType": "ExpressionStatement",
                  "src": "4211:53:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1279,
                        "name": "_photoNFT",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1251,
                        "src": "4291:9:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_PhotoNFT_$133",
                          "typeString": "contract PhotoNFT"
                        }
                      },
                      {
                        "id": 1280,
                        "name": "_photoId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1253,
                        "src": "4302:8:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 1281,
                        "name": "_buyer",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1255,
                        "src": "4312:6:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_PhotoNFT_$133",
                          "typeString": "contract PhotoNFT"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 1278,
                      "name": "_updateSeller",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1338,
                      "src": "4277:13:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_PhotoNFT_$133_$_t_uint256_$_t_address_$returns$__$",
                        "typeString": "function (contract PhotoNFT,uint256,address)"
                      }
                    },
                    "id": 1282,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4277:42:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1283,
                  "nodeType": "ExpressionStatement",
                  "src": "4277:42:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 1289,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967268,
                            "src": "4380:4:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_PhotoNFTTradable_$1362",
                              "typeString": "contract PhotoNFTTradable"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_PhotoNFTTradable_$1362",
                              "typeString": "contract PhotoNFTTradable"
                            }
                          ],
                          "id": 1288,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "4372:7:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 1287,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "4372:7:6",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 1290,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4372:13:6",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1291,
                        "name": "_buyer",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1255,
                        "src": "4387:6:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 1292,
                          "name": "trade",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1265,
                          "src": "4395:5:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Trade_$995_memory_ptr",
                            "typeString": "struct PhotoNFTTradable.Trade memory"
                          }
                        },
                        "id": 1293,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "photoId",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 988,
                        "src": "4395:13:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 1284,
                        "name": "photoNFT",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1260,
                        "src": "4350:8:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_PhotoNFT_$133",
                          "typeString": "contract PhotoNFT"
                        }
                      },
                      "id": 1286,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 21539,
                      "src": "4350:21:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256) external"
                      }
                    },
                    "id": 1294,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4350:59:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1295,
                  "nodeType": "ExpressionStatement",
                  "src": "4350:59:6"
                },
                {
                  "expression": {
                    "id": 1300,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 1296,
                        "name": "trade",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1265,
                        "src": "4420:5:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Trade_$995_memory_ptr",
                          "typeString": "struct PhotoNFTTradable.Trade memory"
                        }
                      },
                      "id": 1298,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "status",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 992,
                      "src": "4420:12:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "43616e63656c6c6564",
                      "id": 1299,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "string",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "4435:11:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_stringliteral_737a39c9fa82f68622f45ae205e399b0f0a7252140d9357a90220c542bb4ef4b",
                        "typeString": "literal_string \"Cancelled\""
                      },
                      "value": "Cancelled"
                    },
                    "src": "4420:26:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "id": 1301,
                  "nodeType": "ExpressionStatement",
                  "src": "4420:26:6"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 1305,
                            "name": "_photoNFT",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1251,
                            "src": "4488:9:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_PhotoNFT_$133",
                              "typeString": "contract PhotoNFT"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_PhotoNFT_$133",
                              "typeString": "contract PhotoNFT"
                            }
                          ],
                          "id": 1304,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "4480:7:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 1303,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "4480:7:6",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 1306,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4480:18:6",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "43616e63656c6c6564",
                        "id": 1307,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4500:11:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_737a39c9fa82f68622f45ae205e399b0f0a7252140d9357a90220c542bb4ef4b",
                          "typeString": "literal_string \"Cancelled\""
                        },
                        "value": "Cancelled"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_737a39c9fa82f68622f45ae205e399b0f0a7252140d9357a90220c542bb4ef4b",
                          "typeString": "literal_string \"Cancelled\""
                        }
                      ],
                      "id": 1302,
                      "name": "TradeStatusChange",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 975,
                      "src": "4462:17:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_bytes32_$returns$__$",
                        "typeString": "function (address,bytes32)"
                      }
                    },
                    "id": 1308,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4462:50:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1309,
                  "nodeType": "EmitStatement",
                  "src": "4457:55:6"
                }
              ]
            },
            "documentation": {
              "id": 1248,
              "nodeType": "StructuredDocumentation",
              "src": "3817:186:6",
              "text": " @dev Executes a trade. Must have approved this contract to transfer the amount of currency specified to the seller. Transfers ownership of the photoId to the filler."
            },
            "functionSelector": "493c2176",
            "id": 1311,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "transferOwnershipOfPhotoNFT",
            "nameLocation": "4018:27:6",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1256,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1251,
                  "mutability": "mutable",
                  "name": "_photoNFT",
                  "nameLocation": "4055:9:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 1311,
                  "src": "4046:18:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_PhotoNFT_$133",
                    "typeString": "contract PhotoNFT"
                  },
                  "typeName": {
                    "id": 1250,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 1249,
                      "name": "PhotoNFT",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 133,
                      "src": "4046:8:6"
                    },
                    "referencedDeclaration": 133,
                    "src": "4046:8:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_PhotoNFT_$133",
                      "typeString": "contract PhotoNFT"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1253,
                  "mutability": "mutable",
                  "name": "_photoId",
                  "nameLocation": "4074:8:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 1311,
                  "src": "4066:16:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1252,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4066:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1255,
                  "mutability": "mutable",
                  "name": "_buyer",
                  "nameLocation": "4092:6:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 1311,
                  "src": "4084:14:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1254,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4084:7:6",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4045:54:6"
            },
            "returnParameters": {
              "id": 1257,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4107:0:6"
            },
            "scope": 1362,
            "src": "4009:511:6",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1337,
              "nodeType": "Block",
              "src": "4617:102:6",
              "statements": [
                {
                  "assignments": [
                    1323
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1323,
                      "mutability": "mutable",
                      "name": "trade",
                      "nameLocation": "4642:5:6",
                      "nodeType": "VariableDeclaration",
                      "scope": 1337,
                      "src": "4628:19:6",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Trade_$995_storage_ptr",
                        "typeString": "struct PhotoNFTTradable.Trade"
                      },
                      "typeName": {
                        "id": 1322,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 1321,
                          "name": "Trade",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 995,
                          "src": "4628:5:6"
                        },
                        "referencedDeclaration": 995,
                        "src": "4628:5:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Trade_$995_storage_ptr",
                          "typeString": "struct PhotoNFTTradable.Trade"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1330,
                  "initialValue": {
                    "baseExpression": {
                      "id": 1324,
                      "name": "trades",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1000,
                      "src": "4650:6:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Trade_$995_storage_$",
                        "typeString": "mapping(address => struct PhotoNFTTradable.Trade storage ref)"
                      }
                    },
                    "id": 1329,
                    "indexExpression": {
                      "arguments": [
                        {
                          "id": 1327,
                          "name": "photoNFT",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1314,
                          "src": "4665:8:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_PhotoNFT_$133",
                            "typeString": "contract PhotoNFT"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_PhotoNFT_$133",
                            "typeString": "contract PhotoNFT"
                          }
                        ],
                        "id": 1326,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "4657:7:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 1325,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "4657:7:6",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 1328,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4657:17:6",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "4650:25:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Trade_$995_storage",
                      "typeString": "struct PhotoNFTTradable.Trade storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4628:47:6"
                },
                {
                  "expression": {
                    "id": 1335,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 1331,
                        "name": "trade",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1323,
                        "src": "4686:5:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Trade_$995_storage_ptr",
                          "typeString": "struct PhotoNFTTradable.Trade storage pointer"
                        }
                      },
                      "id": 1333,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "seller",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 986,
                      "src": "4686:12:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 1334,
                      "name": "_newSeller",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1318,
                      "src": "4701:10:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "4686:25:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 1336,
                  "nodeType": "ExpressionStatement",
                  "src": "4686:25:6"
                }
              ]
            },
            "id": 1338,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_updateSeller",
            "nameLocation": "4537:13:6",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1319,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1314,
                  "mutability": "mutable",
                  "name": "photoNFT",
                  "nameLocation": "4560:8:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 1338,
                  "src": "4551:17:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_PhotoNFT_$133",
                    "typeString": "contract PhotoNFT"
                  },
                  "typeName": {
                    "id": 1313,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 1312,
                      "name": "PhotoNFT",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 133,
                      "src": "4551:8:6"
                    },
                    "referencedDeclaration": 133,
                    "src": "4551:8:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_PhotoNFT_$133",
                      "typeString": "contract PhotoNFT"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1316,
                  "mutability": "mutable",
                  "name": "_photoId",
                  "nameLocation": "4578:8:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 1338,
                  "src": "4570:16:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1315,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4570:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1318,
                  "mutability": "mutable",
                  "name": "_newSeller",
                  "nameLocation": "4596:10:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 1338,
                  "src": "4588:18:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1317,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4588:7:6",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4550:57:6"
            },
            "returnParameters": {
              "id": 1320,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4617:0:6"
            },
            "scope": 1362,
            "src": "4528:191:6",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 1360,
              "nodeType": "Block",
              "src": "4874:169:6",
              "statements": [
                {
                  "assignments": [
                    1350
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1350,
                      "mutability": "mutable",
                      "name": "trade",
                      "nameLocation": "4898:5:6",
                      "nodeType": "VariableDeclaration",
                      "scope": 1360,
                      "src": "4885:18:6",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Trade_$995_memory_ptr",
                        "typeString": "struct PhotoNFTTradable.Trade"
                      },
                      "typeName": {
                        "id": 1349,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 1348,
                          "name": "Trade",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 995,
                          "src": "4885:5:6"
                        },
                        "referencedDeclaration": 995,
                        "src": "4885:5:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Trade_$995_storage_ptr",
                          "typeString": "struct PhotoNFTTradable.Trade"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1357,
                  "initialValue": {
                    "baseExpression": {
                      "id": 1351,
                      "name": "trades",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1000,
                      "src": "4906:6:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Trade_$995_storage_$",
                        "typeString": "mapping(address => struct PhotoNFTTradable.Trade storage ref)"
                      }
                    },
                    "id": 1356,
                    "indexExpression": {
                      "arguments": [
                        {
                          "id": 1354,
                          "name": "photoNFT",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1342,
                          "src": "4921:8:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_PhotoNFT_$133",
                            "typeString": "contract PhotoNFT"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_PhotoNFT_$133",
                            "typeString": "contract PhotoNFT"
                          }
                        ],
                        "id": 1353,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "4913:7:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 1352,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "4913:7:6",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 1355,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4913:17:6",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "4906:25:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Trade_$995_storage",
                      "typeString": "struct PhotoNFTTradable.Trade storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4885:46:6"
                },
                {
                  "expression": {
                    "id": 1358,
                    "name": "trade",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1350,
                    "src": "4949:5:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Trade_$995_memory_ptr",
                      "typeString": "struct PhotoNFTTradable.Trade memory"
                    }
                  },
                  "functionReturnParameters": 1347,
                  "id": 1359,
                  "nodeType": "Return",
                  "src": "4942:12:6"
                }
              ]
            },
            "documentation": {
              "id": 1339,
              "nodeType": "StructuredDocumentation",
              "src": "4729:60:6",
              "text": " @dev - Returns the details for a trade."
            },
            "functionSelector": "ab7a6c3e",
            "id": 1361,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getTrade",
            "nameLocation": "4804:8:6",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1343,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1342,
                  "mutability": "mutable",
                  "name": "photoNFT",
                  "nameLocation": "4822:8:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 1361,
                  "src": "4813:17:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_PhotoNFT_$133",
                    "typeString": "contract PhotoNFT"
                  },
                  "typeName": {
                    "id": 1341,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 1340,
                      "name": "PhotoNFT",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 133,
                      "src": "4813:8:6"
                    },
                    "referencedDeclaration": 133,
                    "src": "4813:8:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_PhotoNFT_$133",
                      "typeString": "contract PhotoNFT"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4812:19:6"
            },
            "returnParameters": {
              "id": 1347,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1346,
                  "mutability": "mutable",
                  "name": "trade_",
                  "nameLocation": "4866:6:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 1361,
                  "src": "4853:19:6",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Trade_$995_memory_ptr",
                    "typeString": "struct PhotoNFTTradable.Trade"
                  },
                  "typeName": {
                    "id": 1345,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 1344,
                      "name": "Trade",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 995,
                      "src": "4853:5:6"
                    },
                    "referencedDeclaration": 995,
                    "src": "4853:5:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Trade_$995_storage_ptr",
                      "typeString": "struct PhotoNFTTradable.Trade"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4852:21:6"
            },
            "scope": 1362,
            "src": "4795:248:6",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 1363,
        "src": "311:4735:6",
        "usedErrors": []
      }
    ],
    "src": "33:5015:6"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.9+commit.e5eed63a.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.4.3",
  "updatedAt": "2021-10-16T13:16:47.794Z",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "cancelTrade(address,uint256)": {
        "details": "Cancels a trade by the seller."
      },
      "getTrade(address)": {
        "details": "- Returns the details for a trade."
      },
      "openTrade(address,uint256)": {
        "details": "Opens a trade by the seller."
      },
      "openTradeWhenCreateNewPhotoNFT(address,uint256,uint256)": {
        "details": "Opens a new trade. Puts _photoId in escrow.",
        "params": {
          "_photoId": "The id for the photoId to trade.",
          "_photoPrice": "The amount of currency for which to trade the photoId."
        }
      },
      "transferOwnershipOfPhotoNFT(address,uint256,address)": {
        "details": "Executes a trade. Must have approved this contract to transfer the amount of currency specified to the seller. Transfers ownership of the photoId to the filler."
      },
      "updatePremiumStatus(address,uint256,bool)": {
        "details": "Opens a trade by the seller."
      }
    },
    "title": "- PhotoNFTTradable contract",
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "openTradeWhenCreateNewPhotoNFT(address,uint256,uint256)": {
        "notice": "- This method is only executed when a seller create a new PhotoNFT"
      }
    },
    "notice": "- This contract has role that put on sale of photoNFTs",
    "version": 1
  }
}